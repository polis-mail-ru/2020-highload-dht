<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1045"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1045"> </text>
<g id="frames">
<g>
<title>all (6,348 samples, 100.00%)</title><rect x="10.0" y="1011.0" width="1180.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="13.0" y="1022.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.05%)</title><rect x="10.0" y="995.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.05%)</title><rect x="10.0" y="979.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.90] (3 samples, 0.05%)</title><rect x="10.0" y="963.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (3 samples, 0.05%)</title><rect x="10.0" y="947.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (2 samples, 0.03%)</title><rect x="10.0" y="931.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>[not_walkable_Java] (20 samples, 0.32%)</title><rect x="10.6" y="995.0" width="3.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.6" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (14 samples, 0.22%)</title><rect x="10.7" y="979.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.7" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (13 samples, 0.20%)</title><rect x="10.7" y="963.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.7" y="974.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.03%)</title><rect x="10.7" y="947.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.7" y="958.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (11 samples, 0.17%)</title><rect x="11.1" y="947.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.1" y="958.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (2 samples, 0.03%)</title><rect x="11.3" y="931.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.3" y="942.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (2 samples, 0.03%)</title><rect x="11.7" y="931.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.7" y="942.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (5 samples, 0.08%)</title><rect x="12.0" y="931.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.0" y="942.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.05%)</title><rect x="12.2" y="915.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.2" y="926.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="12.4" y="899.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.4" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.05%)</title><rect x="13.3" y="979.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="16.3" y="990.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (2 samples, 0.03%)</title><rect x="13.5" y="963.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="16.5" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.03%)</title><rect x="13.9" y="979.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="16.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="14.3" y="995.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="17.3" y="1006.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (2 samples, 0.03%)</title><rect x="14.5" y="979.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="17.5" y="990.0"></text>
</g>
<g>
<title>[unknown_Java] (8 samples, 0.13%)</title><rect x="14.8" y="995.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="17.8" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="15.0" y="979.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.0" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (3 samples, 0.05%)</title><rect x="15.6" y="979.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="18.6" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.03%)</title><rect x="16.5" y="995.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="19.5" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="16.5" y="979.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="19.5" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="16.5" y="963.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="19.5" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="16.5" y="947.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="19.5" y="958.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="16.5" y="931.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="19.5" y="942.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="16.5" y="915.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="19.5" y="926.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.03%)</title><rect x="16.5" y="899.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="19.5" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4,753 samples, 74.87%)</title><rect x="16.9" y="995.0" width="883.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.9" y="1006.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,753 samples, 74.87%)</title><rect x="16.9" y="979.0" width="883.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.9" y="990.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,753 samples, 74.87%)</title><rect x="16.9" y="963.0" width="883.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.9" y="974.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (13 samples, 0.20%)</title><rect x="17.1" y="947.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.20%)</title><rect x="17.1" y="931.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.20%)</title><rect x="17.1" y="915.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.16%)</title><rect x="17.6" y="899.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (603 samples, 9.50%)</title><rect x="19.5" y="947.0" width="112.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.5" y="958.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (603 samples, 9.50%)</title><rect x="19.5" y="931.0" width="112.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.5" y="942.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (3 samples, 0.05%)</title><rect x="22.6" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.05%)</title><rect x="22.6" y="899.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.05%)</title><rect x="22.6" y="883.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.05%)</title><rect x="22.6" y="867.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (3 samples, 0.05%)</title><rect x="22.6" y="851.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (469 samples, 7.39%)</title><rect x="23.2" y="915.0" width="87.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.2" y="926.0">java/util/..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.05%)</title><rect x="23.9" y="899.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.05%)</title><rect x="23.9" y="883.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (12 samples, 0.19%)</title><rect x="24.7" y="899.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (12 samples, 0.19%)</title><rect x="24.7" y="883.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.19%)</title><rect x="24.7" y="867.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (64 samples, 1.01%)</title><rect x="26.9" y="899.0" width="11.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (64 samples, 1.01%)</title><rect x="26.9" y="883.0" width="11.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (57 samples, 0.90%)</title><rect x="27.8" y="867.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (57 samples, 0.90%)</title><rect x="27.8" y="851.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.03%)</title><rect x="28.4" y="835.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (52 samples, 0.82%)</title><rect x="28.8" y="835.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.8" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.16%)</title><rect x="29.0" y="819.0" width="1.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="32.0" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.05%)</title><rect x="29.3" y="803.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="32.3" y="814.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="30.1" y="803.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="33.1" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.03%)</title><rect x="30.4" y="803.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="33.4" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (40 samples, 0.63%)</title><rect x="30.8" y="819.0" width="7.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="33.8" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.55%)</title><rect x="31.7" y="803.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="34.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 0.55%)</title><rect x="31.7" y="787.0" width="6.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="34.7" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 0.52%)</title><rect x="32.1" y="771.0" width="6.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="35.1" y="782.0"></text>
</g>
<g>
<title>do_futex (33 samples, 0.52%)</title><rect x="32.1" y="755.0" width="6.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="35.1" y="766.0"></text>
</g>
<g>
<title>futex_wake (33 samples, 0.52%)</title><rect x="32.1" y="739.0" width="6.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="35.1" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="32.3" y="723.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="35.3" y="734.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="32.7" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="35.7" y="734.0"></text>
</g>
<g>
<title>wake_up_q (28 samples, 0.44%)</title><rect x="33.0" y="723.0" width="5.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="36.0" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (28 samples, 0.44%)</title><rect x="33.0" y="707.0" width="5.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="36.0" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (28 samples, 0.44%)</title><rect x="33.0" y="691.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="36.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.03%)</title><rect x="38.4" y="867.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="41.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (6 samples, 0.09%)</title><rect x="38.8" y="899.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (6 samples, 0.09%)</title><rect x="38.8" y="883.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (378 samples, 5.95%)</title><rect x="39.9" y="899.0" width="70.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.9" y="910.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (376 samples, 5.92%)</title><rect x="40.3" y="883.0" width="69.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.3" y="894.0">jdk/int..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.05%)</title><rect x="40.7" y="867.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="43.7" y="878.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.05%)</title><rect x="41.2" y="867.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="44.2" y="878.0"></text>
</g>
<g>
<title>Unsafe_Park (136 samples, 2.14%)</title><rect x="41.8" y="867.0" width="25.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="44.8" y="878.0">U..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (5 samples, 0.08%)</title><rect x="44.2" y="851.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="47.2" y="862.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.05%)</title><rect x="45.1" y="851.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="48.1" y="862.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (31 samples, 0.49%)</title><rect x="45.9" y="851.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="48.9" y="862.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (11 samples, 0.17%)</title><rect x="48.3" y="835.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="51.3" y="846.0"></text>
</g>
<g>
<title>update_get_addr (3 samples, 0.05%)</title><rect x="49.8" y="819.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="52.8" y="830.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.03%)</title><rect x="50.3" y="835.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="53.3" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="50.7" y="835.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="53.7" y="846.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.03%)</title><rect x="51.3" y="835.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="54.3" y="846.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="51.6" y="851.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="54.6" y="862.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.03%)</title><rect x="52.0" y="851.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="55.0" y="862.0"></text>
</g>
<g>
<title>__lll_unlock_wake (64 samples, 1.01%)</title><rect x="52.4" y="851.0" width="11.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="55.4" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.47%)</title><rect x="58.7" y="835.0" width="5.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="61.7" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.05%)</title><rect x="58.7" y="819.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="61.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.43%)</title><rect x="59.3" y="819.0" width="5.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="62.3" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.25%)</title><rect x="61.3" y="803.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="64.3" y="814.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.24%)</title><rect x="61.5" y="787.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="64.5" y="798.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.13%)</title><rect x="62.0" y="771.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="65.0" y="782.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.05%)</title><rect x="63.0" y="755.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="66.0" y="766.0"></text>
</g>
<g>
<title>hash_futex (4 samples, 0.06%)</title><rect x="63.5" y="771.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="66.5" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="64.3" y="851.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="67.3" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (3 samples, 0.05%)</title><rect x="64.8" y="851.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="67.8" y="862.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="65.6" y="851.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="68.6" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="66.7" y="851.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="69.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (229 samples, 3.61%)</title><rect x="67.1" y="867.0" width="42.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="70.1" y="878.0">[unk..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.03%)</title><rect x="67.1" y="851.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="70.1" y="862.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.08%)</title><rect x="67.4" y="851.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="70.4" y="862.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.05%)</title><rect x="68.6" y="851.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="71.6" y="862.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (218 samples, 3.43%)</title><rect x="69.1" y="851.0" width="40.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="72.1" y="862.0">pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (60 samples, 0.95%)</title><rect x="98.5" y="835.0" width="11.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="101.5" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.06%)</title><rect x="98.5" y="819.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="101.5" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 0.88%)</title><rect x="99.2" y="819.0" width="10.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="102.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (43 samples, 0.68%)</title><rect x="101.6" y="803.0" width="8.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="104.6" y="814.0"></text>
</g>
<g>
<title>do_futex (41 samples, 0.65%)</title><rect x="101.8" y="787.0" width="7.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="104.8" y="798.0"></text>
</g>
<g>
<title>futex_wait (38 samples, 0.60%)</title><rect x="102.4" y="771.0" width="7.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="105.4" y="782.0"></text>
</g>
<g>
<title>futex_wait_queue_me (9 samples, 0.14%)</title><rect x="102.8" y="755.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="105.8" y="766.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.03%)</title><rect x="103.5" y="739.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="106.5" y="750.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="103.9" y="739.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="106.9" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.05%)</title><rect x="103.9" y="723.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="106.9" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="104.1" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="107.1" y="718.0"></text>
</g>
<g>
<title>futex_wait_setup (22 samples, 0.35%)</title><rect x="104.4" y="755.0" width="4.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="107.4" y="766.0"></text>
</g>
<g>
<title>_raw_spin_lock (4 samples, 0.06%)</title><rect x="105.5" y="739.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="108.5" y="750.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="106.3" y="739.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="109.3" y="750.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (2 samples, 0.03%)</title><rect x="106.7" y="739.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="109.7" y="750.0"></text>
</g>
<g>
<title>get_futex_value_locked (7 samples, 0.11%)</title><rect x="107.0" y="739.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="110.0" y="750.0"></text>
</g>
<g>
<title>hash_futex (4 samples, 0.06%)</title><rect x="108.5" y="755.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="111.5" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.05%)</title><rect x="109.6" y="867.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="112.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (18 samples, 0.28%)</title><rect x="110.4" y="915.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="113.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (18 samples, 0.28%)</title><rect x="110.4" y="899.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (18 samples, 0.28%)</title><rect x="110.4" y="883.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="113.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (7 samples, 0.11%)</title><rect x="112.1" y="867.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.11%)</title><rect x="112.1" y="851.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="115.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.11%)</title><rect x="112.1" y="835.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.1" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.03%)</title><rect x="112.1" y="819.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="115.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="112.4" y="819.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="115.4" y="830.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="112.4" y="803.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="115.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (96 samples, 1.51%)</title><rect x="113.7" y="915.0" width="17.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (96 samples, 1.51%)</title><rect x="113.7" y="899.0" width="17.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="116.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (96 samples, 1.51%)</title><rect x="113.7" y="883.0" width="17.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (96 samples, 1.51%)</title><rect x="113.7" y="867.0" width="17.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (88 samples, 1.39%)</title><rect x="115.2" y="851.0" width="16.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.2" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.22%)</title><rect x="115.6" y="835.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="118.6" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="115.8" y="819.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="118.8" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="116.5" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="119.5" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.05%)</title><rect x="117.6" y="819.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="120.6" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (71 samples, 1.12%)</title><rect x="118.2" y="835.0" width="13.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="121.2" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 0.91%)</title><rect x="120.6" y="819.0" width="10.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="123.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (58 samples, 0.91%)</title><rect x="120.6" y="803.0" width="10.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="123.6" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (53 samples, 0.83%)</title><rect x="121.5" y="787.0" width="9.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="124.5" y="798.0"></text>
</g>
<g>
<title>do_futex (51 samples, 0.80%)</title><rect x="121.9" y="771.0" width="9.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="124.9" y="782.0"></text>
</g>
<g>
<title>futex_wake (50 samples, 0.79%)</title><rect x="121.9" y="755.0" width="9.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="124.9" y="766.0"></text>
</g>
<g>
<title>wake_up_q (45 samples, 0.71%)</title><rect x="122.8" y="739.0" width="8.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="125.8" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (45 samples, 0.71%)</title><rect x="122.8" y="723.0" width="8.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="125.8" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (45 samples, 0.71%)</title><rect x="122.8" y="707.0" width="8.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="125.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$133/1918973104.run (385 samples, 6.06%)</title><rect x="131.6" y="947.0" width="71.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="134.6" y="958.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$flush$10 (385 samples, 6.06%)</title><rect x="131.6" y="931.0" width="71.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.6" y="942.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.serialize (385 samples, 6.06%)</title><rect x="131.6" y="915.0" width="71.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="134.6" y="926.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.serialize (385 samples, 6.06%)</title><rect x="131.6" y="899.0" width="71.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.6" y="910.0">ru/mail/..</text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.11%)</title><rect x="131.9" y="883.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.9" y="894.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7 samples, 0.11%)</title><rect x="131.9" y="867.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.9" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (7 samples, 0.11%)</title><rect x="131.9" y="851.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.9" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7 samples, 0.11%)</title><rect x="131.9" y="835.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.9" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$139/650341169.getAsBoolean (7 samples, 0.11%)</title><rect x="131.9" y="819.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.9" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (7 samples, 0.11%)</title><rect x="131.9" y="803.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (7 samples, 0.11%)</title><rect x="131.9" y="787.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.05%)</title><rect x="132.1" y="771.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.05%)</title><rect x="132.1" y="755.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="135.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (3 samples, 0.05%)</title><rect x="132.1" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.03%)</title><rect x="132.9" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (376 samples, 5.92%)</title><rect x="133.2" y="883.0" width="69.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.2" y="894.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.08%)</title><rect x="133.4" y="867.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.4" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.08%)</title><rect x="133.4" y="851.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.4" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (5 samples, 0.08%)</title><rect x="133.4" y="835.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.4" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (365 samples, 5.75%)</title><rect x="134.4" y="867.0" width="67.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="137.4" y="878.0">sun/nio..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (6 samples, 0.09%)</title><rect x="134.5" y="851.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.5" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.08%)</title><rect x="134.5" y="835.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.5" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.08%)</title><rect x="134.5" y="819.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="137.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (341 samples, 5.37%)</title><rect x="135.7" y="851.0" width="63.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="138.7" y="862.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (341 samples, 5.37%)</title><rect x="135.7" y="835.0" width="63.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.7" y="846.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (340 samples, 5.36%)</title><rect x="135.8" y="819.0" width="63.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.8" y="830.0">sun/nio..</text>
</g>
<g>
<title>[unknown] (337 samples, 5.31%)</title><rect x="136.2" y="803.0" width="62.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="139.2" y="814.0">[unkno..</text>
</g>
<g>
<title>__libc_write (334 samples, 5.26%)</title><rect x="136.2" y="787.0" width="62.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="139.2" y="798.0">__libc..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (270 samples, 4.25%)</title><rect x="148.1" y="771.0" width="50.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="151.1" y="782.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (270 samples, 4.25%)</title><rect x="148.1" y="755.0" width="50.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="151.1" y="766.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_write (251 samples, 3.95%)</title><rect x="151.6" y="739.0" width="46.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="154.6" y="750.0">__x6..</text>
</g>
<g>
<title>ksys_write (251 samples, 3.95%)</title><rect x="151.6" y="723.0" width="46.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="154.6" y="734.0">ksys..</text>
</g>
<g>
<title>__f_unlock_pos (2 samples, 0.03%)</title><rect x="151.8" y="707.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="154.8" y="718.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="151.8" y="691.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="154.8" y="702.0"></text>
</g>
<g>
<title>__fdget_pos (9 samples, 0.14%)</title><rect x="152.2" y="707.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="155.2" y="718.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.09%)</title><rect x="152.2" y="691.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="155.2" y="702.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.09%)</title><rect x="152.2" y="675.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="155.2" y="686.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.05%)</title><rect x="153.3" y="691.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="156.3" y="702.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="154.1" y="707.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="157.1" y="718.0"></text>
</g>
<g>
<title>vfs_write (236 samples, 3.72%)</title><rect x="154.4" y="707.0" width="43.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="157.4" y="718.0">vfs_..</text>
</g>
<g>
<title>__sb_start_write (4 samples, 0.06%)</title><rect x="155.0" y="691.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="158.0" y="702.0"></text>
</g>
<g>
<title>__vfs_write (219 samples, 3.45%)</title><rect x="155.7" y="691.0" width="40.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="158.7" y="702.0">__v..</text>
</g>
<g>
<title>ext4_file_write_iter (2 samples, 0.03%)</title><rect x="155.7" y="675.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="158.7" y="686.0"></text>
</g>
<g>
<title>new_sync_write (217 samples, 3.42%)</title><rect x="156.1" y="675.0" width="40.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="159.1" y="686.0">new..</text>
</g>
<g>
<title>ext4_file_write_iter (214 samples, 3.37%)</title><rect x="156.5" y="659.0" width="39.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="159.5" y="670.0">ext..</text>
</g>
<g>
<title>__generic_file_write_iter (207 samples, 3.26%)</title><rect x="157.0" y="643.0" width="38.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="160.0" y="654.0">__g..</text>
</g>
<g>
<title>ext4_da_write_end (2 samples, 0.03%)</title><rect x="157.4" y="627.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="160.4" y="638.0"></text>
</g>
<g>
<title>file_update_time (5 samples, 0.08%)</title><rect x="158.0" y="627.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="161.0" y="638.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.05%)</title><rect x="158.3" y="611.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="161.3" y="622.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.03%)</title><rect x="158.5" y="595.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="161.5" y="606.0"></text>
</g>
<g>
<title>generic_perform_write (197 samples, 3.10%)</title><rect x="158.9" y="627.0" width="36.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="161.9" y="638.0">gen..</text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (4 samples, 0.06%)</title><rect x="159.3" y="611.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="162.3" y="622.0"></text>
</g>
<g>
<title>ext4_da_write_begin (45 samples, 0.71%)</title><rect x="160.0" y="611.0" width="8.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="163.0" y="622.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (32 samples, 0.50%)</title><rect x="160.2" y="595.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="163.2" y="606.0"></text>
</g>
<g>
<title>ext4_journal_check_start (5 samples, 0.08%)</title><rect x="160.6" y="579.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="163.6" y="590.0"></text>
</g>
<g>
<title>jbd2__journal_start (25 samples, 0.39%)</title><rect x="161.5" y="579.0" width="4.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="164.5" y="590.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.03%)</title><rect x="162.2" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="165.2" y="574.0"></text>
</g>
<g>
<title>start_this_handle (19 samples, 0.30%)</title><rect x="162.6" y="563.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="165.6" y="574.0"></text>
</g>
<g>
<title>_raw_read_lock (6 samples, 0.09%)</title><rect x="164.5" y="547.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="167.5" y="558.0"></text>
</g>
<g>
<title>add_transaction_credits (3 samples, 0.05%)</title><rect x="165.6" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="168.6" y="558.0"></text>
</g>
<g>
<title>ext4_block_write_begin (4 samples, 0.06%)</title><rect x="166.1" y="595.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="169.1" y="606.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (6 samples, 0.09%)</title><rect x="167.1" y="595.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="170.1" y="606.0"></text>
</g>
<g>
<title>pagecache_get_page (6 samples, 0.09%)</title><rect x="167.1" y="579.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="170.1" y="590.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.03%)</title><rect x="167.8" y="563.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="170.8" y="574.0"></text>
</g>
<g>
<title>ext4_da_write_end (134 samples, 2.11%)</title><rect x="168.4" y="611.0" width="24.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="171.4" y="622.0">e..</text>
</g>
<g>
<title>__ext4_journal_stop (19 samples, 0.30%)</title><rect x="169.1" y="595.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="172.1" y="606.0"></text>
</g>
<g>
<title>jbd2_journal_stop (19 samples, 0.30%)</title><rect x="169.1" y="579.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="172.1" y="590.0"></text>
</g>
<g>
<title>__wake_up (3 samples, 0.05%)</title><rect x="171.7" y="563.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="174.7" y="574.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="171.9" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="174.9" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="171.9" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="174.9" y="542.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="172.3" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="175.3" y="574.0"></text>
</g>
<g>
<title>generic_write_end (111 samples, 1.75%)</title><rect x="172.6" y="595.0" width="20.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="175.6" y="606.0"></text>
</g>
<g>
<title>__mark_inode_dirty (97 samples, 1.53%)</title><rect x="173.8" y="579.0" width="18.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="176.8" y="590.0"></text>
</g>
<g>
<title>ext4_dirty_inode (92 samples, 1.45%)</title><rect x="174.7" y="563.0" width="17.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="177.7" y="574.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 0.05%)</title><rect x="175.1" y="547.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="178.1" y="558.0"></text>
</g>
<g>
<title>ext4_journal_check_start (2 samples, 0.03%)</title><rect x="175.3" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="178.3" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.03%)</title><rect x="175.6" y="547.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="178.6" y="558.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.03%)</title><rect x="175.6" y="531.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="178.6" y="542.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (84 samples, 1.32%)</title><rect x="176.2" y="547.0" width="15.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="179.2" y="558.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (63 samples, 0.99%)</title><rect x="176.4" y="531.0" width="11.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="179.4" y="542.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (4 samples, 0.06%)</title><rect x="179.3" y="515.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="182.3" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (3 samples, 0.05%)</title><rect x="179.5" y="499.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="182.5" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="180.1" y="515.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="183.1" y="526.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (39 samples, 0.61%)</title><rect x="180.5" y="515.0" width="7.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="183.5" y="526.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (38 samples, 0.60%)</title><rect x="180.6" y="499.0" width="7.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="183.6" y="510.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (16 samples, 0.25%)</title><rect x="181.4" y="483.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="184.4" y="494.0"></text>
</g>
<g>
<title>crypto_shash_update (18 samples, 0.28%)</title><rect x="184.4" y="483.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="187.4" y="494.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (17 samples, 0.27%)</title><rect x="184.5" y="467.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="187.5" y="478.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (20 samples, 0.32%)</title><rect x="188.1" y="531.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="191.1" y="542.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (13 samples, 0.20%)</title><rect x="188.3" y="515.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="191.3" y="526.0"></text>
</g>
<g>
<title>__getblk_gfp (6 samples, 0.09%)</title><rect x="189.0" y="499.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="192.0" y="510.0"></text>
</g>
<g>
<title>__find_get_block (4 samples, 0.06%)</title><rect x="189.4" y="483.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="192.4" y="494.0"></text>
</g>
<g>
<title>ext4_get_group_desc (3 samples, 0.05%)</title><rect x="190.1" y="499.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="193.1" y="510.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (5 samples, 0.08%)</title><rect x="190.7" y="515.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.7" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (3 samples, 0.05%)</title><rect x="190.9" y="499.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="193.9" y="510.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (2 samples, 0.03%)</title><rect x="191.1" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="194.1" y="494.0"></text>
</g>
<g>
<title>block_write_end (5 samples, 0.08%)</title><rect x="191.8" y="579.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="194.8" y="590.0"></text>
</g>
<g>
<title>__block_commit_write.isra.41 (5 samples, 0.08%)</title><rect x="191.8" y="563.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="194.8" y="574.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.03%)</title><rect x="192.9" y="579.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="195.9" y="590.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (7 samples, 0.11%)</title><rect x="193.5" y="611.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="196.5" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (5 samples, 0.08%)</title><rect x="193.8" y="595.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="196.8" y="606.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (4 samples, 0.06%)</title><rect x="194.8" y="611.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="197.8" y="622.0"></text>
</g>
<g>
<title>down_write_trylock (4 samples, 0.06%)</title><rect x="195.5" y="643.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="198.5" y="654.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.03%)</title><rect x="196.4" y="691.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="199.4" y="702.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.13%)</title><rect x="196.8" y="691.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="199.8" y="702.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.06%)</title><rect x="196.8" y="675.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="199.8" y="686.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.06%)</title><rect x="197.6" y="675.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="200.6" y="686.0"></text>
</g>
<g>
<title>selinux_file_permission (3 samples, 0.05%)</title><rect x="197.7" y="659.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="200.7" y="670.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="198.3" y="787.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="201.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (11 samples, 0.17%)</title><rect x="199.0" y="851.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.0" y="862.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (11 samples, 0.17%)</title><rect x="199.0" y="835.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="202.0" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (10 samples, 0.16%)</title><rect x="199.0" y="819.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.0" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (10 samples, 0.16%)</title><rect x="199.0" y="803.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="202.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (6 samples, 0.09%)</title><rect x="201.1" y="851.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.1" y="862.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.09%)</title><rect x="201.1" y="835.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.1" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (6 samples, 0.09%)</title><rect x="201.1" y="819.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="204.1" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (6 samples, 0.09%)</title><rect x="201.1" y="803.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.08%)</title><rect x="202.2" y="867.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.2" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.03%)</title><rect x="202.8" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.8" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$100/1493404285.run (3,751 samples, 59.09%)</title><rect x="203.1" y="947.0" width="697.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.1" y="958.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$100/1493404285.run</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$4 (3,751 samples, 59.09%)</title><rect x="203.1" y="931.0" width="697.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.1" y="942.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$4</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (3,751 samples, 59.09%)</title><rect x="203.1" y="915.0" width="697.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.1" y="926.0">ru/mail/polis/service/zvladn7/AsyncService.process</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$94/1553196913.process (3,749 samples, 59.06%)</title><rect x="203.5" y="899.0" width="696.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.5" y="910.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$94/1553196913.process</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$3 (3,749 samples, 59.06%)</title><rect x="203.5" y="883.0" width="696.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.5" y="894.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$3</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleUpsert (3,749 samples, 59.06%)</title><rect x="203.5" y="867.0" width="696.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.5" y="878.0">ru/mail/polis/service/zvladn7/ServiceHelper.handleUpsert</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.handleOrProxy (3,735 samples, 58.84%)</title><rect x="203.5" y="851.0" width="694.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.5" y="862.0">ru/mail/polis/service/zvladn7/ServiceHelper.handleOrProxy</text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.06%)</title><rect x="207.2" y="835.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.2" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toString (70 samples, 1.10%)</title><rect x="208.0" y="835.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (50 samples, 0.79%)</title><rect x="208.0" y="819.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="211.0" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (45 samples, 0.71%)</title><rect x="208.0" y="803.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="211.0" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="215.0" y="787.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="218.0" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="215.4" y="787.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="218.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.08%)</title><rect x="216.3" y="803.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.3" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.08%)</title><rect x="216.3" y="787.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.3" y="798.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.08%)</title><rect x="216.3" y="771.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.3" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.08%)</title><rect x="216.3" y="755.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.3" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="216.7" y="739.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="219.7" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="216.9" y="723.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="219.9" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="216.9" y="707.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="219.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.03%)</title><rect x="217.3" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="217.3" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (17 samples, 0.27%)</title><rect x="217.8" y="819.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.8" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (8 samples, 0.13%)</title><rect x="218.9" y="803.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="221.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (6 samples, 0.09%)</title><rect x="219.3" y="787.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="222.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (6 samples, 0.09%)</title><rect x="219.3" y="771.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="222.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (2 samples, 0.03%)</title><rect x="220.4" y="803.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.4" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="220.4" y="787.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="223.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (4 samples, 0.06%)</title><rect x="221.0" y="835.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="224.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (25 samples, 0.39%)</title><rect x="221.7" y="835.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="224.7" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (17 samples, 0.27%)</title><rect x="222.7" y="819.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="225.7" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (17 samples, 0.27%)</title><rect x="222.7" y="803.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="225.7" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (16 samples, 0.25%)</title><rect x="222.7" y="787.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="225.7" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (13 samples, 0.20%)</title><rect x="222.7" y="771.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="225.7" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (13 samples, 0.20%)</title><rect x="222.7" y="755.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (8 samples, 0.13%)</title><rect x="223.6" y="739.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (8 samples, 0.13%)</title><rect x="223.6" y="723.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="226.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$131/202169536.accept (8 samples, 0.13%)</title><rect x="223.6" y="707.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.6" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.13%)</title><rect x="223.6" y="691.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="226.6" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.13%)</title><rect x="223.6" y="675.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="226.6" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.13%)</title><rect x="223.6" y="659.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="226.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.13%)</title><rect x="223.6" y="643.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.6" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (8 samples, 0.13%)</title><rect x="223.6" y="627.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.05%)</title><rect x="225.1" y="771.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="228.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (3 samples, 0.05%)</title><rect x="225.8" y="819.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="228.8" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.05%)</title><rect x="225.8" y="803.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.8" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (7 samples, 0.11%)</title><rect x="226.4" y="835.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.4" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (7 samples, 0.11%)</title><rect x="226.4" y="819.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="229.4" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (7 samples, 0.11%)</title><rect x="226.4" y="803.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.4" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (7 samples, 0.11%)</title><rect x="226.4" y="787.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="229.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (7 samples, 0.11%)</title><rect x="226.4" y="771.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="229.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (844 samples, 13.30%)</title><rect x="227.7" y="835.0" width="156.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.7" y="846.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.05%)</title><rect x="228.2" y="819.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="231.2" y="830.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.05%)</title><rect x="228.2" y="803.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="231.2" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.05%)</title><rect x="228.2" y="787.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="231.2" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (2 samples, 0.03%)</title><rect x="228.2" y="771.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="231.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (14 samples, 0.22%)</title><rect x="228.8" y="819.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.22%)</title><rect x="228.8" y="803.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.22%)</title><rect x="228.8" y="787.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.8" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.08%)</title><rect x="230.5" y="771.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="233.5" y="782.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.06%)</title><rect x="230.6" y="755.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="233.6" y="766.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.05%)</title><rect x="230.8" y="739.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="233.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (815 samples, 12.84%)</title><rect x="231.4" y="819.0" width="151.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="234.4" y="830.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (39 samples, 0.61%)</title><rect x="232.5" y="803.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.5" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="236.4" y="787.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="239.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="236.8" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="239.8" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="236.8" y="771.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="239.8" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="236.8" y="755.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="239.8" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="236.8" y="739.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="239.8" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="236.8" y="723.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="239.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (13 samples, 0.20%)</title><rect x="237.3" y="787.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (13 samples, 0.20%)</title><rect x="237.3" y="771.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (13 samples, 0.20%)</title><rect x="237.3" y="755.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="240.3" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (770 samples, 12.13%)</title><rect x="239.8" y="803.0" width="143.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="242.8" y="814.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session.write (770 samples, 12.13%)</title><rect x="239.8" y="787.0" width="143.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="242.8" y="798.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (765 samples, 12.05%)</title><rect x="240.7" y="771.0" width="142.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="243.7" y="782.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (761 samples, 11.99%)</title><rect x="241.4" y="755.0" width="141.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="244.4" y="766.0">one/nio/net/Native..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (19 samples, 0.30%)</title><rect x="242.4" y="739.0" width="3.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="245.4" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (2 samples, 0.03%)</title><rect x="243.5" y="723.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="246.5" y="734.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="243.8" y="723.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="246.8" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.13%)</title><rect x="244.2" y="723.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="247.2" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.06%)</title><rect x="244.6" y="707.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="247.6" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (2 samples, 0.03%)</title><rect x="245.3" y="707.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="248.3" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.05%)</title><rect x="245.9" y="739.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="248.9" y="750.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.05%)</title><rect x="246.4" y="739.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="249.4" y="750.0"></text>
</g>
<g>
<title>__send (729 samples, 11.48%)</title><rect x="247.0" y="739.0" width="135.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="250.0" y="750.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (690 samples, 10.87%)</title><rect x="254.3" y="723.0" width="128.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="257.3" y="734.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (689 samples, 10.85%)</title><rect x="254.4" y="707.0" width="128.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="257.4" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (673 samples, 10.60%)</title><rect x="257.4" y="691.0" width="125.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="260.4" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (671 samples, 10.57%)</title><rect x="257.6" y="675.0" width="124.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="260.6" y="686.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (654 samples, 10.30%)</title><rect x="259.1" y="659.0" width="121.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="262.1" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (632 samples, 9.96%)</title><rect x="259.5" y="643.0" width="117.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="262.5" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (629 samples, 9.91%)</title><rect x="259.8" y="627.0" width="117.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="262.8" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="260.0" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="263.0" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="260.6" y="611.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="263.6" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="260.6" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="263.6" y="606.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.09%)</title><rect x="260.9" y="611.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="263.9" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="261.3" y="595.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="264.3" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="261.7" y="595.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="264.7" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.05%)</title><rect x="262.1" y="611.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="265.1" y="622.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="262.8" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="265.8" y="622.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4 samples, 0.06%)</title><rect x="263.2" y="611.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="266.2" y="622.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.06%)</title><rect x="263.9" y="611.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="266.9" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (600 samples, 9.45%)</title><rect x="264.7" y="611.0" width="111.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="267.7" y="622.0">tcp_sendmsg_l..</text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.09%)</title><rect x="267.1" y="595.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="270.1" y="606.0"></text>
</g>
<g>
<title>_copy_from_iter_full (8 samples, 0.13%)</title><rect x="268.2" y="595.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="271.2" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (7 samples, 0.11%)</title><rect x="268.2" y="579.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="271.2" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (5 samples, 0.08%)</title><rect x="269.9" y="595.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="272.9" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (5 samples, 0.08%)</title><rect x="269.9" y="579.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="272.9" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (32 samples, 0.50%)</title><rect x="270.8" y="595.0" width="5.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="273.8" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (30 samples, 0.47%)</title><rect x="271.2" y="579.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="274.2" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (8 samples, 0.13%)</title><rect x="271.7" y="563.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="274.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (7 samples, 0.11%)</title><rect x="271.7" y="547.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="274.7" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (12 samples, 0.19%)</title><rect x="273.6" y="563.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="276.6" y="574.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.06%)</title><rect x="275.8" y="563.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="278.8" y="574.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.06%)</title><rect x="275.8" y="547.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="278.8" y="558.0"></text>
</g>
<g>
<title>tcp_push (517 samples, 8.14%)</title><rect x="277.3" y="595.0" width="96.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="280.3" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (516 samples, 8.13%)</title><rect x="277.3" y="579.0" width="95.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="280.3" y="590.0">__tcp_push_..</text>
</g>
<g>
<title>tcp_write_xmit (513 samples, 8.08%)</title><rect x="277.9" y="563.0" width="95.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="280.9" y="574.0">tcp_write_x..</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="279.9" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="282.9" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (481 samples, 7.58%)</title><rect x="280.3" y="547.0" width="89.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="283.3" y="558.0">__tcp_tran..</text>
</g>
<g>
<title>ip_queue_xmit (453 samples, 7.14%)</title><rect x="283.4" y="531.0" width="84.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="286.4" y="542.0">ip_queue_x..</text>
</g>
<g>
<title>__ip_queue_xmit (450 samples, 7.09%)</title><rect x="283.4" y="515.0" width="83.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="286.4" y="526.0">__ip_queu..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.05%)</title><rect x="284.0" y="499.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="287.0" y="510.0"></text>
</g>
<g>
<title>ip_local_out (437 samples, 6.88%)</title><rect x="284.7" y="499.0" width="81.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="287.7" y="510.0">ip_local_..</text>
</g>
<g>
<title>__ip_local_out (6 samples, 0.09%)</title><rect x="285.1" y="483.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="288.1" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.06%)</title><rect x="285.5" y="467.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="288.5" y="478.0"></text>
</g>
<g>
<title>netlbl_enabled (3 samples, 0.05%)</title><rect x="285.5" y="451.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="288.5" y="462.0"></text>
</g>
<g>
<title>ip_output (426 samples, 6.71%)</title><rect x="286.4" y="483.0" width="79.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="289.4" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (403 samples, 6.35%)</title><rect x="287.0" y="467.0" width="74.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="290.0" y="478.0">ip_finis..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="287.2" y="451.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="290.2" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (395 samples, 6.22%)</title><rect x="287.7" y="451.0" width="73.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="290.7" y="462.0">__ip_fin..</text>
</g>
<g>
<title>ip_finish_output2 (390 samples, 6.14%)</title><rect x="288.5" y="435.0" width="72.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="291.5" y="446.0">ip_finis..</text>
</g>
<g>
<title>__local_bh_enable_ip (325 samples, 5.12%)</title><rect x="291.1" y="419.0" width="60.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="294.1" y="430.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.20 (325 samples, 5.12%)</title><rect x="291.1" y="403.0" width="60.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="294.1" y="414.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (322 samples, 5.07%)</title><rect x="291.6" y="387.0" width="59.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="294.6" y="398.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (320 samples, 5.04%)</title><rect x="291.6" y="371.0" width="59.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="294.6" y="382.0">__soft..</text>
</g>
<g>
<title>__kfree_skb_flush (4 samples, 0.06%)</title><rect x="292.9" y="355.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="295.9" y="366.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="293.7" y="355.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="296.7" y="366.0"></text>
</g>
<g>
<title>net_rx_action (304 samples, 4.79%)</title><rect x="294.0" y="355.0" width="56.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="297.0" y="366.0">net_rx..</text>
</g>
<g>
<title>process_backlog (301 samples, 4.74%)</title><rect x="294.6" y="339.0" width="55.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="297.6" y="350.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (298 samples, 4.69%)</title><rect x="295.1" y="323.0" width="55.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="298.1" y="334.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (297 samples, 4.68%)</title><rect x="295.3" y="307.0" width="55.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="298.3" y="318.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (9 samples, 0.14%)</title><rect x="295.7" y="291.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="298.7" y="302.0"></text>
</g>
<g>
<title>ip_rcv (284 samples, 4.47%)</title><rect x="297.4" y="291.0" width="52.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="300.4" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (4 samples, 0.06%)</title><rect x="298.1" y="275.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="301.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (274 samples, 4.32%)</title><rect x="298.9" y="275.0" width="50.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="301.9" y="286.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (272 samples, 4.28%)</title><rect x="298.9" y="259.0" width="50.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="301.9" y="270.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (271 samples, 4.27%)</title><rect x="299.1" y="243.0" width="50.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="302.1" y="254.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (268 samples, 4.22%)</title><rect x="299.1" y="227.0" width="49.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="302.1" y="238.0">ip_pr..</text>
</g>
<g>
<title>sock_put (3 samples, 0.05%)</title><rect x="300.5" y="211.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="303.5" y="222.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="301.1" y="211.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="304.1" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (255 samples, 4.02%)</title><rect x="301.5" y="211.0" width="47.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="304.5" y="222.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.09%)</title><rect x="303.0" y="195.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="306.0" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="304.4" y="195.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="307.4" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (22 samples, 0.35%)</title><rect x="304.8" y="195.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="307.8" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="305.0" y="179.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="308.0" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.03%)</title><rect x="305.4" y="179.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="308.4" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (16 samples, 0.25%)</title><rect x="305.7" y="179.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="308.7" y="190.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (14 samples, 0.22%)</title><rect x="306.1" y="163.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="309.1" y="174.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (8 samples, 0.13%)</title><rect x="306.5" y="147.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="309.5" y="158.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (3 samples, 0.05%)</title><rect x="306.9" y="131.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="309.9" y="142.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (2 samples, 0.03%)</title><rect x="307.6" y="131.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="310.6" y="142.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.03%)</title><rect x="307.6" y="115.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="310.6" y="126.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (4 samples, 0.06%)</title><rect x="308.0" y="147.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="311.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (213 samples, 3.36%)</title><rect x="308.9" y="195.0" width="39.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="311.9" y="206.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (212 samples, 3.34%)</title><rect x="309.1" y="179.0" width="39.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="312.1" y="190.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.08%)</title><rect x="310.0" y="163.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="313.0" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.08%)</title><rect x="310.0" y="147.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="313.0" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.06%)</title><rect x="310.2" y="131.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="313.2" y="142.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.05%)</title><rect x="310.4" y="115.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="313.4" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="310.4" y="99.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="313.4" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (131 samples, 2.06%)</title><rect x="311.5" y="163.0" width="24.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="314.5" y="174.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (128 samples, 2.02%)</title><rect x="312.1" y="147.0" width="23.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="315.1" y="158.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (128 samples, 2.02%)</title><rect x="312.1" y="131.0" width="23.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="315.1" y="142.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (127 samples, 2.00%)</title><rect x="312.2" y="115.0" width="23.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="315.2" y="126.0">_..</text>
</g>
<g>
<title>tcp_ack (50 samples, 0.79%)</title><rect x="335.9" y="163.0" width="9.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="338.9" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (22 samples, 0.35%)</title><rect x="338.8" y="147.0" width="4.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="341.8" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.06%)</title><rect x="338.8" y="131.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="341.8" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.06%)</title><rect x="338.8" y="115.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="341.8" y="126.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.05%)</title><rect x="339.0" y="99.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="342.0" y="110.0"></text>
</g>
<g>
<title>skb_release_all (18 samples, 0.28%)</title><rect x="339.6" y="131.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="342.6" y="142.0"></text>
</g>
<g>
<title>skb_release_data (17 samples, 0.27%)</title><rect x="339.6" y="115.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="342.6" y="126.0"></text>
</g>
<g>
<title>skb_free_head (7 samples, 0.11%)</title><rect x="341.4" y="99.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="344.4" y="110.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.09%)</title><rect x="341.6" y="83.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="344.6" y="94.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.08%)</title><rect x="341.8" y="67.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="344.8" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.05%)</title><rect x="343.1" y="147.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="346.1" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (4 samples, 0.06%)</title><rect x="343.7" y="147.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="346.7" y="158.0"></text>
</g>
<g>
<title>tcp_newly_delivered (3 samples, 0.05%)</title><rect x="344.6" y="147.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="347.6" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.08%)</title><rect x="345.3" y="163.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="348.3" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.06%)</title><rect x="346.3" y="163.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="349.3" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.05%)</title><rect x="347.0" y="163.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="350.0" y="174.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="347.0" y="147.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="350.0" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.05%)</title><rect x="347.8" y="163.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="350.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="348.5" y="195.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="351.5" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.05%)</title><rect x="348.9" y="227.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="351.9" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (2 samples, 0.03%)</title><rect x="349.8" y="275.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="352.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.03%)</title><rect x="350.2" y="291.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="353.2" y="302.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.05%)</title><rect x="350.5" y="355.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="353.5" y="366.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.03%)</title><rect x="351.1" y="371.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="354.1" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (50 samples, 0.79%)</title><rect x="351.5" y="419.0" width="9.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="354.5" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (49 samples, 0.77%)</title><rect x="351.5" y="403.0" width="9.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="354.5" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (28 samples, 0.44%)</title><rect x="352.4" y="387.0" width="5.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="355.4" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (21 samples, 0.33%)</title><rect x="352.8" y="371.0" width="3.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="355.8" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="353.3" y="355.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="356.3" y="366.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.14%)</title><rect x="353.7" y="355.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="356.7" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.14%)</title><rect x="353.7" y="339.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="356.7" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (9 samples, 0.14%)</title><rect x="353.7" y="323.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="356.7" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (6 samples, 0.09%)</title><rect x="355.6" y="355.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="358.6" y="366.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.03%)</title><rect x="356.7" y="371.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="359.7" y="382.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.05%)</title><rect x="357.0" y="371.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="360.0" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="357.6" y="387.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="360.6" y="398.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (4 samples, 0.06%)</title><rect x="358.0" y="387.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="361.0" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.13%)</title><rect x="358.7" y="387.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="361.7" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (4 samples, 0.06%)</title><rect x="359.3" y="371.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="362.3" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="360.2" y="387.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="363.2" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.03%)</title><rect x="361.1" y="451.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="364.1" y="462.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="361.5" y="451.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="364.5" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (20 samples, 0.32%)</title><rect x="361.9" y="467.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="364.9" y="478.0"></text>
</g>
<g>
<title>selinux_ip_postroute (3 samples, 0.05%)</title><rect x="361.9" y="451.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="364.9" y="462.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (17 samples, 0.27%)</title><rect x="362.4" y="451.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="365.4" y="462.0"></text>
</g>
<g>
<title>selinux_ip_postroute (16 samples, 0.25%)</title><rect x="362.4" y="435.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="365.4" y="446.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (14 samples, 0.22%)</title><rect x="362.8" y="419.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="365.8" y="430.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (5 samples, 0.08%)</title><rect x="363.7" y="403.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="366.7" y="414.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (4 samples, 0.06%)</title><rect x="364.7" y="403.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="367.7" y="414.0"></text>
</g>
<g>
<title>avc_has_perm (4 samples, 0.06%)</title><rect x="364.7" y="387.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="367.7" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="365.6" y="483.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="368.6" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.08%)</title><rect x="366.2" y="499.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="369.2" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="367.1" y="515.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="370.1" y="526.0"></text>
</g>
<g>
<title>skb_clone (8 samples, 0.13%)</title><rect x="367.6" y="531.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="370.6" y="542.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="367.6" y="515.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="370.6" y="526.0"></text>
</g>
<g>
<title>__skb_clone (6 samples, 0.09%)</title><rect x="368.0" y="515.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="371.0" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="368.8" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="371.8" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="369.1" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="372.1" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.05%)</title><rect x="369.7" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="372.7" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.05%)</title><rect x="370.6" y="547.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="373.6" y="558.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.03%)</title><rect x="370.6" y="531.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="373.6" y="542.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.03%)</title><rect x="371.2" y="547.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="374.2" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="371.5" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="374.5" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.08%)</title><rect x="371.9" y="547.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="374.9" y="558.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="373.4" y="595.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="376.4" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (12 samples, 0.19%)</title><rect x="373.8" y="595.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="376.8" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.06%)</title><rect x="374.3" y="579.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="377.3" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.08%)</title><rect x="375.1" y="579.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="378.1" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.06%)</title><rect x="375.3" y="563.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="378.3" y="574.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.03%)</title><rect x="376.4" y="611.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="379.4" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (17 samples, 0.27%)</title><rect x="377.1" y="643.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="380.1" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.08%)</title><rect x="377.1" y="627.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="380.1" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.08%)</title><rect x="377.1" y="611.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="380.1" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="377.5" y="595.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="380.5" y="606.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (5 samples, 0.08%)</title><rect x="378.1" y="627.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="381.1" y="638.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.08%)</title><rect x="378.1" y="611.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="381.1" y="622.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (5 samples, 0.08%)</title><rect x="379.0" y="627.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="382.0" y="638.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg_permission (5 samples, 0.08%)</title><rect x="379.0" y="611.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="382.0" y="622.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg_permission (2 samples, 0.03%)</title><rect x="379.9" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="382.9" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.14%)</title><rect x="380.7" y="659.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="383.7" y="670.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.14%)</title><rect x="380.7" y="643.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="383.7" y="654.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.11%)</title><rect x="381.0" y="627.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="384.0" y="638.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.09%)</title><rect x="381.2" y="611.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="384.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.14%)</title><rect x="382.9" y="819.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="385.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.09%)</title><rect x="383.4" y="803.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.09%)</title><rect x="383.4" y="787.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (19 samples, 0.30%)</title><rect x="384.6" y="835.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="387.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (13 samples, 0.20%)</title><rect x="385.1" y="819.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="388.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.20%)</title><rect x="385.1" y="803.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.1" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="387.0" y="787.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="390.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="387.5" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="387.5" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.5" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.05%)</title><rect x="387.5" y="787.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="390.5" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="387.7" y="771.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="390.7" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="387.7" y="755.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="390.7" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="387.7" y="739.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="390.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (33 samples, 0.52%)</title><rect x="388.1" y="835.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="391.1" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="394.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="391.1" y="803.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.1" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.09%)</title><rect x="391.6" y="819.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="394.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (8 samples, 0.13%)</title><rect x="392.7" y="819.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="395.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.09%)</title><rect x="393.1" y="803.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.09%)</title><rect x="393.1" y="787.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.09%)</title><rect x="393.1" y="771.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="396.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$102/1040244136.execute (400 samples, 6.30%)</title><rect x="394.2" y="835.0" width="74.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="397.2" y="846.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleUpsert$4 (400 samples, 6.30%)</title><rect x="394.2" y="819.0" width="74.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="397.2" y="830.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (4 samples, 0.06%)</title><rect x="395.3" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="398.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (360 samples, 5.67%)</title><rect x="396.1" y="803.0" width="66.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="399.1" y="814.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (359 samples, 5.66%)</title><rect x="396.3" y="787.0" width="66.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="399.3" y="798.0">ru/mail..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (17 samples, 0.27%)</title><rect x="396.3" y="771.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="399.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (17 samples, 0.27%)</title><rect x="396.3" y="755.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (11 samples, 0.17%)</title><rect x="397.4" y="739.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="400.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (8 samples, 0.13%)</title><rect x="397.6" y="723.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="400.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (8 samples, 0.13%)</title><rect x="397.6" y="707.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="400.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (2 samples, 0.03%)</title><rect x="399.1" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.1" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="399.1" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (6 samples, 0.09%)</title><rect x="399.4" y="771.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (6 samples, 0.09%)</title><rect x="399.4" y="755.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="402.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (6 samples, 0.09%)</title><rect x="399.4" y="739.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="402.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$116/1748414627.run (335 samples, 5.28%)</title><rect x="400.7" y="771.0" width="62.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="403.7" y="782.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (335 samples, 5.28%)</title><rect x="400.7" y="755.0" width="62.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="403.7" y="766.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (335 samples, 5.28%)</title><rect x="400.7" y="739.0" width="62.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="403.7" y="750.0">ru/mai..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.13%)</title><rect x="401.1" y="723.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="404.1" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.05%)</title><rect x="402.0" y="707.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="405.0" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.05%)</title><rect x="402.0" y="691.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="405.0" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.05%)</title><rect x="402.0" y="675.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="405.0" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="402.0" y="659.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="405.0" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.05%)</title><rect x="402.0" y="643.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="405.0" y="654.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::retire_before_allocation() (3 samples, 0.05%)</title><rect x="402.0" y="627.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="405.0" y="638.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.03%)</title><rect x="402.2" y="611.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="405.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (319 samples, 5.03%)</title><rect x="402.6" y="723.0" width="59.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.6" y="734.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (298 samples, 4.69%)</title><rect x="405.4" y="707.0" width="55.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="408.4" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (4 samples, 0.06%)</title><rect x="437.5" y="691.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="440.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (4 samples, 0.06%)</title><rect x="437.5" y="675.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="440.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (9 samples, 0.14%)</title><rect x="438.3" y="691.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="441.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.06%)</title><rect x="439.2" y="675.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="442.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.06%)</title><rect x="439.2" y="659.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="442.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.06%)</title><rect x="439.2" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.2" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.06%)</title><rect x="439.2" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (112 samples, 1.76%)</title><rect x="440.0" y="691.0" width="20.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="443.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (102 samples, 1.61%)</title><rect x="441.8" y="675.0" width="19.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="444.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (102 samples, 1.61%)</title><rect x="441.8" y="659.0" width="19.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="444.8" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (102 samples, 1.61%)</title><rect x="441.8" y="643.0" width="19.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="444.8" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (14 samples, 0.22%)</title><rect x="453.9" y="627.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="456.9" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (14 samples, 0.22%)</title><rect x="453.9" y="611.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="456.9" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (23 samples, 0.36%)</title><rect x="456.5" y="627.0" width="4.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="459.5" y="638.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.09%)</title><rect x="460.8" y="707.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="463.8" y="718.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.05%)</title><rect x="461.0" y="691.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="464.0" y="702.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="461.5" y="691.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="464.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (6 samples, 0.09%)</title><rect x="461.9" y="723.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.09%)</title><rect x="461.9" y="707.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.9" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 0.08%)</title><rect x="462.1" y="691.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.1" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.08%)</title><rect x="462.1" y="675.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="465.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.08%)</title><rect x="462.1" y="659.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="465.1" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.08%)</title><rect x="462.1" y="643.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="465.1" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.08%)</title><rect x="462.1" y="627.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.08%)</title><rect x="462.1" y="611.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="465.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (4 samples, 0.06%)</title><rect x="462.3" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="465.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.wrapArray (30 samples, 0.47%)</title><rect x="463.0" y="803.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.47%)</title><rect x="463.0" y="787.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.47%)</title><rect x="463.0" y="771.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="466.0" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (30 samples, 0.47%)</title><rect x="463.0" y="755.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (30 samples, 0.47%)</title><rect x="463.0" y="739.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.0" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (10 samples, 0.16%)</title><rect x="466.2" y="723.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.08%)</title><rect x="466.2" y="707.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.2" y="718.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.06%)</title><rect x="467.3" y="707.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="470.3" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toString (2 samples, 0.03%)</title><rect x="468.2" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$110/1140211891.resolve (477 samples, 7.51%)</title><rect x="468.6" y="835.0" width="88.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.6" y="846.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$handleUpsert$5 (477 samples, 7.51%)</title><rect x="468.6" y="819.0" width="88.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.6" y="830.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ConflictResolver.resolveChangesAndSend (477 samples, 7.51%)</title><rect x="468.6" y="803.0" width="88.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="471.6" y="814.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (476 samples, 7.50%)</title><rect x="468.8" y="787.0" width="88.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.8" y="798.0">one/nio/ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.11%)</title><rect x="470.3" y="771.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.11%)</title><rect x="470.3" y="755.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="473.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.11%)</title><rect x="470.3" y="739.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="473.3" y="750.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.08%)</title><rect x="470.6" y="723.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="473.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (457 samples, 7.20%)</title><rect x="471.6" y="771.0" width="84.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="474.6" y="782.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.22%)</title><rect x="471.6" y="755.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.11%)</title><rect x="472.9" y="739.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.11%)</title><rect x="472.9" y="723.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.11%)</title><rect x="472.9" y="707.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (443 samples, 6.98%)</title><rect x="474.2" y="755.0" width="82.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.2" y="766.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (443 samples, 6.98%)</title><rect x="474.2" y="739.0" width="82.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.2" y="750.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (443 samples, 6.98%)</title><rect x="474.2" y="723.0" width="82.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.2" y="734.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (438 samples, 6.90%)</title><rect x="475.1" y="707.0" width="81.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.1" y="718.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (9 samples, 0.14%)</title><rect x="475.6" y="691.0" width="1.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="478.6" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="476.9" y="675.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="479.9" y="686.0"></text>
</g>
<g>
<title>__send (424 samples, 6.68%)</title><rect x="477.7" y="691.0" width="78.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="480.7" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (401 samples, 6.32%)</title><rect x="482.0" y="675.0" width="74.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="485.0" y="686.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (400 samples, 6.30%)</title><rect x="482.1" y="659.0" width="74.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="485.1" y="670.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (392 samples, 6.18%)</title><rect x="483.4" y="643.0" width="72.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="486.4" y="654.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (392 samples, 6.18%)</title><rect x="483.4" y="627.0" width="72.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="486.4" y="638.0">__sys_se..</text>
</g>
<g>
<title>sock_sendmsg (374 samples, 5.89%)</title><rect x="484.8" y="611.0" width="69.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="487.8" y="622.0">sock_se..</text>
</g>
<g>
<title>inet6_sendmsg (356 samples, 5.61%)</title><rect x="485.3" y="595.0" width="66.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="488.3" y="606.0">inet6_s..</text>
</g>
<g>
<title>tcp_sendmsg (355 samples, 5.59%)</title><rect x="485.5" y="579.0" width="66.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="488.5" y="590.0">tcp_sen..</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="485.5" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="488.5" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="485.5" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="488.5" y="558.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.06%)</title><rect x="485.9" y="563.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="488.9" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.06%)</title><rect x="485.9" y="547.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="488.9" y="558.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="486.6" y="563.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="489.6" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="487.0" y="563.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="490.0" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (342 samples, 5.39%)</title><rect x="487.5" y="563.0" width="63.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="490.5" y="574.0">tcp_sen..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.03%)</title><rect x="488.5" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="491.5" y="558.0"></text>
</g>
<g>
<title>sk_page_frag_refill (5 samples, 0.08%)</title><rect x="488.8" y="547.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="491.8" y="558.0"></text>
</g>
<g>
<title>skb_page_frag_refill (5 samples, 0.08%)</title><rect x="488.8" y="531.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="491.8" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (20 samples, 0.32%)</title><rect x="489.8" y="547.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="492.8" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (19 samples, 0.30%)</title><rect x="490.0" y="531.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="493.0" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (8 samples, 0.13%)</title><rect x="490.0" y="515.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="493.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.13%)</title><rect x="490.0" y="499.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="493.0" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="491.1" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="494.1" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.09%)</title><rect x="491.6" y="515.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="494.6" y="526.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.05%)</title><rect x="492.7" y="515.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="495.7" y="526.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.05%)</title><rect x="492.7" y="499.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="495.7" y="510.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="493.5" y="547.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="496.5" y="558.0"></text>
</g>
<g>
<title>tcp_push (299 samples, 4.71%)</title><rect x="493.9" y="547.0" width="55.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="496.9" y="558.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (294 samples, 4.63%)</title><rect x="494.0" y="531.0" width="54.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="497.0" y="542.0">__tcp..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.34 (3 samples, 0.05%)</title><rect x="494.2" y="515.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="497.2" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (290 samples, 4.57%)</title><rect x="494.8" y="515.0" width="53.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="497.8" y="526.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (263 samples, 4.14%)</title><rect x="496.5" y="499.0" width="48.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="499.5" y="510.0">__tc..</text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="498.7" y="483.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="501.7" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (244 samples, 3.84%)</title><rect x="499.1" y="483.0" width="45.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="502.1" y="494.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (241 samples, 3.80%)</title><rect x="499.1" y="467.0" width="44.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="502.1" y="478.0">__ip..</text>
</g>
<g>
<title>ip_local_out (229 samples, 3.61%)</title><rect x="500.6" y="451.0" width="42.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="503.6" y="462.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (5 samples, 0.08%)</title><rect x="500.6" y="435.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="503.6" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.05%)</title><rect x="500.9" y="419.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="503.9" y="430.0"></text>
</g>
<g>
<title>netlbl_enabled (2 samples, 0.03%)</title><rect x="500.9" y="403.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="503.9" y="414.0"></text>
</g>
<g>
<title>ip_output (223 samples, 3.51%)</title><rect x="501.7" y="435.0" width="41.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="504.7" y="446.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (210 samples, 3.31%)</title><rect x="502.2" y="419.0" width="39.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="505.2" y="430.0">ip_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="502.4" y="403.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="505.4" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (206 samples, 3.25%)</title><rect x="502.8" y="403.0" width="38.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="505.8" y="414.0">__i..</text>
</g>
<g>
<title>ip_finish_output2 (205 samples, 3.23%)</title><rect x="503.0" y="387.0" width="38.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="506.0" y="398.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (178 samples, 2.80%)</title><rect x="503.5" y="371.0" width="33.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="506.5" y="382.0">__..</text>
</g>
<g>
<title>do_softirq.part.20 (177 samples, 2.79%)</title><rect x="503.7" y="355.0" width="32.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="506.7" y="366.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (174 samples, 2.74%)</title><rect x="504.3" y="339.0" width="32.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="507.3" y="350.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (173 samples, 2.73%)</title><rect x="504.3" y="323.0" width="32.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="507.3" y="334.0">__..</text>
</g>
<g>
<title>__usecs_to_jiffies (3 samples, 0.05%)</title><rect x="505.4" y="307.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="508.4" y="318.0"></text>
</g>
<g>
<title>net_rx_action (163 samples, 2.57%)</title><rect x="505.9" y="307.0" width="30.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="508.9" y="318.0">ne..</text>
</g>
<g>
<title>process_backlog (161 samples, 2.54%)</title><rect x="506.3" y="291.0" width="29.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="509.3" y="302.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (156 samples, 2.46%)</title><rect x="507.1" y="275.0" width="29.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="510.1" y="286.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (155 samples, 2.44%)</title><rect x="507.2" y="259.0" width="28.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="510.2" y="270.0">__..</text>
</g>
<g>
<title>ip_rcv (153 samples, 2.41%)</title><rect x="507.6" y="243.0" width="28.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="510.6" y="254.0">ip..</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.03%)</title><rect x="507.8" y="227.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="510.8" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (150 samples, 2.36%)</title><rect x="508.2" y="227.0" width="27.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="511.2" y="238.0">i..</text>
</g>
<g>
<title>ip_local_deliver (149 samples, 2.35%)</title><rect x="508.2" y="211.0" width="27.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="511.2" y="222.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (148 samples, 2.33%)</title><rect x="508.4" y="195.0" width="27.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="511.4" y="206.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (147 samples, 2.32%)</title><rect x="508.5" y="179.0" width="27.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="511.5" y="190.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (146 samples, 2.30%)</title><rect x="508.7" y="163.0" width="27.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="511.7" y="174.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.16%)</title><rect x="509.5" y="147.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="512.5" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 0.13%)</title><rect x="511.5" y="147.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="514.5" y="158.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="511.5" y="131.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="514.5" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (6 samples, 0.09%)</title><rect x="511.9" y="131.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="514.9" y="142.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (6 samples, 0.09%)</title><rect x="511.9" y="115.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="514.9" y="126.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (2 samples, 0.03%)</title><rect x="512.4" y="99.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="515.4" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (122 samples, 1.92%)</title><rect x="513.0" y="147.0" width="22.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="516.0" y="158.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (120 samples, 1.89%)</title><rect x="513.4" y="131.0" width="22.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="516.4" y="142.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (15 samples, 0.24%)</title><rect x="513.9" y="115.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="516.9" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (15 samples, 0.24%)</title><rect x="513.9" y="99.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="516.9" y="110.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="513.9" y="83.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="516.9" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (13 samples, 0.20%)</title><rect x="514.3" y="83.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="517.3" y="94.0"></text>
</g>
<g>
<title>mod_timer (13 samples, 0.20%)</title><rect x="514.3" y="67.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="517.3" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.14%)</title><rect x="514.9" y="51.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="517.9" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (60 samples, 0.95%)</title><rect x="517.3" y="115.0" width="11.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="520.3" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (59 samples, 0.93%)</title><rect x="517.5" y="99.0" width="10.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="520.5" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (59 samples, 0.93%)</title><rect x="517.5" y="83.0" width="10.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="520.5" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (59 samples, 0.93%)</title><rect x="517.5" y="67.0" width="10.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="520.5" y="78.0"></text>
</g>
<g>
<title>tcp_ack (35 samples, 0.55%)</title><rect x="528.4" y="115.0" width="6.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="531.4" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (14 samples, 0.22%)</title><rect x="530.7" y="99.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="533.7" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="530.7" y="83.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="533.7" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="530.7" y="67.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="533.7" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="530.7" y="51.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="533.7" y="62.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.19%)</title><rect x="531.0" y="83.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="534.0" y="94.0"></text>
</g>
<g>
<title>skb_release_data (11 samples, 0.17%)</title><rect x="531.0" y="67.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="534.0" y="78.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.03%)</title><rect x="532.7" y="51.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="535.7" y="62.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="532.7" y="35.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="535.7" y="46.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="533.3" y="99.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="536.3" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (3 samples, 0.05%)</title><rect x="533.8" y="99.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="536.8" y="110.0"></text>
</g>
<g>
<title>tcp_rate_gen (3 samples, 0.05%)</title><rect x="534.4" y="99.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="537.4" y="110.0"></text>
</g>
<g>
<title>dev_queue_xmit (24 samples, 0.38%)</title><rect x="536.6" y="371.0" width="4.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="539.6" y="382.0"></text>
</g>
<g>
<title>__dev_queue_xmit (23 samples, 0.36%)</title><rect x="536.6" y="355.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="539.6" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (12 samples, 0.19%)</title><rect x="537.2" y="339.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="540.2" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.09%)</title><rect x="537.7" y="323.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="540.7" y="334.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="537.9" y="307.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="540.9" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="537.9" y="291.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="540.9" y="302.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="537.9" y="275.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="540.9" y="286.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.05%)</title><rect x="538.3" y="307.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="541.3" y="318.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.03%)</title><rect x="539.0" y="323.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="542.0" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (7 samples, 0.11%)</title><rect x="539.6" y="339.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="542.6" y="350.0"></text>
</g>
<g>
<title>netif_skb_features (4 samples, 0.06%)</title><rect x="540.0" y="323.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="543.0" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.14%)</title><rect x="541.3" y="419.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="544.3" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (8 samples, 0.13%)</title><rect x="541.4" y="403.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="544.4" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute (8 samples, 0.13%)</title><rect x="541.4" y="387.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="544.4" y="398.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (5 samples, 0.08%)</title><rect x="541.6" y="371.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="544.6" y="382.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (3 samples, 0.05%)</title><rect x="541.6" y="355.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="544.6" y="366.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (2 samples, 0.03%)</title><rect x="542.2" y="355.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="545.2" y="366.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.03%)</title><rect x="542.2" y="339.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="545.2" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.06%)</title><rect x="543.1" y="451.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="546.1" y="462.0"></text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.05%)</title><rect x="543.9" y="467.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="546.9" y="478.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (4 samples, 0.06%)</title><rect x="544.6" y="483.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="547.6" y="494.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="545.5" y="499.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="548.5" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (10 samples, 0.16%)</title><rect x="546.1" y="499.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="549.1" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (8 samples, 0.13%)</title><rect x="546.5" y="483.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="549.5" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.11%)</title><rect x="546.7" y="467.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="549.7" y="478.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.11%)</title><rect x="546.7" y="451.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="549.7" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.11%)</title><rect x="546.7" y="435.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="549.7" y="446.0"></text>
</g>
<g>
<title>tcp_write_xmit (4 samples, 0.06%)</title><rect x="548.7" y="531.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="551.7" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.09%)</title><rect x="549.6" y="547.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="552.6" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="549.8" y="531.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="552.8" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.03%)</title><rect x="550.2" y="531.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="553.2" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="551.1" y="563.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="554.1" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (15 samples, 0.24%)</title><rect x="551.5" y="595.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="554.5" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="551.9" y="579.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="554.9" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="551.9" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="554.9" y="574.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (8 samples, 0.13%)</title><rect x="552.2" y="579.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="555.2" y="590.0"></text>
</g>
<g>
<title>sock_has_perm (8 samples, 0.13%)</title><rect x="552.2" y="563.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="555.2" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.17%)</title><rect x="554.3" y="611.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="557.3" y="622.0"></text>
</g>
<g>
<title>__fdget (11 samples, 0.17%)</title><rect x="554.3" y="595.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="557.3" y="606.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.17%)</title><rect x="554.3" y="579.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="557.3" y="590.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.14%)</title><rect x="554.6" y="563.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="557.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.06%)</title><rect x="556.5" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="556.9" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="556.9" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="559.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.proxy (1,674 samples, 26.37%)</title><rect x="557.2" y="835.0" width="311.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.2" y="846.0">ru/mail/polis/service/zvladn7/ServiceHelpe..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,674 samples, 26.37%)</title><rect x="557.2" y="819.0" width="311.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.2" y="830.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (6 samples, 0.09%)</title><rect x="557.6" y="803.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (6 samples, 0.09%)</title><rect x="557.6" y="787.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="560.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (9 samples, 0.14%)</title><rect x="558.7" y="803.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.7" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (8 samples, 0.13%)</title><rect x="558.9" y="787.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="561.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.&lt;init&gt; (8 samples, 0.13%)</title><rect x="558.9" y="771.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="561.9" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (8 samples, 0.13%)</title><rect x="558.9" y="755.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.9" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (8 samples, 0.13%)</title><rect x="558.9" y="739.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper$$Lambda$126/767535484.accept (1,657 samples, 26.10%)</title><rect x="560.4" y="803.0" width="308.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.4" y="814.0">ru/mail/polis/service/zvladn7/ServiceHelpe..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.lambda$proxy$6 (1,657 samples, 26.10%)</title><rect x="560.4" y="787.0" width="308.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.4" y="798.0">ru/mail/polis/service/zvladn7/ServiceHelpe..</text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.16%)</title><rect x="560.6" y="771.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="563.6" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.16%)</title><rect x="560.6" y="755.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="563.6" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.13%)</title><rect x="561.0" y="739.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="564.0" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.06%)</title><rect x="561.5" y="723.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.5" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.06%)</title><rect x="561.5" y="707.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="564.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.get (19 samples, 0.30%)</title><rect x="562.5" y="771.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (19 samples, 0.30%)</title><rect x="562.5" y="755.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equals (19 samples, 0.30%)</title><rect x="562.5" y="739.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.5" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.09%)</title><rect x="564.9" y="723.0" width="1.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="567.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,627 samples, 25.63%)</title><rect x="566.0" y="771.0" width="302.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="569.0" y="782.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,627 samples, 25.63%)</title><rect x="566.0" y="755.0" width="302.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="569.0" y="766.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.06%)</title><rect x="567.5" y="739.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.5" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (2 samples, 0.03%)</title><rect x="568.4" y="739.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.4" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (362 samples, 5.70%)</title><rect x="568.8" y="739.0" width="67.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="571.8" y="750.0">one/nio..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (23 samples, 0.36%)</title><rect x="574.0" y="723.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="577.0" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (22 samples, 0.35%)</title><rect x="574.0" y="707.0" width="4.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="577.0" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (19 samples, 0.30%)</title><rect x="574.0" y="691.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="577.0" y="702.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (3 samples, 0.05%)</title><rect x="574.9" y="675.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="577.9" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="575.5" y="675.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="578.5" y="686.0"></text>
</g>
<g>
<title>__memset_avx2_erms (7 samples, 0.11%)</title><rect x="576.0" y="675.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="579.0" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="577.5" y="691.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="580.5" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="578.3" y="723.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="581.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="578.8" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="581.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (305 samples, 4.80%)</title><rect x="579.2" y="723.0" width="56.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="582.2" y="734.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (27 samples, 0.43%)</title><rect x="579.9" y="707.0" width="5.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="582.9" y="718.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.05%)</title><rect x="581.4" y="691.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="584.4" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (15 samples, 0.24%)</title><rect x="582.0" y="691.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="585.0" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="583.8" y="675.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="586.8" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (3 samples, 0.05%)</title><rect x="584.2" y="675.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="587.2" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.05%)</title><rect x="584.9" y="707.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="587.9" y="718.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.08%)</title><rect x="585.5" y="707.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="588.5" y="718.0"></text>
</g>
<g>
<title>__recv (266 samples, 4.19%)</title><rect x="586.4" y="707.0" width="49.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="589.4" y="718.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (225 samples, 3.54%)</title><rect x="594.1" y="691.0" width="41.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="597.1" y="702.0">ent..</text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.05%)</title><rect x="594.1" y="675.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="597.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (222 samples, 3.50%)</title><rect x="594.6" y="675.0" width="41.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="597.6" y="686.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (211 samples, 3.32%)</title><rect x="596.7" y="659.0" width="39.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="599.7" y="670.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (209 samples, 3.29%)</title><rect x="596.7" y="643.0" width="38.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="599.7" y="654.0">__s..</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="597.0" y="627.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="600.0" y="638.0"></text>
</g>
<g>
<title>fput (3 samples, 0.05%)</title><rect x="597.4" y="627.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="600.4" y="638.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.05%)</title><rect x="597.4" y="611.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="600.4" y="622.0"></text>
</g>
<g>
<title>sock_recvmsg (197 samples, 3.10%)</title><rect x="598.0" y="627.0" width="36.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="601.0" y="638.0">soc..</text>
</g>
<g>
<title>inet6_recvmsg (188 samples, 2.96%)</title><rect x="598.1" y="611.0" width="35.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="601.1" y="622.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (186 samples, 2.93%)</title><rect x="598.5" y="595.0" width="34.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="601.5" y="606.0">tc..</text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.09%)</title><rect x="606.9" y="579.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="609.9" y="590.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.06%)</title><rect x="607.1" y="563.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="610.1" y="574.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.05%)</title><rect x="607.1" y="547.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="610.1" y="558.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="607.1" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="610.1" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.09%)</title><rect x="608.9" y="579.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="611.9" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="609.5" y="563.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="612.5" y="574.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.06%)</title><rect x="610.0" y="579.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="613.0" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="610.0" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="613.0" y="574.0"></text>
</g>
<g>
<title>remove_wait_queue (3 samples, 0.05%)</title><rect x="610.8" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="613.8" y="590.0"></text>
</g>
<g>
<title>sk_wait_data (68 samples, 1.07%)</title><rect x="611.3" y="579.0" width="12.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="614.3" y="590.0"></text>
</g>
<g>
<title>add_wait_queue (2 samples, 0.03%)</title><rect x="613.0" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="616.0" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="613.0" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="616.0" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (9 samples, 0.14%)</title><rect x="613.4" y="563.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="616.4" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (8 samples, 0.13%)</title><rect x="613.4" y="547.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="616.4" y="558.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="615.1" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="618.1" y="574.0"></text>
</g>
<g>
<title>remove_wait_queue (12 samples, 0.19%)</title><rect x="615.4" y="563.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="618.4" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.19%)</title><rect x="615.4" y="547.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="618.4" y="558.0"></text>
</g>
<g>
<title>schedule_timeout (2 samples, 0.03%)</title><rect x="617.7" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="620.7" y="574.0"></text>
</g>
<g>
<title>wait_woken (32 samples, 0.50%)</title><rect x="618.0" y="563.0" width="6.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="621.0" y="574.0"></text>
</g>
<g>
<title>schedule_timeout (27 samples, 0.43%)</title><rect x="619.0" y="547.0" width="5.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="622.0" y="558.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="620.1" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="623.1" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.14%)</title><rect x="620.4" y="531.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="623.4" y="542.0"></text>
</g>
<g>
<title>del_timer_sync (2 samples, 0.03%)</title><rect x="622.1" y="531.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="625.1" y="542.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (2 samples, 0.03%)</title><rect x="622.1" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="625.1" y="526.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.11%)</title><rect x="622.5" y="531.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="625.5" y="542.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.05%)</title><rect x="623.2" y="515.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="626.2" y="526.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (34 samples, 0.54%)</title><rect x="624.0" y="579.0" width="6.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="627.0" y="590.0"></text>
</g>
<g>
<title>__skb_datagram_iter (31 samples, 0.49%)</title><rect x="624.0" y="563.0" width="5.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="627.0" y="574.0"></text>
</g>
<g>
<title>simple_copy_to_iter (23 samples, 0.36%)</title><rect x="625.5" y="547.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="628.5" y="558.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.05%)</title><rect x="625.5" y="531.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="628.5" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.08%)</title><rect x="626.0" y="531.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="629.0" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (13 samples, 0.20%)</title><rect x="627.0" y="531.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="630.0" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (10 samples, 0.16%)</title><rect x="627.5" y="515.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="630.5" y="526.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.03%)</title><rect x="629.4" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="632.4" y="542.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.03%)</title><rect x="629.9" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="632.9" y="574.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (7 samples, 0.11%)</title><rect x="630.3" y="579.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="633.3" y="590.0"></text>
</g>
<g>
<title>tcp_send_ack (3 samples, 0.05%)</title><rect x="631.0" y="563.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="634.0" y="574.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.47 (3 samples, 0.05%)</title><rect x="631.0" y="547.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="634.0" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.05%)</title><rect x="631.0" y="531.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="634.0" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.05%)</title><rect x="631.0" y="515.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="634.0" y="526.0"></text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.05%)</title><rect x="631.0" y="499.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="634.0" y="510.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.03%)</title><rect x="631.2" y="483.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="634.2" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (6 samples, 0.09%)</title><rect x="631.6" y="579.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="634.6" y="590.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.05%)</title><rect x="632.2" y="563.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="635.2" y="574.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="632.2" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="635.2" y="558.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="632.2" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="635.2" y="542.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="632.7" y="579.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="635.7" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.13%)</title><rect x="633.1" y="611.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="636.1" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.08%)</title><rect x="633.1" y="595.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="636.1" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.08%)</title><rect x="633.1" y="579.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="636.1" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="633.5" y="563.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="636.5" y="574.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (3 samples, 0.05%)</title><rect x="634.0" y="595.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="637.0" y="606.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.05%)</title><rect x="634.0" y="579.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="637.0" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.08%)</title><rect x="634.6" y="627.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="637.6" y="638.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.06%)</title><rect x="634.8" y="611.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="637.8" y="622.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="634.8" y="595.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="637.8" y="606.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.06%)</title><rect x="634.8" y="579.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="637.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (121 samples, 1.91%)</title><rect x="636.1" y="739.0" width="22.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.1" y="750.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.06%)</title><rect x="638.5" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="641.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.05%)</title><rect x="638.7" y="707.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="641.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.05%)</title><rect x="638.7" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (3 samples, 0.05%)</title><rect x="639.2" y="723.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="639.8" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="642.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.13%)</title><rect x="640.2" y="723.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.13%)</title><rect x="640.2" y="707.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.2" y="718.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="640.5" y="691.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="643.5" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="640.9" y="691.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="643.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.mayHaveBody (2 samples, 0.03%)</title><rect x="641.6" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (59 samples, 0.93%)</title><rect x="642.0" y="723.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (49 samples, 0.77%)</title><rect x="643.9" y="707.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="646.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 0.49%)</title><rect x="647.2" y="691.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.06%)</title><rect x="653.0" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.03%)</title><rect x="653.7" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="656.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (20 samples, 0.32%)</title><rect x="654.1" y="723.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="657.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.19%)</title><rect x="655.0" y="707.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.19%)</title><rect x="655.0" y="691.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.0" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="656.5" y="675.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="659.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="657.3" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="660.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="657.3" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (4 samples, 0.06%)</title><rect x="657.8" y="723.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (73 samples, 1.15%)</title><rect x="658.6" y="739.0" width="13.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.6" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.11%)</title><rect x="670.6" y="723.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="673.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.08%)</title><rect x="672.1" y="739.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="675.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="672.5" y="723.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="672.5" y="707.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="675.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (200 samples, 3.15%)</title><rect x="673.1" y="739.0" width="37.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.1" y="750.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (2 samples, 0.03%)</title><rect x="673.1" y="723.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="676.1" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (197 samples, 3.10%)</title><rect x="673.4" y="723.0" width="36.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="676.4" y="734.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (120 samples, 1.89%)</title><rect x="687.7" y="707.0" width="22.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="690.7" y="718.0">e..</text>
</g>
<g>
<title>__x64_sys_setsockopt (2 samples, 0.03%)</title><rect x="687.7" y="691.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="690.7" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (118 samples, 1.86%)</title><rect x="688.1" y="691.0" width="21.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="691.1" y="702.0">d..</text>
</g>
<g>
<title>__sys_setsockopt (2 samples, 0.03%)</title><rect x="693.3" y="675.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="696.3" y="686.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (87 samples, 1.37%)</title><rect x="693.7" y="675.0" width="16.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="696.7" y="686.0"></text>
</g>
<g>
<title>__sys_setsockopt (87 samples, 1.37%)</title><rect x="693.7" y="659.0" width="16.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="696.7" y="670.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (4 samples, 0.06%)</title><rect x="694.6" y="643.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="697.6" y="654.0"></text>
</g>
<g>
<title>__get_user_4 (6 samples, 0.09%)</title><rect x="695.4" y="643.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="698.4" y="654.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="696.7" y="643.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="699.7" y="654.0"></text>
</g>
<g>
<title>security_socket_setsockopt (23 samples, 0.36%)</title><rect x="697.0" y="643.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="700.0" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (10 samples, 0.16%)</title><rect x="697.8" y="627.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="700.8" y="638.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (10 samples, 0.16%)</title><rect x="697.8" y="611.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="700.8" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="699.3" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="702.3" y="606.0"></text>
</g>
<g>
<title>selinux_socket_setsockopt (9 samples, 0.14%)</title><rect x="699.6" y="627.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="702.6" y="638.0"></text>
</g>
<g>
<title>sock_has_perm (8 samples, 0.13%)</title><rect x="699.8" y="611.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="702.8" y="622.0"></text>
</g>
<g>
<title>sock_set_timeout (2 samples, 0.03%)</title><rect x="701.3" y="643.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="704.3" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (31 samples, 0.49%)</title><rect x="701.7" y="643.0" width="5.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="704.7" y="654.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.06%)</title><rect x="703.5" y="627.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="706.5" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.06%)</title><rect x="703.5" y="611.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="706.5" y="622.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.08%)</title><rect x="704.3" y="627.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="707.3" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="704.3" y="611.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="707.3" y="622.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="704.8" y="611.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="707.8" y="622.0"></text>
</g>
<g>
<title>sock_set_timeout (11 samples, 0.17%)</title><rect x="705.2" y="627.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="708.2" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (13 samples, 0.20%)</title><rect x="707.4" y="643.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="710.4" y="654.0"></text>
</g>
<g>
<title>__fdget (11 samples, 0.17%)</title><rect x="707.4" y="627.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="710.4" y="638.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.17%)</title><rect x="707.4" y="611.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="710.4" y="622.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.16%)</title><rect x="707.6" y="595.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="710.6" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="709.5" y="627.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="712.5" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (817 samples, 12.87%)</title><rect x="710.2" y="739.0" width="151.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="713.2" y="750.0">one/nio/net/NativeS..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (18 samples, 0.28%)</title><rect x="711.2" y="723.0" width="3.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="714.2" y="734.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (6 samples, 0.09%)</title><rect x="712.3" y="707.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="715.3" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.09%)</title><rect x="713.4" y="707.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="716.4" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (2 samples, 0.03%)</title><rect x="714.1" y="691.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="717.1" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="714.5" y="723.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="717.5" y="734.0"></text>
</g>
<g>
<title>__send (786 samples, 12.38%)</title><rect x="715.1" y="723.0" width="146.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="718.1" y="734.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (736 samples, 11.59%)</title><rect x="724.4" y="707.0" width="136.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="727.4" y="718.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (735 samples, 11.58%)</title><rect x="724.5" y="691.0" width="136.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="727.5" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (727 samples, 11.45%)</title><rect x="725.5" y="675.0" width="135.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="728.5" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (726 samples, 11.44%)</title><rect x="725.5" y="659.0" width="134.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="728.5" y="670.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (717 samples, 11.29%)</title><rect x="726.4" y="643.0" width="133.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="729.4" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (700 samples, 11.03%)</title><rect x="726.8" y="627.0" width="130.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="729.8" y="638.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (698 samples, 11.00%)</title><rect x="727.1" y="611.0" width="129.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="730.1" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="727.5" y="595.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="730.5" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (5 samples, 0.08%)</title><rect x="728.4" y="595.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="731.4" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (684 samples, 10.78%)</title><rect x="729.4" y="595.0" width="127.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="732.4" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.06%)</title><rect x="732.5" y="579.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="735.5" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.09%)</title><rect x="733.3" y="579.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="736.3" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.06%)</title><rect x="733.3" y="563.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="736.3" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.03%)</title><rect x="734.0" y="563.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="737.0" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (26 samples, 0.41%)</title><rect x="734.6" y="579.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="737.6" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (23 samples, 0.36%)</title><rect x="735.0" y="563.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="738.0" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (7 samples, 0.11%)</title><rect x="736.1" y="547.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="739.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (7 samples, 0.11%)</title><rect x="736.1" y="531.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="739.1" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.14%)</title><rect x="737.4" y="547.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="740.4" y="558.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.05%)</title><rect x="739.4" y="579.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="742.4" y="590.0"></text>
</g>
<g>
<title>tcp_chrono_start (2 samples, 0.03%)</title><rect x="740.0" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="743.0" y="590.0"></text>
</g>
<g>
<title>tcp_push (616 samples, 9.70%)</title><rect x="740.3" y="579.0" width="114.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="743.3" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (612 samples, 9.64%)</title><rect x="741.1" y="563.0" width="113.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="744.1" y="574.0">__tcp_push_pen..</text>
</g>
<g>
<title>tcp_write_xmit (609 samples, 9.59%)</title><rect x="741.6" y="547.0" width="113.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="744.6" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="744.2" y="531.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="747.2" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (571 samples, 8.99%)</title><rect x="744.6" y="531.0" width="106.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="747.6" y="542.0">__tcp_transmi..</text>
</g>
<g>
<title>ip_queue_xmit (553 samples, 8.71%)</title><rect x="747.2" y="515.0" width="102.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="750.2" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (552 samples, 8.70%)</title><rect x="747.2" y="499.0" width="102.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="750.2" y="510.0">__ip_queue_x..</text>
</g>
<g>
<title>ip_local_out (542 samples, 8.54%)</title><rect x="747.6" y="483.0" width="100.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="750.6" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (6 samples, 0.09%)</title><rect x="747.8" y="467.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="750.8" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.06%)</title><rect x="748.0" y="451.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="751.0" y="462.0"></text>
</g>
<g>
<title>netlbl_enabled (4 samples, 0.06%)</title><rect x="748.0" y="435.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="751.0" y="446.0"></text>
</g>
<g>
<title>ip_output (528 samples, 8.32%)</title><rect x="748.9" y="467.0" width="98.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="751.9" y="478.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (503 samples, 7.92%)</title><rect x="749.3" y="451.0" width="93.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="752.3" y="462.0">ip_finish_o..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="749.5" y="435.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="752.5" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (496 samples, 7.81%)</title><rect x="749.8" y="435.0" width="92.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="752.8" y="446.0">__ip_finish..</text>
</g>
<g>
<title>ip_finish_output2 (489 samples, 7.70%)</title><rect x="751.1" y="419.0" width="90.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="754.1" y="430.0">ip_finish_..</text>
</g>
<g>
<title>__local_bh_enable_ip (416 samples, 6.55%)</title><rect x="753.7" y="403.0" width="77.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="756.7" y="414.0">__local_b..</text>
</g>
<g>
<title>do_softirq.part.20 (415 samples, 6.54%)</title><rect x="753.9" y="387.0" width="77.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="756.9" y="398.0">do_softir..</text>
</g>
<g>
<title>do_softirq_own_stack (411 samples, 6.47%)</title><rect x="754.7" y="371.0" width="76.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="757.7" y="382.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (411 samples, 6.47%)</title><rect x="754.7" y="355.0" width="76.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="757.7" y="366.0">__softir..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="755.8" y="339.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="758.8" y="350.0"></text>
</g>
<g>
<title>net_rx_action (400 samples, 6.30%)</title><rect x="756.1" y="339.0" width="74.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="759.1" y="350.0">net_rx_a..</text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="756.9" y="323.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="759.9" y="334.0"></text>
</g>
<g>
<title>process_backlog (392 samples, 6.18%)</title><rect x="757.6" y="323.0" width="72.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="760.6" y="334.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb (383 samples, 6.03%)</title><rect x="759.1" y="307.0" width="71.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="762.1" y="318.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="759.5" y="291.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="762.5" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (378 samples, 5.95%)</title><rect x="759.9" y="291.0" width="70.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="762.9" y="302.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.08%)</title><rect x="759.9" y="275.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="762.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv (372 samples, 5.86%)</title><rect x="760.8" y="275.0" width="69.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="763.8" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="761.2" y="259.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="764.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (6 samples, 0.09%)</title><rect x="761.5" y="259.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="764.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (362 samples, 5.70%)</title><rect x="762.6" y="259.0" width="67.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="765.6" y="270.0">ip_rcv_..</text>
</g>
<g>
<title>ip_local_deliver (361 samples, 5.69%)</title><rect x="762.6" y="243.0" width="67.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="765.6" y="254.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (356 samples, 5.61%)</title><rect x="762.8" y="227.0" width="66.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="765.8" y="238.0">ip_loca..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (354 samples, 5.58%)</title><rect x="762.8" y="211.0" width="65.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="765.8" y="222.0">ip_prot..</text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="763.4" y="195.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="766.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (348 samples, 5.48%)</title><rect x="764.0" y="195.0" width="64.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="767.0" y="206.0">tcp_v4_..</text>
</g>
<g>
<title>__inet_lookup_established (11 samples, 0.17%)</title><rect x="765.4" y="179.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="768.4" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.03%)</title><rect x="767.1" y="163.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="770.1" y="174.0"></text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="767.7" y="179.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="770.7" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.05%)</title><rect x="768.2" y="179.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="771.2" y="190.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="768.8" y="179.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="771.8" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (21 samples, 0.33%)</title><rect x="769.3" y="179.0" width="3.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="772.3" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="769.5" y="163.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="772.5" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (13 samples, 0.20%)</title><rect x="770.1" y="163.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="773.1" y="174.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (11 samples, 0.17%)</title><rect x="770.5" y="147.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="773.5" y="158.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (4 samples, 0.06%)</title><rect x="771.8" y="131.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="774.8" y="142.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (2 samples, 0.03%)</title><rect x="772.1" y="115.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="775.1" y="126.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.03%)</title><rect x="772.1" y="99.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="775.1" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (4 samples, 0.06%)</title><rect x="772.5" y="163.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="775.5" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (295 samples, 4.65%)</title><rect x="773.2" y="179.0" width="54.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="776.2" y="190.0">tcp_v..</text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.03%)</title><rect x="773.6" y="163.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="776.6" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.05%)</title><rect x="774.0" y="163.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="777.0" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (286 samples, 4.51%)</title><rect x="774.9" y="163.0" width="53.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="777.9" y="174.0">tcp_r..</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.06%)</title><rect x="775.8" y="147.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="778.8" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.05%)</title><rect x="776.0" y="131.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="779.0" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="776.2" y="115.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="779.2" y="126.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="776.2" y="99.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="779.2" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="776.2" y="83.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="779.2" y="94.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.05%)</title><rect x="776.8" y="147.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="779.8" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.05%)</title><rect x="777.3" y="147.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="780.3" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (192 samples, 3.02%)</title><rect x="777.9" y="147.0" width="35.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="780.9" y="158.0">soc..</text>
</g>
<g>
<title>__wake_up_sync_key (191 samples, 3.01%)</title><rect x="778.1" y="131.0" width="35.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="781.1" y="142.0">__w..</text>
</g>
<g>
<title>__wake_up_common_lock (189 samples, 2.98%)</title><rect x="778.1" y="115.0" width="35.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="781.1" y="126.0">__w..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (189 samples, 2.98%)</title><rect x="778.1" y="99.0" width="35.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="781.1" y="110.0">_ra..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="813.2" y="115.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="816.2" y="126.0"></text>
</g>
<g>
<title>tcp_ack (67 samples, 1.06%)</title><rect x="813.6" y="147.0" width="12.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="816.6" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (29 samples, 0.46%)</title><rect x="818.2" y="131.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="821.2" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.08%)</title><rect x="818.2" y="115.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="821.2" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.08%)</title><rect x="818.2" y="99.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="821.2" y="110.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="818.8" y="83.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="821.8" y="94.0"></text>
</g>
<g>
<title>skb_release_all (22 samples, 0.35%)</title><rect x="819.2" y="115.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="822.2" y="126.0"></text>
</g>
<g>
<title>skb_release_data (20 samples, 0.32%)</title><rect x="819.3" y="99.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="822.3" y="110.0"></text>
</g>
<g>
<title>skb_free_head (10 samples, 0.16%)</title><rect x="821.2" y="83.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="824.2" y="94.0"></text>
</g>
<g>
<title>kfree (10 samples, 0.16%)</title><rect x="821.2" y="67.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="824.2" y="78.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.09%)</title><rect x="821.9" y="51.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="824.9" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="823.2" y="115.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="826.2" y="126.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.05%)</title><rect x="823.6" y="131.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="826.6" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (4 samples, 0.06%)</title><rect x="824.4" y="131.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="827.4" y="142.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (3 samples, 0.05%)</title><rect x="825.3" y="131.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="828.3" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.06%)</title><rect x="826.4" y="147.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="829.4" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.06%)</title><rect x="827.2" y="147.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="830.2" y="158.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="827.5" y="131.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="830.5" y="142.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (3 samples, 0.05%)</title><rect x="828.1" y="179.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="831.1" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="828.6" y="211.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="831.6" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 0.06%)</title><rect x="829.0" y="227.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="832.0" y="238.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.05%)</title><rect x="830.5" y="339.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="833.5" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (58 samples, 0.91%)</title><rect x="831.1" y="403.0" width="10.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="834.1" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (54 samples, 0.85%)</title><rect x="831.2" y="387.0" width="10.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="834.2" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (26 samples, 0.41%)</title><rect x="832.4" y="371.0" width="4.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="835.4" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (13 samples, 0.20%)</title><rect x="833.1" y="355.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="836.1" y="366.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.14%)</title><rect x="833.7" y="339.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="836.7" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (8 samples, 0.13%)</title><rect x="833.8" y="323.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="836.8" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (6 samples, 0.09%)</title><rect x="834.2" y="307.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="837.2" y="318.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.03%)</title><rect x="835.7" y="355.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="838.7" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (6 samples, 0.09%)</title><rect x="836.1" y="355.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="839.1" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.06%)</title><rect x="837.2" y="371.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="840.2" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (15 samples, 0.24%)</title><rect x="838.3" y="371.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="841.3" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (7 samples, 0.11%)</title><rect x="839.2" y="355.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="842.2" y="366.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.03%)</title><rect x="840.5" y="355.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="843.5" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="841.3" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="844.3" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="842.4" y="435.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="845.4" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (21 samples, 0.33%)</title><rect x="842.8" y="451.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="845.8" y="462.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.03%)</title><rect x="842.8" y="435.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="845.8" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (19 samples, 0.30%)</title><rect x="843.1" y="435.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="846.1" y="446.0"></text>
</g>
<g>
<title>selinux_ip_postroute (19 samples, 0.30%)</title><rect x="843.1" y="419.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="846.1" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (19 samples, 0.30%)</title><rect x="843.1" y="403.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="846.1" y="414.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (3 samples, 0.05%)</title><rect x="845.0" y="387.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="848.0" y="398.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (6 samples, 0.09%)</title><rect x="845.6" y="387.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="848.6" y="398.0"></text>
</g>
<g>
<title>avc_has_perm (5 samples, 0.08%)</title><rect x="845.7" y="371.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="848.7" y="382.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (2 samples, 0.03%)</title><rect x="846.7" y="451.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="849.7" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.11%)</title><rect x="847.0" y="467.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="850.0" y="478.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.05%)</title><rect x="848.3" y="483.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="851.3" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.08%)</title><rect x="848.9" y="483.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="851.9" y="494.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.06%)</title><rect x="850.0" y="515.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="853.0" y="526.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.05%)</title><rect x="850.2" y="499.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="853.2" y="510.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="850.9" y="531.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="853.9" y="542.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.03%)</title><rect x="851.5" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="854.5" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.06%)</title><rect x="851.9" y="531.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="854.9" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.05%)</title><rect x="852.1" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="855.1" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.05%)</title><rect x="852.1" y="499.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="855.1" y="510.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.05%)</title><rect x="852.1" y="483.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="855.1" y="494.0"></text>
</g>
<g>
<title>tcp_options_write (3 samples, 0.05%)</title><rect x="852.6" y="531.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="855.6" y="542.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.03%)</title><rect x="853.2" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="856.2" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.06%)</title><rect x="853.5" y="531.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="856.5" y="542.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="853.9" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="856.9" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="854.3" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="857.3" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (7 samples, 0.11%)</title><rect x="855.0" y="579.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="858.0" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.08%)</title><rect x="855.4" y="563.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="858.4" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="856.0" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="859.0" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="856.5" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="859.5" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (11 samples, 0.17%)</title><rect x="857.1" y="627.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="860.1" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="857.5" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="860.5" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="857.5" y="595.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="860.5" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="857.5" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="860.5" y="590.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (5 samples, 0.08%)</title><rect x="858.0" y="611.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="861.0" y="622.0"></text>
</g>
<g>
<title>tomoyo_sock_family.part.1 (2 samples, 0.03%)</title><rect x="858.0" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="861.0" y="606.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg_permission (3 samples, 0.05%)</title><rect x="858.4" y="595.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="861.4" y="606.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (2 samples, 0.03%)</title><rect x="859.3" y="627.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="862.3" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.06%)</title><rect x="859.7" y="643.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="862.7" y="654.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.06%)</title><rect x="859.7" y="627.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="862.7" y="638.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="859.7" y="611.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="862.7" y="622.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.06%)</title><rect x="859.7" y="595.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="862.7" y="606.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="860.8" y="675.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="863.8" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.06%)</title><rect x="861.2" y="723.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="864.2" y="734.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (16 samples, 0.25%)</title><rect x="862.1" y="739.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="865.1" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.06%)</title><rect x="862.8" y="723.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="865.8" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.06%)</title><rect x="862.8" y="707.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="865.8" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.06%)</title><rect x="862.8" y="691.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="865.8" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (4 samples, 0.06%)</title><rect x="862.8" y="675.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="865.8" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (5 samples, 0.08%)</title><rect x="863.6" y="723.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="866.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (3 samples, 0.05%)</title><rect x="864.5" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="867.5" y="734.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (18 samples, 0.28%)</title><rect x="865.1" y="739.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="868.1" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (12 samples, 0.19%)</title><rect x="866.2" y="723.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="869.2" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (12 samples, 0.19%)</title><rect x="866.2" y="707.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="869.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceTopology.addReplicasForKey (4 samples, 0.06%)</title><rect x="868.4" y="835.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="871.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceTopology.isLocal (11 samples, 0.17%)</title><rect x="869.2" y="835.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="872.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (11 samples, 0.17%)</title><rect x="869.2" y="819.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="872.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (11 samples, 0.17%)</title><rect x="869.2" y="803.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="872.2" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (11 samples, 0.17%)</title><rect x="869.2" y="787.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="872.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceTopology.nodesForKey (143 samples, 2.25%)</title><rect x="871.2" y="835.0" width="26.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="874.2" y="846.0">r..</text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (3 samples, 0.05%)</title><rect x="872.7" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="875.7" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.05%)</title><rect x="872.7" y="803.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="875.7" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.05%)</title><rect x="872.7" y="787.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="875.7" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.05%)</title><rect x="872.7" y="771.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="875.7" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="872.7" y="755.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="875.7" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.05%)</title><rect x="872.7" y="739.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="875.7" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.05%)</title><rect x="873.3" y="819.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="876.3" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (7 samples, 0.11%)</title><rect x="873.8" y="819.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.8" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (7 samples, 0.11%)</title><rect x="873.8" y="803.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.8" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.&lt;init&gt; (5 samples, 0.08%)</title><rect x="874.2" y="787.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="877.2" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (5 samples, 0.08%)</title><rect x="874.2" y="771.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="877.2" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.05%)</title><rect x="874.6" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceTopology.addReplicasForKey (122 samples, 1.92%)</title><rect x="875.1" y="819.0" width="22.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="878.1" y="830.0">r..</text>
</g>
<g>
<title>java/util/HashSet.add (69 samples, 1.09%)</title><rect x="875.1" y="803.0" width="12.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="878.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.put (58 samples, 0.91%)</title><rect x="877.2" y="787.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="880.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.06%)</title><rect x="877.2" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="880.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (54 samples, 0.85%)</title><rect x="877.9" y="771.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="880.9" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (14 samples, 0.22%)</title><rect x="882.5" y="755.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="885.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (7 samples, 0.11%)</title><rect x="882.7" y="739.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.7" y="750.0"></text>
</g>
<g>
<title>vtable stub (6 samples, 0.09%)</title><rect x="884.0" y="739.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="887.0" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (15 samples, 0.24%)</title><rect x="885.1" y="755.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="888.1" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="887.4" y="739.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="890.4" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (3 samples, 0.05%)</title><rect x="887.4" y="723.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="890.4" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="887.4" y="707.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="890.4" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="887.4" y="691.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="890.4" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.05%)</title><rect x="887.4" y="675.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="890.4" y="686.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::retire_before_allocation() (2 samples, 0.03%)</title><rect x="887.6" y="659.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="890.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (35 samples, 0.55%)</title><rect x="887.9" y="803.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.9" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (34 samples, 0.54%)</title><rect x="888.1" y="787.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="891.1" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (34 samples, 0.54%)</title><rect x="888.1" y="771.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="891.1" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (6 samples, 0.09%)</title><rect x="893.3" y="755.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="896.3" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.03%)</title><rect x="894.4" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.4" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.03%)</title><rect x="894.4" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.4" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.03%)</title><rect x="894.4" y="771.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.4" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.03%)</title><rect x="894.4" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="897.4" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (3 samples, 0.05%)</title><rect x="894.8" y="803.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="897.8" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (3 samples, 0.05%)</title><rect x="894.8" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="897.8" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (13 samples, 0.20%)</title><rect x="895.4" y="803.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="898.4" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (13 samples, 0.20%)</title><rect x="895.4" y="787.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.4" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (13 samples, 0.20%)</title><rect x="895.4" y="771.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="898.4" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (13 samples, 0.20%)</title><rect x="895.4" y="755.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="898.4" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.05%)</title><rect x="896.7" y="739.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="899.7" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.05%)</title><rect x="897.2" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="900.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/ServiceHelper.wrapString (14 samples, 0.22%)</title><rect x="897.8" y="851.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.8" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.20%)</title><rect x="897.8" y="835.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="900.8" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.20%)</title><rect x="897.8" y="819.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.8" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.19%)</title><rect x="898.0" y="803.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.19%)</title><rect x="898.0" y="787.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.0" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.19%)</title><rect x="898.0" y="771.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (9 samples, 0.14%)</title><rect x="898.0" y="755.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (9 samples, 0.14%)</title><rect x="898.0" y="739.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="899.6" y="755.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="902.6" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="899.6" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.6" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="899.8" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.8" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,231 samples, 19.39%)</title><rect x="900.4" y="995.0" width="228.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="903.4" y="1006.0">one/nio/server/SelectorThread...</text>
</g>
<g>
<title>gettimeofday@plt (2 samples, 0.03%)</title><rect x="901.5" y="979.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="904.5" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 0.08%)</title><rect x="901.9" y="979.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="904.9" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.13%)</title><rect x="902.8" y="979.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="905.8" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.13%)</title><rect x="902.8" y="963.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="905.8" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (8 samples, 0.13%)</title><rect x="902.8" y="947.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.8" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (357 samples, 5.62%)</title><rect x="904.3" y="979.0" width="66.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="907.3" y="990.0">one/nio..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="905.8" y="963.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="908.8" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="905.8" y="947.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="908.8" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (347 samples, 5.47%)</title><rect x="906.2" y="963.0" width="64.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="909.2" y="974.0">one/nio..</text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (2 samples, 0.03%)</title><rect x="908.2" y="947.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="911.2" y="958.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (2 samples, 0.03%)</title><rect x="908.2" y="931.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="911.2" y="942.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (2 samples, 0.03%)</title><rect x="908.2" y="915.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="911.2" y="926.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.03%)</title><rect x="908.2" y="899.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="911.2" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (5 samples, 0.08%)</title><rect x="908.6" y="947.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="911.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (314 samples, 4.95%)</title><rect x="909.5" y="947.0" width="58.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="912.5" y="958.0">[unkno..</text>
</g>
<g>
<title>[unknown] (8 samples, 0.13%)</title><rect x="909.5" y="931.0" width="1.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="912.5" y="942.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.13%)</title><rect x="909.5" y="915.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="912.5" y="926.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="910.4" y="899.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="913.4" y="910.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (7 samples, 0.11%)</title><rect x="911.0" y="931.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="914.0" y="942.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="912.3" y="931.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="915.3" y="942.0"></text>
</g>
<g>
<title>epoll_wait (297 samples, 4.68%)</title><rect x="912.7" y="931.0" width="55.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="915.7" y="942.0">epoll..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (235 samples, 3.70%)</title><rect x="924.0" y="915.0" width="43.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="927.0" y="926.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (234 samples, 3.69%)</title><rect x="924.2" y="899.0" width="43.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="927.2" y="910.0">do_s..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (219 samples, 3.45%)</title><rect x="927.0" y="883.0" width="40.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="930.0" y="894.0">__x..</text>
</g>
<g>
<title>do_epoll_wait (219 samples, 3.45%)</title><rect x="927.0" y="867.0" width="40.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="930.0" y="878.0">do_..</text>
</g>
<g>
<title>__fdget (9 samples, 0.14%)</title><rect x="927.7" y="851.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="930.7" y="862.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.14%)</title><rect x="927.7" y="835.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="930.7" y="846.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.11%)</title><rect x="928.1" y="819.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="931.1" y="830.0"></text>
</g>
<g>
<title>_raw_spin_lock_irq (2 samples, 0.03%)</title><rect x="929.4" y="851.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="932.4" y="862.0"></text>
</g>
<g>
<title>ep_poll (194 samples, 3.06%)</title><rect x="929.8" y="851.0" width="36.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="932.8" y="862.0">ep_..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (146 samples, 2.30%)</title><rect x="935.7" y="835.0" width="27.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="938.7" y="846.0">e..</text>
</g>
<g>
<title>ep_item_poll.isra.16 (2 samples, 0.03%)</title><rect x="941.7" y="819.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="944.7" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (103 samples, 1.62%)</title><rect x="942.0" y="819.0" width="19.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="945.0" y="830.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (81 samples, 1.28%)</title><rect x="944.4" y="803.0" width="15.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="947.4" y="814.0"></text>
</g>
<g>
<title>sock_poll (57 samples, 0.90%)</title><rect x="948.7" y="787.0" width="10.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="951.7" y="798.0"></text>
</g>
<g>
<title>tcp_poll (16 samples, 0.25%)</title><rect x="955.6" y="771.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="958.6" y="782.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.06%)</title><rect x="958.6" y="771.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="961.6" y="782.0"></text>
</g>
<g>
<title>sock_poll (9 samples, 0.14%)</title><rect x="959.5" y="803.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="962.5" y="814.0"></text>
</g>
<g>
<title>mutex_lock (9 samples, 0.14%)</title><rect x="961.2" y="819.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="964.2" y="830.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="961.9" y="803.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="964.9" y="814.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.05%)</title><rect x="962.3" y="803.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="965.3" y="814.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.05%)</title><rect x="963.0" y="835.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="966.0" y="846.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="963.6" y="835.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="966.6" y="846.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.13%)</title><rect x="964.0" y="835.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="967.0" y="846.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.11%)</title><rect x="964.1" y="819.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="967.1" y="830.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.09%)</title><rect x="964.3" y="803.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="967.3" y="814.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.05%)</title><rect x="964.9" y="787.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="967.9" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.03%)</title><rect x="965.5" y="835.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="968.5" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (3 samples, 0.05%)</title><rect x="965.8" y="851.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="968.8" y="862.0"></text>
</g>
<g>
<title>fput (6 samples, 0.09%)</title><rect x="966.4" y="851.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="969.4" y="862.0"></text>
</g>
<g>
<title>fput_many (6 samples, 0.09%)</title><rect x="966.4" y="835.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="969.4" y="846.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.06%)</title><rect x="968.1" y="947.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="971.1" y="958.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.11%)</title><rect x="969.0" y="947.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="972.0" y="958.0"></text>
</g>
<g>
<title>epoll_wait@plt (2 samples, 0.03%)</title><rect x="970.3" y="947.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="973.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (847 samples, 13.34%)</title><rect x="970.7" y="979.0" width="157.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="973.7" y="990.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (839 samples, 13.22%)</title><rect x="972.1" y="963.0" width="156.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.1" y="974.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (579 samples, 9.12%)</title><rect x="972.1" y="947.0" width="107.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="975.1" y="958.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (345 samples, 5.43%)</title><rect x="982.0" y="931.0" width="64.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="985.0" y="942.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (345 samples, 5.43%)</title><rect x="982.0" y="915.0" width="64.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="985.0" y="926.0">one/nio..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (312 samples, 4.91%)</title><rect x="985.2" y="899.0" width="58.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="988.2" y="910.0">Reques..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (26 samples, 0.41%)</title><rect x="985.2" y="883.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="988.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (26 samples, 0.41%)</title><rect x="985.2" y="867.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="988.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.06%)</title><rect x="987.2" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="990.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.06%)</title><rect x="987.2" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="990.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.09%)</title><rect x="987.9" y="851.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="990.9" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.09%)</title><rect x="987.9" y="835.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="990.9" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="988.3" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="991.3" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="988.3" y="803.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="991.3" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="988.3" y="787.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="991.3" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="988.3" y="771.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="991.3" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="988.7" y="819.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="991.7" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="988.7" y="803.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="991.7" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="988.7" y="787.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="991.7" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="988.7" y="771.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="991.7" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="988.7" y="755.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="991.7" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="989.1" y="851.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="992.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.05%)</title><rect x="989.4" y="851.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="992.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.05%)</title><rect x="989.4" y="835.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="992.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.05%)</title><rect x="989.4" y="819.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="992.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.05%)</title><rect x="989.4" y="803.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="992.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (286 samples, 4.51%)</title><rect x="990.0" y="883.0" width="53.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="993.0" y="894.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (285 samples, 4.49%)</title><rect x="990.2" y="867.0" width="53.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="993.2" y="878.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (284 samples, 4.47%)</title><rect x="990.4" y="851.0" width="52.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="993.4" y="862.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (284 samples, 4.47%)</title><rect x="990.4" y="835.0" width="52.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="993.4" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (20 samples, 0.32%)</title><rect x="993.3" y="819.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="996.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (20 samples, 0.32%)</title><rect x="993.3" y="803.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="996.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (20 samples, 0.32%)</title><rect x="993.3" y="787.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="996.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (20 samples, 0.32%)</title><rect x="993.3" y="771.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="996.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.08%)</title><rect x="997.1" y="819.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1000.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.08%)</title><rect x="997.1" y="803.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1000.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.05%)</title><rect x="997.4" y="787.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1000.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.05%)</title><rect x="997.4" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1000.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.05%)</title><rect x="997.4" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1000.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.05%)</title><rect x="997.4" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1000.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="997.4" y="723.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1000.4" y="734.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.05%)</title><rect x="997.4" y="707.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1000.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="997.6" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1000.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="997.6" y="675.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1000.6" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="997.6" y="659.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1000.6" y="670.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="997.6" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1000.6" y="654.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="997.6" y="627.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1000.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (242 samples, 3.81%)</title><rect x="998.0" y="819.0" width="45.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1001.0" y="830.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (242 samples, 3.81%)</title><rect x="998.0" y="803.0" width="45.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1001.0" y="814.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (242 samples, 3.81%)</title><rect x="998.0" y="787.0" width="45.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1001.0" y="798.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (242 samples, 3.81%)</title><rect x="998.0" y="771.0" width="45.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1001.0" y="782.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (240 samples, 3.78%)</title><rect x="998.4" y="755.0" width="44.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1001.4" y="766.0">jdk/..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.06%)</title><rect x="998.5" y="739.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1001.5" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.06%)</title><rect x="999.3" y="739.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1002.3" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (48 samples, 0.76%)</title><rect x="1000.2" y="739.0" width="8.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1003.2" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.08%)</title><rect x="1001.3" y="723.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1004.3" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (9 samples, 0.14%)</title><rect x="1002.3" y="723.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1005.3" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="1003.9" y="723.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1006.9" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (6 samples, 0.09%)</title><rect x="1004.5" y="723.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1007.5" y="734.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="1005.6" y="723.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1008.6" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_lock (13 samples, 0.20%)</title><rect x="1006.0" y="723.0" width="2.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1009.0" y="734.0"></text>
</g>
<g>
<title>update_get_addr (3 samples, 0.05%)</title><rect x="1008.6" y="723.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1011.6" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (171 samples, 2.69%)</title><rect x="1009.1" y="739.0" width="31.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1012.1" y="750.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (138 samples, 2.17%)</title><rect x="1015.3" y="723.0" width="25.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1018.3" y="734.0">e..</text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="1015.3" y="707.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1018.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (136 samples, 2.14%)</title><rect x="1015.6" y="707.0" width="25.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1018.6" y="718.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (118 samples, 1.86%)</title><rect x="1019.0" y="691.0" width="21.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1022.0" y="702.0">_..</text>
</g>
<g>
<title>do_futex (116 samples, 1.83%)</title><rect x="1019.0" y="675.0" width="21.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1022.0" y="686.0">d..</text>
</g>
<g>
<title>futex_wake (112 samples, 1.76%)</title><rect x="1019.7" y="659.0" width="20.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1022.7" y="670.0"></text>
</g>
<g>
<title>mark_wake_futex (9 samples, 0.14%)</title><rect x="1021.6" y="643.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1024.6" y="654.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.03%)</title><rect x="1022.3" y="627.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1025.3" y="638.0"></text>
</g>
<g>
<title>wake_q_add_safe (3 samples, 0.05%)</title><rect x="1022.7" y="627.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1025.7" y="638.0"></text>
</g>
<g>
<title>wake_up_q (93 samples, 1.47%)</title><rect x="1023.3" y="643.0" width="17.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1026.3" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (92 samples, 1.45%)</title><rect x="1023.4" y="627.0" width="17.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1026.4" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (92 samples, 1.45%)</title><rect x="1023.4" y="611.0" width="17.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1026.4" y="622.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="1040.5" y="675.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1043.5" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.11%)</title><rect x="1040.9" y="739.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1043.9" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (2 samples, 0.03%)</title><rect x="1042.4" y="739.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1045.4" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="1043.2" y="899.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1046.2" y="910.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (11 samples, 0.17%)</title><rect x="1043.5" y="899.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1046.5" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.get (11 samples, 0.17%)</title><rect x="1043.5" y="883.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1046.5" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (11 samples, 0.17%)</title><rect x="1043.5" y="867.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1046.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (11 samples, 0.17%)</title><rect x="1043.5" y="851.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1046.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (11 samples, 0.17%)</title><rect x="1043.5" y="835.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1046.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.05%)</title><rect x="1045.6" y="899.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1048.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="1045.6" y="883.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1048.6" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="1045.6" y="867.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1048.6" y="878.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="1045.6" y="851.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.6" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="1045.6" y="835.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1048.6" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1045.6" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1048.6" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="1045.6" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1048.6" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="1045.6" y="787.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1048.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (56 samples, 0.88%)</title><rect x="1046.1" y="931.0" width="10.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1049.1" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12 samples, 0.19%)</title><rect x="1046.3" y="915.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1049.3" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="1046.3" y="899.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1049.3" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.03%)</title><rect x="1046.3" y="883.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1049.3" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1046.3" y="867.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1049.3" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="1046.3" y="851.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1049.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.14%)</title><rect x="1046.9" y="899.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1049.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.14%)</title><rect x="1046.9" y="883.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1049.9" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.14%)</title><rect x="1046.9" y="867.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1049.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.06%)</title><rect x="1047.8" y="851.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1050.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.50%)</title><rect x="1048.5" y="915.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1051.5" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.50%)</title><rect x="1048.5" y="899.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1051.5" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.06%)</title><rect x="1052.6" y="883.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1055.6" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.06%)</title><rect x="1052.6" y="867.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1055.6" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="1052.6" y="851.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1055.6" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.05%)</title><rect x="1052.6" y="835.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1055.6" y="846.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (2 samples, 0.03%)</title><rect x="1052.6" y="819.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1055.6" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.05%)</title><rect x="1053.4" y="883.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1056.4" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.05%)</title><rect x="1053.4" y="867.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1056.4" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="1053.4" y="851.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1056.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1053.9" y="883.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1056.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1053.9" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1056.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.05%)</title><rect x="1053.9" y="851.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1056.9" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="1053.9" y="835.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1056.9" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1053.9" y="819.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1056.9" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="1053.9" y="803.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1056.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (11 samples, 0.17%)</title><rect x="1054.5" y="915.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.5" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (32 samples, 0.50%)</title><rect x="1056.7" y="931.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1059.7" y="942.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (25 samples, 0.39%)</title><rect x="1057.6" y="915.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1060.6" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (25 samples, 0.39%)</title><rect x="1057.6" y="899.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1060.6" y="910.0"></text>
</g>
<g>
<title>jbyte_arraycopy (4 samples, 0.06%)</title><rect x="1060.1" y="883.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1063.1" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.13%)</title><rect x="1060.8" y="883.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1063.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="1062.3" y="915.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1065.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="1062.3" y="899.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1065.3" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (92 samples, 1.45%)</title><rect x="1062.7" y="931.0" width="17.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.7" y="942.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (15 samples, 0.24%)</title><rect x="1063.0" y="915.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1066.0" y="926.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.14%)</title><rect x="1065.8" y="915.0" width="1.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1068.8" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (66 samples, 1.04%)</title><rect x="1067.5" y="915.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1070.5" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (11 samples, 0.17%)</title><rect x="1074.9" y="899.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1077.9" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (8 samples, 0.13%)</title><rect x="1075.3" y="883.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1078.3" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.11%)</title><rect x="1075.3" y="867.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1078.3" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.05%)</title><rect x="1076.1" y="851.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1079.1" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.06%)</title><rect x="1077.0" y="899.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1080.0" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.06%)</title><rect x="1077.0" y="883.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1080.0" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.06%)</title><rect x="1077.0" y="867.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1080.0" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.06%)</title><rect x="1077.0" y="851.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1080.0" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.05%)</title><rect x="1077.2" y="835.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1080.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1077.7" y="899.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1080.7" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="1077.7" y="883.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1080.7" y="894.0"></text>
</g>
<g>
<title>_new_array_Java (2 samples, 0.03%)</title><rect x="1078.1" y="899.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1081.1" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.11%)</title><rect x="1078.5" y="899.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1081.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.11%)</title><rect x="1078.5" y="883.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1081.5" y="894.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.11%)</title><rect x="1078.5" y="867.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1081.5" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (6 samples, 0.09%)</title><rect x="1078.5" y="851.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1081.5" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.08%)</title><rect x="1078.5" y="835.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1081.5" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.08%)</title><rect x="1078.5" y="819.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1081.5" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.05%)</title><rect x="1078.7" y="803.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1081.7" y="814.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::retire_before_allocation() (2 samples, 0.03%)</title><rect x="1078.8" y="787.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1081.8" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.06%)</title><rect x="1079.8" y="947.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1082.8" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="1080.0" y="931.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1083.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="1080.0" y="915.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1083.0" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="1080.0" y="899.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1083.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (256 samples, 4.03%)</title><rect x="1080.5" y="947.0" width="47.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1083.5" y="958.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (253 samples, 3.99%)</title><rect x="1081.1" y="931.0" width="47.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1084.1" y="942.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (29 samples, 0.46%)</title><rect x="1082.4" y="915.0" width="5.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1085.4" y="926.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.06%)</title><rect x="1082.6" y="899.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1085.6" y="910.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (6 samples, 0.09%)</title><rect x="1083.3" y="899.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1086.3" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (4 samples, 0.06%)</title><rect x="1084.6" y="899.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1087.6" y="910.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.05%)</title><rect x="1085.3" y="899.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1088.3" y="910.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (9 samples, 0.14%)</title><rect x="1085.9" y="899.0" width="1.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1088.9" y="910.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.08%)</title><rect x="1086.3" y="883.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1089.3" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (2 samples, 0.03%)</title><rect x="1087.2" y="883.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1090.2" y="894.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="1087.8" y="915.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1090.8" y="926.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.08%)</title><rect x="1088.1" y="915.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1091.1" y="926.0"></text>
</g>
<g>
<title>__recv (204 samples, 3.21%)</title><rect x="1089.1" y="915.0" width="37.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1092.1" y="926.0">__r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (144 samples, 2.27%)</title><rect x="1100.2" y="899.0" width="26.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1103.2" y="910.0">e..</text>
</g>
<g>
<title>do_syscall_64 (143 samples, 2.25%)</title><rect x="1100.4" y="883.0" width="26.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1103.4" y="894.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (124 samples, 1.95%)</title><rect x="1103.9" y="867.0" width="23.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1106.9" y="878.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (120 samples, 1.89%)</title><rect x="1103.9" y="851.0" width="22.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1106.9" y="862.0">_..</text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="1104.3" y="835.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1107.3" y="846.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.03%)</title><rect x="1104.3" y="819.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1107.3" y="830.0"></text>
</g>
<g>
<title>sock_recvmsg (106 samples, 1.67%)</title><rect x="1104.7" y="835.0" width="19.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1107.7" y="846.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="1104.9" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1107.9" y="830.0"></text>
</g>
<g>
<title>inet6_recvmsg (84 samples, 1.32%)</title><rect x="1105.2" y="819.0" width="15.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1108.2" y="830.0"></text>
</g>
<g>
<title>tcp_recvmsg (80 samples, 1.26%)</title><rect x="1106.0" y="803.0" width="14.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1109.0" y="814.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.24%)</title><rect x="1108.6" y="787.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1111.6" y="798.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="1108.6" y="771.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1111.6" y="782.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.19%)</title><rect x="1109.1" y="771.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1112.1" y="782.0"></text>
</g>
<g>
<title>skb_release_head_state (11 samples, 0.17%)</title><rect x="1109.3" y="755.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1112.3" y="766.0"></text>
</g>
<g>
<title>dst_release (7 samples, 0.11%)</title><rect x="1109.3" y="739.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1112.3" y="750.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.06%)</title><rect x="1110.6" y="739.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1113.6" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.03%)</title><rect x="1111.4" y="787.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1114.4" y="798.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="1112.3" y="787.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1115.3" y="798.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="1112.3" y="771.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1115.3" y="782.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="1112.7" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1115.7" y="798.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (26 samples, 0.41%)</title><rect x="1113.0" y="787.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1116.0" y="798.0"></text>
</g>
<g>
<title>__skb_datagram_iter (26 samples, 0.41%)</title><rect x="1113.0" y="771.0" width="4.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1116.0" y="782.0"></text>
</g>
<g>
<title>simple_copy_to_iter (16 samples, 0.25%)</title><rect x="1114.9" y="755.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1117.9" y="766.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="1115.1" y="739.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1118.1" y="750.0"></text>
</g>
<g>
<title>_copy_to_iter (12 samples, 0.19%)</title><rect x="1115.6" y="739.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1118.6" y="750.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (11 samples, 0.17%)</title><rect x="1115.8" y="723.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1118.8" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.08%)</title><rect x="1118.1" y="787.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1121.1" y="798.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (10 samples, 0.16%)</title><rect x="1119.0" y="787.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1122.0" y="798.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="1119.4" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1122.4" y="782.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.09%)</title><rect x="1119.7" y="771.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1122.7" y="782.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="1119.9" y="755.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1122.9" y="766.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.05%)</title><rect x="1120.3" y="755.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1123.3" y="766.0"></text>
</g>
<g>
<title>security_socket_recvmsg (19 samples, 0.30%)</title><rect x="1120.9" y="819.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1123.9" y="830.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (8 samples, 0.13%)</title><rect x="1121.0" y="803.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1124.0" y="814.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (8 samples, 0.13%)</title><rect x="1121.0" y="787.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1124.0" y="798.0"></text>
</g>
<g>
<title>aa_sk_perm (8 samples, 0.13%)</title><rect x="1121.0" y="771.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1124.0" y="782.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (9 samples, 0.14%)</title><rect x="1122.5" y="803.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1125.5" y="814.0"></text>
</g>
<g>
<title>sock_has_perm (9 samples, 0.14%)</title><rect x="1122.5" y="787.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1125.5" y="798.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.16%)</title><rect x="1124.4" y="835.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1127.4" y="846.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.11%)</title><rect x="1124.4" y="819.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1127.4" y="830.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.11%)</title><rect x="1124.4" y="803.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1127.4" y="814.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.06%)</title><rect x="1124.9" y="787.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1127.9" y="798.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="1125.7" y="819.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1128.7" y="830.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.05%)</title><rect x="1126.4" y="851.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1129.4" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.08%)</title><rect x="1127.0" y="915.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1130.0" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.09%)</title><rect x="1128.1" y="979.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1131.1" y="990.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.09%)</title><rect x="1128.1" y="963.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1131.1" y="974.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.06%)</title><rect x="1128.5" y="947.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1131.5" y="958.0"></text>
</g>
<g>
<title>start_thread (327 samples, 5.15%)</title><rect x="1129.2" y="995.0" width="60.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1132.2" y="1006.0">start_..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (327 samples, 5.15%)</title><rect x="1129.2" y="979.0" width="60.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1132.2" y="990.0">thread..</text>
</g>
<g>
<title>Thread::call_run() (327 samples, 5.15%)</title><rect x="1129.2" y="963.0" width="60.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1132.2" y="974.0">Thread..</text>
</g>
<g>
<title>GangWorker::loop() (321 samples, 5.06%)</title><rect x="1129.2" y="947.0" width="59.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1132.2" y="958.0">GangWo..</text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1129.2" y="931.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1132.2" y="942.0"></text>
</g>
<g>
<title>HeapRegionRemSet::clear_locked(bool) (2 samples, 0.03%)</title><rect x="1129.2" y="915.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1132.2" y="926.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (311 samples, 4.90%)</title><rect x="1129.6" y="931.0" width="57.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1132.6" y="942.0">G1ParT..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (33 samples, 0.52%)</title><rect x="1129.6" y="915.0" width="6.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1132.6" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.03%)</title><rect x="1130.3" y="899.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1133.3" y="910.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (19 samples, 0.30%)</title><rect x="1130.7" y="899.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1133.7" y="910.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (11 samples, 0.17%)</title><rect x="1132.2" y="883.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1135.2" y="894.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1133.9" y="867.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1136.9" y="878.0"></text>
</g>
<g>
<title>OWSTTaskTerminator::offer_termination(TerminatorTerminator*) (5 samples, 0.08%)</title><rect x="1134.2" y="899.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1137.2" y="910.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.08%)</title><rect x="1134.2" y="883.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1137.2" y="894.0"></text>
</g>
<g>
<title>void objArrayOopDesc::oop_iterate_range&lt;G1ScanEvacuatedObjClosure&gt;(G1ScanEvacuatedObjClosure*, int, int) (2 samples, 0.03%)</title><rect x="1135.3" y="899.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.3" y="910.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (268 samples, 4.22%)</title><rect x="1135.9" y="915.0" width="49.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1138.9" y="926.0">G1Rem..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (268 samples, 4.22%)</title><rect x="1135.9" y="899.0" width="49.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1138.9" y="910.0">G1Rem..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (268 samples, 4.22%)</title><rect x="1135.9" y="883.0" width="49.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1138.9" y="894.0">G1Col..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (268 samples, 4.22%)</title><rect x="1135.9" y="867.0" width="49.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1138.9" y="878.0">Dirty..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (266 samples, 4.19%)</title><rect x="1136.1" y="851.0" width="49.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1139.1" y="862.0">G1Ref..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (195 samples, 3.07%)</title><rect x="1136.3" y="835.0" width="36.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1139.3" y="846.0">G1P..</text>
</g>
<g>
<title>G1CardTable::mark_card_deferred(unsigned long) (5 samples, 0.08%)</title><rect x="1147.1" y="819.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1150.1" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (130 samples, 2.05%)</title><rect x="1148.0" y="819.0" width="24.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1151.0" y="830.0">G..</text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (39 samples, 0.61%)</title><rect x="1164.9" y="803.0" width="7.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1167.9" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;TypeArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1172.2" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.2" y="830.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (70 samples, 1.10%)</title><rect x="1172.5" y="835.0" width="13.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.5" y="846.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (62 samples, 0.98%)</title><rect x="1173.1" y="819.0" width="11.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.1" y="830.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (25 samples, 0.39%)</title><rect x="1174.8" y="803.0" width="4.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.8" y="814.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (11 samples, 0.17%)</title><rect x="1176.1" y="787.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.1" y="798.0"></text>
</g>
<g>
<title>HeapRegion::block_is_obj(HeapWord const*) const (9 samples, 0.14%)</title><rect x="1176.2" y="771.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1179.2" y="782.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.03%)</title><rect x="1178.1" y="787.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.1" y="798.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (5 samples, 0.08%)</title><rect x="1178.5" y="787.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.5" y="798.0"></text>
</g>
<g>
<title>OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::push(StarTask) [clone .constprop.577] (2 samples, 0.03%)</title><rect x="1179.6" y="803.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.6" y="814.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.05%)</title><rect x="1180.3" y="803.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.3" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (20 samples, 0.32%)</title><rect x="1180.9" y="803.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.9" y="814.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (14 samples, 0.22%)</title><rect x="1182.0" y="787.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.0" y="798.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (4 samples, 0.06%)</title><rect x="1184.8" y="819.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.8" y="830.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (8 samples, 0.13%)</title><rect x="1185.9" y="915.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.9" y="926.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (6 samples, 0.09%)</title><rect x="1186.1" y="899.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.1" y="910.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (2 samples, 0.03%)</title><rect x="1186.1" y="883.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.1" y="894.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (4 samples, 0.06%)</title><rect x="1186.5" y="883.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.5" y="894.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (4 samples, 0.06%)</title><rect x="1186.5" y="867.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.5" y="878.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (2 samples, 0.03%)</title><rect x="1186.7" y="851.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.7" y="862.0"></text>
</g>
<g>
<title>G1RedirtyLoggedCardsTask::work(unsigned int) (3 samples, 0.05%)</title><rect x="1187.4" y="931.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.4" y="942.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::par_apply_closure_to_all_completed_buffers(CardTableEntryClosure*) (2 samples, 0.03%)</title><rect x="1187.4" y="915.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.4" y="926.0"></text>
</g>
<g>
<title>RedirtyLoggedCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.03%)</title><rect x="1187.4" y="899.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.4" y="910.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (4 samples, 0.06%)</title><rect x="1188.0" y="931.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.0" y="942.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (4 samples, 0.06%)</title><rect x="1188.0" y="915.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.0" y="926.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.66] (3 samples, 0.05%)</title><rect x="1188.0" y="899.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.0" y="910.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.03%)</title><rect x="1188.1" y="883.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.1" y="894.0"></text>
</g>
<g>
<title>VMThread::run() (6 samples, 0.09%)</title><rect x="1188.9" y="947.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.9" y="958.0"></text>
</g>
<g>
<title>VMThread::loop() (6 samples, 0.09%)</title><rect x="1188.9" y="931.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.9" y="942.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (2 samples, 0.03%)</title><rect x="1188.9" y="915.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.9" y="926.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.63] (2 samples, 0.03%)</title><rect x="1189.4" y="915.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.4" y="926.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.03%)</title><rect x="1189.4" y="899.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.4" y="910.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.03%)</title><rect x="1189.4" y="883.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.4" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.03%)</title><rect x="1189.4" y="867.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.4" y="878.0"></text>
</g>
</g>
</svg>
