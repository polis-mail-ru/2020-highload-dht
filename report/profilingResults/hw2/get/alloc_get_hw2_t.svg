<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="549"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="549"> </text>
<g id="frames">
<g>
<title>all (44,153 samples, 100.00%)</title><rect x="10.0" y="515.0" width="1180.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="526.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=25095] (5,525 samples, 12.51%)</title><rect x="10.0" y="499.0" width="147.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="510.0">[NIO Selector #0 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,525 samples, 12.51%)</title><rect x="10.0" y="483.0" width="147.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="494.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (53 samples, 0.12%)</title><rect x="10.0" y="467.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (53 samples, 0.12%)</title><rect x="10.0" y="451.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5,472 samples, 12.39%)</title><rect x="11.4" y="467.0" width="146.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.4" y="478.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,472 samples, 12.39%)</title><rect x="11.4" y="451.0" width="146.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.4" y="462.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,472 samples, 12.39%)</title><rect x="11.4" y="435.0" width="146.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.4" y="446.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,447 samples, 12.34%)</title><rect x="11.4" y="419.0" width="145.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.4" y="430.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,447 samples, 12.34%)</title><rect x="11.4" y="403.0" width="145.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.4" y="414.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (5,445 samples, 12.33%)</title><rect x="11.4" y="387.0" width="145.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.4" y="398.0">RequestHandler1_ge..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.get (5,437 samples, 12.31%)</title><rect x="11.6" y="371.0" width="145.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.6" y="382.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (5,431 samples, 12.30%)</title><rect x="11.7" y="355.0" width="145.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.7" y="366.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (91 samples, 0.21%)</title><rect x="11.7" y="339.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (91 samples, 0.21%)</title><rect x="11.7" y="323.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (91 samples, 0.21%)</title><rect x="11.7" y="307.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (91 samples, 0.21%)</title><rect x="11.7" y="291.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (91 samples, 0.21%)</title><rect x="11.7" y="275.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (83 samples, 0.19%)</title><rect x="11.7" y="259.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.7" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (33 samples, 0.07%)</title><rect x="11.7" y="243.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (33 samples, 0.07%)</title><rect x="11.7" y="227.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (33 samples, 0.07%)</title><rect x="11.7" y="211.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (33 samples, 0.07%)</title><rect x="11.7" y="195.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (33 samples, 0.07%)</title><rect x="11.7" y="179.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (33 samples, 0.07%)</title><rect x="11.7" y="163.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (33 samples, 0.07%)</title><rect x="11.7" y="147.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (33 samples, 0.07%)</title><rect x="11.7" y="131.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (33 samples, 0.07%)</title><rect x="11.7" y="115.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (33 samples, 0.07%)</title><rect x="11.7" y="99.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (33 samples, 0.07%)</title><rect x="11.7" y="83.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (33 samples, 0.07%)</title><rect x="11.7" y="67.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.07%)</title><rect x="11.7" y="51.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="14.7" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (50 samples, 0.11%)</title><rect x="12.6" y="243.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (50 samples, 0.11%)</title><rect x="12.6" y="227.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (50 samples, 0.11%)</title><rect x="12.6" y="211.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (50 samples, 0.11%)</title><rect x="12.6" y="195.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.11%)</title><rect x="12.6" y="179.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="15.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.11%)</title><rect x="12.6" y="163.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (31 samples, 0.07%)</title><rect x="12.6" y="147.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (31 samples, 0.07%)</title><rect x="12.6" y="131.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="15.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (31 samples, 0.07%)</title><rect x="12.6" y="115.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (31 samples, 0.07%)</title><rect x="12.6" y="99.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (16 samples, 0.04%)</title><rect x="12.9" y="83.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (10 samples, 0.02%)</title><rect x="13.1" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.1" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (10 samples, 0.02%)</title><rect x="13.1" y="51.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.1" y="62.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (19 samples, 0.04%)</title><rect x="13.4" y="147.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (19 samples, 0.04%)</title><rect x="13.4" y="131.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.4" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (19 samples, 0.04%)</title><rect x="13.4" y="115.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.4" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (19 samples, 0.04%)</title><rect x="13.4" y="99.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (19 samples, 0.04%)</title><rect x="13.4" y="83.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (19 samples, 0.04%)</title><rect x="13.4" y="67.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (19 samples, 0.04%)</title><rect x="13.4" y="51.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.4" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (19 samples, 0.04%)</title><rect x="13.4" y="35.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="16.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (5,332 samples, 12.08%)</title><rect x="14.4" y="339.0" width="142.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.4" y="350.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (5,243 samples, 11.87%)</title><rect x="14.7" y="323.0" width="140.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.7" y="334.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,053 samples, 2.38%)</title><rect x="14.7" y="307.0" width="28.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.7" y="318.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,052 samples, 2.38%)</title><rect x="14.7" y="291.0" width="28.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.7" y="302.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (30 samples, 0.07%)</title><rect x="14.7" y="275.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.7" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (30 samples, 0.07%)</title><rect x="14.7" y="259.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="17.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,008 samples, 2.28%)</title><rect x="15.6" y="275.0" width="26.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.6" y="286.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,008 samples, 2.28%)</title><rect x="15.6" y="259.0" width="26.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.6" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (12 samples, 0.03%)</title><rect x="15.6" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.6" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.03%)</title><rect x="15.6" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.6" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.03%)</title><rect x="15.6" y="211.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="18.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (996 samples, 2.26%)</title><rect x="15.9" y="243.0" width="26.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.9" y="254.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (996 samples, 2.26%)</title><rect x="15.9" y="227.0" width="26.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.9" y="238.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (996 samples, 2.26%)</title><rect x="15.9" y="211.0" width="26.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.9" y="222.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (996 samples, 2.26%)</title><rect x="15.9" y="195.0" width="26.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.9" y="206.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (684 samples, 1.55%)</title><rect x="15.9" y="179.0" width="18.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (684 samples, 1.55%)</title><rect x="15.9" y="163.0" width="18.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (684 samples, 1.55%)</title><rect x="15.9" y="147.0" width="18.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (684 samples, 1.55%)</title><rect x="15.9" y="131.0" width="18.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.9" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (286 samples, 0.65%)</title><rect x="15.9" y="115.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.9" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (154 samples, 0.35%)</title><rect x="15.9" y="99.0" width="4.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="18.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (132 samples, 0.30%)</title><rect x="20.0" y="99.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.0" y="110.0"></text>
</g>
<g>
<title>byte[] (132 samples, 0.30%)</title><rect x="20.0" y="83.0" width="3.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="23.0" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (20 samples, 0.05%)</title><rect x="23.5" y="115.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="26.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (27 samples, 0.06%)</title><rect x="24.1" y="115.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="27.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (276 samples, 0.63%)</title><rect x="24.8" y="115.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (194 samples, 0.44%)</title><rect x="24.8" y="99.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="27.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (108 samples, 0.24%)</title><rect x="24.8" y="83.0" width="2.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="27.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (86 samples, 0.19%)</title><rect x="27.7" y="83.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.7" y="94.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.19%)</title><rect x="27.7" y="67.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="30.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (82 samples, 0.19%)</title><rect x="30.0" y="99.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (82 samples, 0.19%)</title><rect x="30.0" y="83.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (59 samples, 0.13%)</title><rect x="30.0" y="67.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="33.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (23 samples, 0.05%)</title><rect x="31.5" y="67.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.5" y="78.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.05%)</title><rect x="31.5" y="51.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="34.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (75 samples, 0.17%)</title><rect x="32.2" y="115.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (75 samples, 0.17%)</title><rect x="32.2" y="99.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (46 samples, 0.10%)</title><rect x="32.2" y="83.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="35.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (29 samples, 0.07%)</title><rect x="33.4" y="83.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.4" y="94.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.07%)</title><rect x="33.4" y="67.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="36.4" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (312 samples, 0.71%)</title><rect x="34.2" y="179.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (312 samples, 0.71%)</title><rect x="34.2" y="163.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="37.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (312 samples, 0.71%)</title><rect x="34.2" y="147.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="37.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (312 samples, 0.71%)</title><rect x="34.2" y="131.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (312 samples, 0.71%)</title><rect x="34.2" y="115.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (312 samples, 0.71%)</title><rect x="34.2" y="99.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.2" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (312 samples, 0.71%)</title><rect x="34.2" y="83.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="37.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (312 samples, 0.71%)</title><rect x="34.2" y="67.0" width="8.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="37.2" y="78.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (11 samples, 0.02%)</title><rect x="42.5" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="45.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11 samples, 0.02%)</title><rect x="42.5" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (11 samples, 0.02%)</title><rect x="42.5" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (88 samples, 0.20%)</title><rect x="42.8" y="307.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (88 samples, 0.20%)</title><rect x="42.8" y="291.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (88 samples, 0.20%)</title><rect x="42.8" y="275.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.8" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (38 samples, 0.09%)</title><rect x="42.8" y="259.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (38 samples, 0.09%)</title><rect x="42.8" y="243.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (38 samples, 0.09%)</title><rect x="42.8" y="227.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.8" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (38 samples, 0.09%)</title><rect x="42.8" y="211.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="45.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (38 samples, 0.09%)</title><rect x="42.8" y="195.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (38 samples, 0.09%)</title><rect x="42.8" y="179.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (38 samples, 0.09%)</title><rect x="42.8" y="163.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="45.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (38 samples, 0.09%)</title><rect x="42.8" y="147.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (38 samples, 0.09%)</title><rect x="42.8" y="131.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (38 samples, 0.09%)</title><rect x="42.8" y="115.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (38 samples, 0.09%)</title><rect x="42.8" y="99.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (38 samples, 0.09%)</title><rect x="42.8" y="83.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (38 samples, 0.09%)</title><rect x="42.8" y="67.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="45.8" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (50 samples, 0.11%)</title><rect x="43.8" y="259.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (50 samples, 0.11%)</title><rect x="43.8" y="243.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (50 samples, 0.11%)</title><rect x="43.8" y="227.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="46.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (50 samples, 0.11%)</title><rect x="43.8" y="211.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.11%)</title><rect x="43.8" y="195.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.11%)</title><rect x="43.8" y="179.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (35 samples, 0.08%)</title><rect x="43.8" y="163.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (35 samples, 0.08%)</title><rect x="43.8" y="147.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (35 samples, 0.08%)</title><rect x="43.8" y="131.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (35 samples, 0.08%)</title><rect x="43.8" y="115.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.02%)</title><rect x="43.8" y="99.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (19 samples, 0.04%)</title><rect x="44.2" y="99.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.03%)</title><rect x="44.2" y="83.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.02%)</title><rect x="44.2" y="67.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="47.2" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (15 samples, 0.03%)</title><rect x="44.7" y="163.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (15 samples, 0.03%)</title><rect x="44.7" y="147.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (15 samples, 0.03%)</title><rect x="44.7" y="131.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (15 samples, 0.03%)</title><rect x="44.7" y="115.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (15 samples, 0.03%)</title><rect x="44.7" y="99.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (15 samples, 0.03%)</title><rect x="44.7" y="83.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.03%)</title><rect x="44.7" y="67.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.03%)</title><rect x="44.7" y="51.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="47.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (4,102 samples, 9.29%)</title><rect x="45.1" y="307.0" width="109.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.1" y="318.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (4,098 samples, 9.28%)</title><rect x="45.1" y="291.0" width="109.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="48.1" y="302.0">java/lang/Ite..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$105/1095861321.accept (4,094 samples, 9.27%)</title><rect x="45.3" y="275.0" width="109.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.3" y="286.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$10 (4,094 samples, 9.27%)</title><rect x="45.3" y="259.0" width="109.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.3" y="270.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (4,094 samples, 9.27%)</title><rect x="45.3" y="243.0" width="109.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.3" y="254.0">ru/mail/polis..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (23 samples, 0.05%)</title><rect x="45.3" y="227.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="48.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (4,071 samples, 9.22%)</title><rect x="45.9" y="227.0" width="108.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.9" y="238.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (4,071 samples, 9.22%)</title><rect x="45.9" y="211.0" width="108.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.9" y="222.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (4,071 samples, 9.22%)</title><rect x="45.9" y="195.0" width="108.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.9" y="206.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,897 samples, 6.56%)</title><rect x="45.9" y="179.0" width="77.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.9" y="190.0">java/nio/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,550 samples, 3.51%)</title><rect x="45.9" y="163.0" width="41.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="48.9" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,347 samples, 3.05%)</title><rect x="87.3" y="163.0" width="36.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.3" y="174.0">jav..</text>
</g>
<g>
<title>byte[] (1,347 samples, 3.05%)</title><rect x="87.3" y="147.0" width="36.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="90.3" y="158.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (1,174 samples, 2.66%)</title><rect x="123.3" y="179.0" width="31.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.3" y="190.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,174 samples, 2.66%)</title><rect x="123.3" y="163.0" width="31.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.3" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (796 samples, 1.80%)</title><rect x="123.3" y="147.0" width="21.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="126.3" y="158.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (378 samples, 0.86%)</title><rect x="144.6" y="147.0" width="10.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.6" y="158.0"></text>
</g>
<g>
<title>byte[] (378 samples, 0.86%)</title><rect x="144.6" y="131.0" width="10.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="147.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (19 samples, 0.04%)</title><rect x="154.8" y="323.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/TableSet.startIterating (59 samples, 0.13%)</title><rect x="155.3" y="323.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.3" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (11 samples, 0.02%)</title><rect x="155.4" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.4" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (43 samples, 0.10%)</title><rect x="155.7" y="307.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (41 samples, 0.09%)</title><rect x="155.8" y="291.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.8" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (41 samples, 0.09%)</title><rect x="155.8" y="275.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.8" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (39 samples, 0.09%)</title><rect x="155.8" y="259.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.8" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (36 samples, 0.08%)</title><rect x="155.9" y="243.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.9" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (29 samples, 0.07%)</title><rect x="156.1" y="227.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.1" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (18 samples, 0.04%)</title><rect x="156.1" y="211.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="159.1" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (11 samples, 0.02%)</title><rect x="156.6" y="211.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="159.6" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (11 samples, 0.02%)</title><rect x="156.6" y="195.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="159.6" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (17 samples, 0.04%)</title><rect x="157.0" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.0" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.03%)</title><rect x="157.1" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.03%)</title><rect x="157.1" y="387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="160.1" y="398.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.02%)</title><rect x="157.1" y="371.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="160.1" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25096] (5,479 samples, 12.41%)</title><rect x="157.7" y="499.0" width="146.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="160.7" y="510.0">[NIO Selector #1 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,479 samples, 12.41%)</title><rect x="157.7" y="483.0" width="146.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="160.7" y="494.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (65 samples, 0.15%)</title><rect x="157.7" y="467.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.7" y="478.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (65 samples, 0.15%)</title><rect x="157.7" y="451.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="160.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5,414 samples, 12.26%)</title><rect x="159.4" y="467.0" width="144.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.4" y="478.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,414 samples, 12.26%)</title><rect x="159.4" y="451.0" width="144.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="162.4" y="462.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,414 samples, 12.26%)</title><rect x="159.4" y="435.0" width="144.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="162.4" y="446.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,391 samples, 12.21%)</title><rect x="159.4" y="419.0" width="144.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.4" y="430.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,391 samples, 12.21%)</title><rect x="159.4" y="403.0" width="144.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.4" y="414.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (5,390 samples, 12.21%)</title><rect x="159.4" y="387.0" width="144.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.4" y="398.0">RequestHandler1_ge..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.get (5,384 samples, 12.19%)</title><rect x="159.6" y="371.0" width="143.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.6" y="382.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (5,370 samples, 12.16%)</title><rect x="159.7" y="355.0" width="143.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.7" y="366.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (83 samples, 0.19%)</title><rect x="159.7" y="339.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (83 samples, 0.19%)</title><rect x="159.7" y="323.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (83 samples, 0.19%)</title><rect x="159.7" y="307.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (83 samples, 0.19%)</title><rect x="159.7" y="291.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (83 samples, 0.19%)</title><rect x="159.7" y="275.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (77 samples, 0.17%)</title><rect x="159.7" y="259.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.7" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (32 samples, 0.07%)</title><rect x="159.7" y="243.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (32 samples, 0.07%)</title><rect x="159.7" y="227.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (32 samples, 0.07%)</title><rect x="159.7" y="211.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (32 samples, 0.07%)</title><rect x="159.7" y="195.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (32 samples, 0.07%)</title><rect x="159.7" y="179.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (32 samples, 0.07%)</title><rect x="159.7" y="163.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (32 samples, 0.07%)</title><rect x="159.7" y="147.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (32 samples, 0.07%)</title><rect x="159.7" y="131.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (32 samples, 0.07%)</title><rect x="159.7" y="115.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (32 samples, 0.07%)</title><rect x="159.7" y="99.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (32 samples, 0.07%)</title><rect x="159.7" y="83.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (32 samples, 0.07%)</title><rect x="159.7" y="67.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (32 samples, 0.07%)</title><rect x="159.7" y="51.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="162.7" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (45 samples, 0.10%)</title><rect x="160.6" y="243.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (45 samples, 0.10%)</title><rect x="160.6" y="227.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (45 samples, 0.10%)</title><rect x="160.6" y="211.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (45 samples, 0.10%)</title><rect x="160.6" y="195.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (45 samples, 0.10%)</title><rect x="160.6" y="179.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (45 samples, 0.10%)</title><rect x="160.6" y="163.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (31 samples, 0.07%)</title><rect x="160.6" y="147.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="163.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (31 samples, 0.07%)</title><rect x="160.6" y="131.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (31 samples, 0.07%)</title><rect x="160.6" y="115.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (31 samples, 0.07%)</title><rect x="160.6" y="99.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.03%)</title><rect x="160.6" y="83.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="163.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (10 samples, 0.02%)</title><rect x="161.0" y="83.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="164.0" y="94.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (14 samples, 0.03%)</title><rect x="161.4" y="147.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="164.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (14 samples, 0.03%)</title><rect x="161.4" y="131.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.4" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (14 samples, 0.03%)</title><rect x="161.4" y="115.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="164.4" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (14 samples, 0.03%)</title><rect x="161.4" y="99.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (14 samples, 0.03%)</title><rect x="161.4" y="83.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="164.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (14 samples, 0.03%)</title><rect x="161.4" y="67.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.03%)</title><rect x="161.4" y="51.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.4" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.03%)</title><rect x="161.4" y="35.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="164.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (5,276 samples, 11.95%)</title><rect x="162.2" y="339.0" width="141.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="165.2" y="350.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (5,189 samples, 11.75%)</title><rect x="162.5" y="323.0" width="138.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="165.5" y="334.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,004 samples, 2.27%)</title><rect x="162.5" y="307.0" width="26.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.5" y="318.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,001 samples, 2.27%)</title><rect x="162.6" y="291.0" width="26.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.6" y="302.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (29 samples, 0.07%)</title><rect x="162.7" y="275.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.7" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (29 samples, 0.07%)</title><rect x="162.7" y="259.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="165.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (952 samples, 2.16%)</title><rect x="163.5" y="275.0" width="25.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.5" y="286.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (952 samples, 2.16%)</title><rect x="163.5" y="259.0" width="25.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.5" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (16 samples, 0.04%)</title><rect x="163.5" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.04%)</title><rect x="163.5" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.5" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.04%)</title><rect x="163.5" y="211.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="166.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (936 samples, 2.12%)</title><rect x="163.9" y="243.0" width="25.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.9" y="254.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (936 samples, 2.12%)</title><rect x="163.9" y="227.0" width="25.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.9" y="238.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (936 samples, 2.12%)</title><rect x="163.9" y="211.0" width="25.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.9" y="222.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (936 samples, 2.12%)</title><rect x="163.9" y="195.0" width="25.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="166.9" y="206.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (660 samples, 1.49%)</title><rect x="163.9" y="179.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (660 samples, 1.49%)</title><rect x="163.9" y="163.0" width="17.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (660 samples, 1.49%)</title><rect x="163.9" y="147.0" width="17.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (660 samples, 1.49%)</title><rect x="163.9" y="131.0" width="17.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.9" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (261 samples, 0.59%)</title><rect x="163.9" y="115.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.9" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (156 samples, 0.35%)</title><rect x="163.9" y="99.0" width="4.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="166.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (105 samples, 0.24%)</title><rect x="168.1" y="99.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.1" y="110.0"></text>
</g>
<g>
<title>byte[] (105 samples, 0.24%)</title><rect x="168.1" y="83.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="171.1" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (29 samples, 0.07%)</title><rect x="170.9" y="115.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="173.9" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (28 samples, 0.06%)</title><rect x="171.7" y="115.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="174.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (253 samples, 0.57%)</title><rect x="172.4" y="115.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (175 samples, 0.40%)</title><rect x="172.4" y="99.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="175.4" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (91 samples, 0.21%)</title><rect x="172.4" y="83.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="175.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (84 samples, 0.19%)</title><rect x="174.8" y="83.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.8" y="94.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.19%)</title><rect x="174.8" y="67.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="177.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (78 samples, 0.18%)</title><rect x="177.1" y="99.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (78 samples, 0.18%)</title><rect x="177.1" y="83.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="180.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (48 samples, 0.11%)</title><rect x="177.1" y="67.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="180.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (30 samples, 0.07%)</title><rect x="178.4" y="67.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.4" y="78.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.07%)</title><rect x="178.4" y="51.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="181.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (89 samples, 0.20%)</title><rect x="179.2" y="115.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (89 samples, 0.20%)</title><rect x="179.2" y="99.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="182.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (52 samples, 0.12%)</title><rect x="179.2" y="83.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="182.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (37 samples, 0.08%)</title><rect x="180.6" y="83.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.6" y="94.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.08%)</title><rect x="180.6" y="67.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="183.6" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (276 samples, 0.63%)</title><rect x="181.5" y="179.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (276 samples, 0.63%)</title><rect x="181.5" y="163.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="184.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (276 samples, 0.63%)</title><rect x="181.5" y="147.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="184.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (276 samples, 0.63%)</title><rect x="181.5" y="131.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="184.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (276 samples, 0.63%)</title><rect x="181.5" y="115.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (276 samples, 0.63%)</title><rect x="181.5" y="99.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (276 samples, 0.63%)</title><rect x="181.5" y="83.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (276 samples, 0.63%)</title><rect x="181.5" y="67.0" width="7.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="184.5" y="78.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (17 samples, 0.04%)</title><rect x="188.9" y="275.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (17 samples, 0.04%)</title><rect x="188.9" y="259.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (17 samples, 0.04%)</title><rect x="188.9" y="243.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="191.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (16 samples, 0.04%)</title><rect x="189.0" y="227.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="192.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (79 samples, 0.18%)</title><rect x="189.4" y="307.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (78 samples, 0.18%)</title><rect x="189.4" y="291.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="192.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (78 samples, 0.18%)</title><rect x="189.4" y="275.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="192.4" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (25 samples, 0.06%)</title><rect x="189.4" y="259.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (25 samples, 0.06%)</title><rect x="189.4" y="243.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (25 samples, 0.06%)</title><rect x="189.4" y="227.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (25 samples, 0.06%)</title><rect x="189.4" y="211.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (25 samples, 0.06%)</title><rect x="189.4" y="195.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (25 samples, 0.06%)</title><rect x="189.4" y="179.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (25 samples, 0.06%)</title><rect x="189.4" y="163.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (25 samples, 0.06%)</title><rect x="189.4" y="147.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (25 samples, 0.06%)</title><rect x="189.4" y="131.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (25 samples, 0.06%)</title><rect x="189.4" y="115.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (25 samples, 0.06%)</title><rect x="189.4" y="99.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (25 samples, 0.06%)</title><rect x="189.4" y="83.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="192.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (25 samples, 0.06%)</title><rect x="189.4" y="67.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="192.4" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (53 samples, 0.12%)</title><rect x="190.1" y="259.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="193.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (53 samples, 0.12%)</title><rect x="190.1" y="243.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="193.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (53 samples, 0.12%)</title><rect x="190.1" y="227.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (53 samples, 0.12%)</title><rect x="190.1" y="211.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (53 samples, 0.12%)</title><rect x="190.1" y="195.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (53 samples, 0.12%)</title><rect x="190.1" y="179.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (35 samples, 0.08%)</title><rect x="190.1" y="163.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (35 samples, 0.08%)</title><rect x="190.1" y="147.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="193.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (35 samples, 0.08%)</title><rect x="190.1" y="131.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (35 samples, 0.08%)</title><rect x="190.1" y="115.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="193.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.03%)</title><rect x="190.1" y="99.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.02%)</title><rect x="190.1" y="83.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="193.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (16 samples, 0.04%)</title><rect x="190.6" y="99.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.03%)</title><rect x="190.6" y="83.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.6" y="94.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (18 samples, 0.04%)</title><rect x="191.0" y="163.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (18 samples, 0.04%)</title><rect x="191.0" y="147.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (18 samples, 0.04%)</title><rect x="191.0" y="131.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.0" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (18 samples, 0.04%)</title><rect x="191.0" y="115.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="194.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (18 samples, 0.04%)</title><rect x="191.0" y="99.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="194.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (18 samples, 0.04%)</title><rect x="191.0" y="83.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (18 samples, 0.04%)</title><rect x="191.0" y="67.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="194.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 0.04%)</title><rect x="191.0" y="51.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="194.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (4,106 samples, 9.30%)</title><rect x="191.5" y="307.0" width="109.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="194.5" y="318.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (4,103 samples, 9.29%)</title><rect x="191.5" y="291.0" width="109.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.5" y="302.0">java/lang/Ite..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$105/1095861321.accept (4,099 samples, 9.28%)</title><rect x="191.6" y="275.0" width="109.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="194.6" y="286.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$10 (4,099 samples, 9.28%)</title><rect x="191.6" y="259.0" width="109.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.6" y="270.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (4,099 samples, 9.28%)</title><rect x="191.6" y="243.0" width="109.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.6" y="254.0">ru/mail/polis..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (26 samples, 0.06%)</title><rect x="191.6" y="227.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="194.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (4,073 samples, 9.22%)</title><rect x="192.3" y="227.0" width="108.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.3" y="238.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (4,073 samples, 9.22%)</title><rect x="192.3" y="211.0" width="108.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.3" y="222.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (4,073 samples, 9.22%)</title><rect x="192.3" y="195.0" width="108.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.3" y="206.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,922 samples, 6.62%)</title><rect x="192.3" y="179.0" width="78.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="195.3" y="190.0">java/nio/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,587 samples, 3.59%)</title><rect x="192.3" y="163.0" width="42.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="195.3" y="174.0">java..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,335 samples, 3.02%)</title><rect x="234.7" y="163.0" width="35.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.7" y="174.0">jav..</text>
</g>
<g>
<title>byte[] (1,335 samples, 3.02%)</title><rect x="234.7" y="147.0" width="35.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="237.7" y="158.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (1,151 samples, 2.61%)</title><rect x="270.4" y="179.0" width="30.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.4" y="190.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,151 samples, 2.61%)</title><rect x="270.4" y="163.0" width="30.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="273.4" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (750 samples, 1.70%)</title><rect x="270.4" y="147.0" width="20.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="273.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (401 samples, 0.91%)</title><rect x="290.4" y="147.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="293.4" y="158.0"></text>
</g>
<g>
<title>byte[] (401 samples, 0.91%)</title><rect x="290.4" y="131.0" width="10.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="293.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (24 samples, 0.05%)</title><rect x="301.2" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="304.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/TableSet.startIterating (51 samples, 0.12%)</title><rect x="301.9" y="323.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.9" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (40 samples, 0.09%)</title><rect x="302.2" y="307.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="305.2" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (40 samples, 0.09%)</title><rect x="302.2" y="291.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (40 samples, 0.09%)</title><rect x="302.2" y="275.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.2" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (38 samples, 0.09%)</title><rect x="302.2" y="259.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (36 samples, 0.08%)</title><rect x="302.3" y="243.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.3" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (28 samples, 0.06%)</title><rect x="302.5" y="227.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.5" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (11 samples, 0.02%)</title><rect x="302.5" y="211.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="305.5" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (17 samples, 0.04%)</title><rect x="302.8" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="305.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (17 samples, 0.04%)</title><rect x="302.8" y="195.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="305.8" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (14 samples, 0.03%)</title><rect x="303.5" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.5" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25097] (5,537 samples, 12.54%)</title><rect x="304.1" y="499.0" width="148.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="307.1" y="510.0">[NIO Selector #2 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,537 samples, 12.54%)</title><rect x="304.1" y="483.0" width="148.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="307.1" y="494.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (52 samples, 0.12%)</title><rect x="304.1" y="467.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="307.1" y="478.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (52 samples, 0.12%)</title><rect x="304.1" y="451.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="307.1" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5,485 samples, 12.42%)</title><rect x="305.5" y="467.0" width="146.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.5" y="478.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,485 samples, 12.42%)</title><rect x="305.5" y="451.0" width="146.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.5" y="462.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,485 samples, 12.42%)</title><rect x="305.5" y="435.0" width="146.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.5" y="446.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,470 samples, 12.39%)</title><rect x="305.5" y="419.0" width="146.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.5" y="430.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,470 samples, 12.39%)</title><rect x="305.5" y="403.0" width="146.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.5" y="414.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (5,469 samples, 12.39%)</title><rect x="305.5" y="387.0" width="146.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.5" y="398.0">RequestHandler1_ge..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.get (5,456 samples, 12.36%)</title><rect x="305.8" y="371.0" width="145.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="308.8" y="382.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (5,443 samples, 12.33%)</title><rect x="306.0" y="355.0" width="145.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="309.0" y="366.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (97 samples, 0.22%)</title><rect x="306.0" y="339.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (97 samples, 0.22%)</title><rect x="306.0" y="323.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="309.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (97 samples, 0.22%)</title><rect x="306.0" y="307.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (97 samples, 0.22%)</title><rect x="306.0" y="291.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (97 samples, 0.22%)</title><rect x="306.0" y="275.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="309.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (90 samples, 0.20%)</title><rect x="306.0" y="259.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="309.0" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (46 samples, 0.10%)</title><rect x="306.0" y="243.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="309.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (46 samples, 0.10%)</title><rect x="306.0" y="227.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (46 samples, 0.10%)</title><rect x="306.0" y="211.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="309.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (46 samples, 0.10%)</title><rect x="306.0" y="195.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="309.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (46 samples, 0.10%)</title><rect x="306.0" y="179.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="309.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (46 samples, 0.10%)</title><rect x="306.0" y="163.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="309.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (46 samples, 0.10%)</title><rect x="306.0" y="147.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="309.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (46 samples, 0.10%)</title><rect x="306.0" y="131.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.0" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (46 samples, 0.10%)</title><rect x="306.0" y="115.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (46 samples, 0.10%)</title><rect x="306.0" y="99.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="309.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (46 samples, 0.10%)</title><rect x="306.0" y="83.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (46 samples, 0.10%)</title><rect x="306.0" y="67.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (46 samples, 0.10%)</title><rect x="306.0" y="51.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="309.0" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (44 samples, 0.10%)</title><rect x="307.2" y="243.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (44 samples, 0.10%)</title><rect x="307.2" y="227.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (44 samples, 0.10%)</title><rect x="307.2" y="211.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (44 samples, 0.10%)</title><rect x="307.2" y="195.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="310.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (44 samples, 0.10%)</title><rect x="307.2" y="179.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (44 samples, 0.10%)</title><rect x="307.2" y="163.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="310.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (27 samples, 0.06%)</title><rect x="307.2" y="147.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (27 samples, 0.06%)</title><rect x="307.2" y="131.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (27 samples, 0.06%)</title><rect x="307.2" y="115.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="310.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (27 samples, 0.06%)</title><rect x="307.2" y="99.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="310.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.02%)</title><rect x="307.2" y="83.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="310.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (10 samples, 0.02%)</title><rect x="307.6" y="83.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="310.6" y="94.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (17 samples, 0.04%)</title><rect x="308.0" y="147.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (17 samples, 0.04%)</title><rect x="308.0" y="131.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.0" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (17 samples, 0.04%)</title><rect x="308.0" y="115.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.0" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (17 samples, 0.04%)</title><rect x="308.0" y="99.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (17 samples, 0.04%)</title><rect x="308.0" y="83.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (17 samples, 0.04%)</title><rect x="308.0" y="67.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="311.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (17 samples, 0.04%)</title><rect x="308.0" y="51.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.0" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.04%)</title><rect x="308.0" y="35.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="311.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (5,337 samples, 12.09%)</title><rect x="308.8" y="339.0" width="142.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.8" y="350.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (5,243 samples, 11.87%)</title><rect x="309.2" y="323.0" width="140.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="312.2" y="334.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (991 samples, 2.24%)</title><rect x="309.2" y="307.0" width="26.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.2" y="318.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (991 samples, 2.24%)</title><rect x="309.2" y="291.0" width="26.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="312.2" y="302.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (30 samples, 0.07%)</title><rect x="309.3" y="275.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.3" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (30 samples, 0.07%)</title><rect x="309.3" y="259.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="312.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (947 samples, 2.14%)</title><rect x="310.1" y="275.0" width="25.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.1" y="286.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (947 samples, 2.14%)</title><rect x="310.1" y="259.0" width="25.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="313.1" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (15 samples, 0.03%)</title><rect x="310.1" y="243.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="313.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.03%)</title><rect x="310.1" y="227.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.1" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.03%)</title><rect x="310.1" y="211.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="313.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (932 samples, 2.11%)</title><rect x="310.5" y="243.0" width="24.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.5" y="254.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (932 samples, 2.11%)</title><rect x="310.5" y="227.0" width="24.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.5" y="238.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (932 samples, 2.11%)</title><rect x="310.5" y="211.0" width="24.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.5" y="222.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (932 samples, 2.11%)</title><rect x="310.5" y="195.0" width="24.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.5" y="206.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (650 samples, 1.47%)</title><rect x="310.5" y="179.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (650 samples, 1.47%)</title><rect x="310.5" y="163.0" width="17.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="313.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (650 samples, 1.47%)</title><rect x="310.5" y="147.0" width="17.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (650 samples, 1.47%)</title><rect x="310.5" y="131.0" width="17.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (255 samples, 0.58%)</title><rect x="310.5" y="115.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.5" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (150 samples, 0.34%)</title><rect x="310.5" y="99.0" width="4.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="313.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (105 samples, 0.24%)</title><rect x="314.5" y="99.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.5" y="110.0"></text>
</g>
<g>
<title>byte[] (105 samples, 0.24%)</title><rect x="314.5" y="83.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="317.5" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (27 samples, 0.06%)</title><rect x="317.3" y="115.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="320.3" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (31 samples, 0.07%)</title><rect x="318.0" y="115.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="321.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (267 samples, 0.60%)</title><rect x="318.8" y="115.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="321.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (191 samples, 0.43%)</title><rect x="318.8" y="99.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="321.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (110 samples, 0.25%)</title><rect x="318.8" y="83.0" width="3.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="321.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (81 samples, 0.18%)</title><rect x="321.8" y="83.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="324.8" y="94.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.18%)</title><rect x="321.8" y="67.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="324.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (76 samples, 0.17%)</title><rect x="323.9" y="99.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.9" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (76 samples, 0.17%)</title><rect x="323.9" y="83.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (59 samples, 0.13%)</title><rect x="323.9" y="67.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="326.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (17 samples, 0.04%)</title><rect x="325.5" y="67.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="328.5" y="78.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.04%)</title><rect x="325.5" y="51.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="328.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (70 samples, 0.16%)</title><rect x="326.0" y="115.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (70 samples, 0.16%)</title><rect x="326.0" y="99.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (42 samples, 0.10%)</title><rect x="326.0" y="83.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="329.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (28 samples, 0.06%)</title><rect x="327.1" y="83.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.1" y="94.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.06%)</title><rect x="327.1" y="67.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="330.1" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (282 samples, 0.64%)</title><rect x="327.8" y="179.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="330.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (282 samples, 0.64%)</title><rect x="327.8" y="163.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (282 samples, 0.64%)</title><rect x="327.8" y="147.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (282 samples, 0.64%)</title><rect x="327.8" y="131.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (282 samples, 0.64%)</title><rect x="327.8" y="115.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="330.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (282 samples, 0.64%)</title><rect x="327.8" y="99.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (282 samples, 0.64%)</title><rect x="327.8" y="83.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (282 samples, 0.64%)</title><rect x="327.8" y="67.0" width="7.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="330.8" y="78.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (11 samples, 0.02%)</title><rect x="335.4" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="338.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11 samples, 0.02%)</title><rect x="335.4" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (11 samples, 0.02%)</title><rect x="335.4" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (94 samples, 0.21%)</title><rect x="335.7" y="307.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (93 samples, 0.21%)</title><rect x="335.7" y="291.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (93 samples, 0.21%)</title><rect x="335.7" y="275.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.7" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (40 samples, 0.09%)</title><rect x="335.7" y="259.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (40 samples, 0.09%)</title><rect x="335.7" y="243.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (40 samples, 0.09%)</title><rect x="335.7" y="227.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (40 samples, 0.09%)</title><rect x="335.7" y="211.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (40 samples, 0.09%)</title><rect x="335.7" y="195.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="338.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (40 samples, 0.09%)</title><rect x="335.7" y="179.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (40 samples, 0.09%)</title><rect x="335.7" y="163.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (40 samples, 0.09%)</title><rect x="335.7" y="147.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (40 samples, 0.09%)</title><rect x="335.7" y="131.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (40 samples, 0.09%)</title><rect x="335.7" y="115.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (40 samples, 0.09%)</title><rect x="335.7" y="99.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (40 samples, 0.09%)</title><rect x="335.7" y="83.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (40 samples, 0.09%)</title><rect x="335.7" y="67.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="338.7" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (53 samples, 0.12%)</title><rect x="336.8" y="259.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="339.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (53 samples, 0.12%)</title><rect x="336.8" y="243.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (53 samples, 0.12%)</title><rect x="336.8" y="227.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (53 samples, 0.12%)</title><rect x="336.8" y="211.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (53 samples, 0.12%)</title><rect x="336.8" y="195.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (53 samples, 0.12%)</title><rect x="336.8" y="179.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="339.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (32 samples, 0.07%)</title><rect x="336.8" y="163.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="339.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (32 samples, 0.07%)</title><rect x="336.8" y="147.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="339.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (32 samples, 0.07%)</title><rect x="336.8" y="131.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="339.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (32 samples, 0.07%)</title><rect x="336.8" y="115.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.03%)</title><rect x="336.8" y="99.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="339.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (12 samples, 0.03%)</title><rect x="337.1" y="99.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="340.1" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (21 samples, 0.05%)</title><rect x="337.6" y="163.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (21 samples, 0.05%)</title><rect x="337.6" y="147.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (21 samples, 0.05%)</title><rect x="337.6" y="131.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (21 samples, 0.05%)</title><rect x="337.6" y="115.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (21 samples, 0.05%)</title><rect x="337.6" y="99.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (21 samples, 0.05%)</title><rect x="337.6" y="83.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="340.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.05%)</title><rect x="337.6" y="67.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.05%)</title><rect x="337.6" y="51.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="340.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (4,158 samples, 9.42%)</title><rect x="338.2" y="307.0" width="111.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.2" y="318.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (4,154 samples, 9.41%)</title><rect x="338.2" y="291.0" width="111.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="341.2" y="302.0">java/lang/Ite..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$105/1095861321.accept (4,151 samples, 9.40%)</title><rect x="338.3" y="275.0" width="110.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="341.3" y="286.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$10 (4,151 samples, 9.40%)</title><rect x="338.3" y="259.0" width="110.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.3" y="270.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (4,151 samples, 9.40%)</title><rect x="338.3" y="243.0" width="110.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="341.3" y="254.0">ru/mail/polis..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (26 samples, 0.06%)</title><rect x="338.3" y="227.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="341.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (4,125 samples, 9.34%)</title><rect x="339.0" y="227.0" width="110.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.0" y="238.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (4,125 samples, 9.34%)</title><rect x="339.0" y="211.0" width="110.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.0" y="222.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (4,125 samples, 9.34%)</title><rect x="339.0" y="195.0" width="110.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="342.0" y="206.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,925 samples, 6.62%)</title><rect x="339.0" y="179.0" width="78.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="342.0" y="190.0">java/nio/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,537 samples, 3.48%)</title><rect x="339.0" y="163.0" width="41.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="342.0" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,388 samples, 3.14%)</title><rect x="380.0" y="163.0" width="37.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.0" y="174.0">jav..</text>
</g>
<g>
<title>byte[] (1,388 samples, 3.14%)</title><rect x="380.0" y="147.0" width="37.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="383.0" y="158.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (1,200 samples, 2.72%)</title><rect x="417.1" y="179.0" width="32.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.1" y="190.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,200 samples, 2.72%)</title><rect x="417.1" y="163.0" width="32.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.1" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (803 samples, 1.82%)</title><rect x="417.1" y="147.0" width="21.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="420.1" y="158.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (397 samples, 0.90%)</title><rect x="438.6" y="147.0" width="10.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.6" y="158.0"></text>
</g>
<g>
<title>byte[] (397 samples, 0.90%)</title><rect x="438.6" y="131.0" width="10.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="441.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (18 samples, 0.04%)</title><rect x="449.3" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/TableSet.startIterating (63 samples, 0.14%)</title><rect x="449.8" y="323.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.8" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (52 samples, 0.12%)</title><rect x="450.1" y="307.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.1" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (49 samples, 0.11%)</title><rect x="450.2" y="291.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (49 samples, 0.11%)</title><rect x="450.2" y="275.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="453.2" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (48 samples, 0.11%)</title><rect x="450.2" y="259.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (43 samples, 0.10%)</title><rect x="450.3" y="243.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.3" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (12 samples, 0.03%)</title><rect x="450.3" y="227.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="453.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (31 samples, 0.07%)</title><rect x="450.6" y="227.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.6" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (18 samples, 0.04%)</title><rect x="450.6" y="211.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="453.6" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (13 samples, 0.03%)</title><rect x="451.1" y="211.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="454.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (13 samples, 0.03%)</title><rect x="451.1" y="195.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="454.1" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13 samples, 0.03%)</title><rect x="451.7" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.7" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25098] (5,441 samples, 12.32%)</title><rect x="452.1" y="499.0" width="145.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="455.1" y="510.0">[NIO Selector #3 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,441 samples, 12.32%)</title><rect x="452.1" y="483.0" width="145.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.1" y="494.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (64 samples, 0.14%)</title><rect x="452.1" y="467.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.1" y="478.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (64 samples, 0.14%)</title><rect x="452.1" y="451.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="455.1" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5,377 samples, 12.18%)</title><rect x="453.8" y="467.0" width="143.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="456.8" y="478.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,377 samples, 12.18%)</title><rect x="453.8" y="451.0" width="143.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="456.8" y="462.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,377 samples, 12.18%)</title><rect x="453.8" y="435.0" width="143.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="456.8" y="446.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,356 samples, 12.13%)</title><rect x="453.8" y="419.0" width="143.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="456.8" y="430.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,356 samples, 12.13%)</title><rect x="453.8" y="403.0" width="143.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.8" y="414.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (5,352 samples, 12.12%)</title><rect x="453.8" y="387.0" width="143.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="456.8" y="398.0">RequestHandler1_ge..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (12 samples, 0.03%)</title><rect x="453.8" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (12 samples, 0.03%)</title><rect x="453.8" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="456.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.02%)</title><rect x="453.8" y="339.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="456.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (10 samples, 0.02%)</title><rect x="453.8" y="323.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="456.8" y="334.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.02%)</title><rect x="453.8" y="307.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="456.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.get (5,339 samples, 12.09%)</title><rect x="454.1" y="371.0" width="142.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="457.1" y="382.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/Response.ok (13 samples, 0.03%)</title><rect x="454.1" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.02%)</title><rect x="454.2" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (5,320 samples, 12.05%)</title><rect x="454.5" y="355.0" width="142.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.5" y="366.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (92 samples, 0.21%)</title><rect x="454.5" y="339.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (92 samples, 0.21%)</title><rect x="454.5" y="323.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (92 samples, 0.21%)</title><rect x="454.5" y="307.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (92 samples, 0.21%)</title><rect x="454.5" y="291.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (92 samples, 0.21%)</title><rect x="454.5" y="275.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="457.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (86 samples, 0.19%)</title><rect x="454.5" y="259.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.5" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (37 samples, 0.08%)</title><rect x="454.5" y="243.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (37 samples, 0.08%)</title><rect x="454.5" y="227.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (37 samples, 0.08%)</title><rect x="454.5" y="211.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="457.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (37 samples, 0.08%)</title><rect x="454.5" y="195.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (37 samples, 0.08%)</title><rect x="454.5" y="179.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="457.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (37 samples, 0.08%)</title><rect x="454.5" y="163.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="457.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (37 samples, 0.08%)</title><rect x="454.5" y="147.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (37 samples, 0.08%)</title><rect x="454.5" y="131.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.5" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (37 samples, 0.08%)</title><rect x="454.5" y="115.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (37 samples, 0.08%)</title><rect x="454.5" y="99.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="457.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (37 samples, 0.08%)</title><rect x="454.5" y="83.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (37 samples, 0.08%)</title><rect x="454.5" y="67.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.08%)</title><rect x="454.5" y="51.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="457.5" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (49 samples, 0.11%)</title><rect x="455.5" y="243.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="458.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (49 samples, 0.11%)</title><rect x="455.5" y="227.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (49 samples, 0.11%)</title><rect x="455.5" y="211.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (49 samples, 0.11%)</title><rect x="455.5" y="195.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="458.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 0.11%)</title><rect x="455.5" y="179.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="458.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 0.11%)</title><rect x="455.5" y="163.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="458.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (30 samples, 0.07%)</title><rect x="455.5" y="147.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="458.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (30 samples, 0.07%)</title><rect x="455.5" y="131.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="458.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (30 samples, 0.07%)</title><rect x="455.5" y="115.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="458.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (30 samples, 0.07%)</title><rect x="455.5" y="99.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="458.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.03%)</title><rect x="455.5" y="83.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="458.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (11 samples, 0.02%)</title><rect x="455.9" y="83.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="458.9" y="94.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (19 samples, 0.04%)</title><rect x="456.3" y="147.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (19 samples, 0.04%)</title><rect x="456.3" y="131.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.3" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (19 samples, 0.04%)</title><rect x="456.3" y="115.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="459.3" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (19 samples, 0.04%)</title><rect x="456.3" y="99.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (19 samples, 0.04%)</title><rect x="456.3" y="83.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="459.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (19 samples, 0.04%)</title><rect x="456.3" y="67.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (19 samples, 0.04%)</title><rect x="456.3" y="51.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.3" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (19 samples, 0.04%)</title><rect x="456.3" y="35.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="459.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (5,215 samples, 11.81%)</title><rect x="457.3" y="339.0" width="139.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.3" y="350.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (5,135 samples, 11.63%)</title><rect x="457.5" y="323.0" width="137.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="460.5" y="334.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,121 samples, 2.54%)</title><rect x="457.5" y="307.0" width="29.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="460.5" y="318.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,121 samples, 2.54%)</title><rect x="457.5" y="291.0" width="29.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="460.5" y="302.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (34 samples, 0.08%)</title><rect x="457.5" y="275.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.5" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (34 samples, 0.08%)</title><rect x="457.5" y="259.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="460.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,076 samples, 2.44%)</title><rect x="458.4" y="275.0" width="28.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.4" y="286.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,076 samples, 2.44%)</title><rect x="458.4" y="259.0" width="28.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.4" y="270.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (12 samples, 0.03%)</title><rect x="458.4" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.4" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.03%)</title><rect x="458.4" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.4" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.03%)</title><rect x="458.4" y="211.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="461.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,064 samples, 2.41%)</title><rect x="458.7" y="243.0" width="28.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="461.7" y="254.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,064 samples, 2.41%)</title><rect x="458.7" y="227.0" width="28.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.7" y="238.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,064 samples, 2.41%)</title><rect x="458.7" y="211.0" width="28.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.7" y="222.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,064 samples, 2.41%)</title><rect x="458.7" y="195.0" width="28.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.7" y="206.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (748 samples, 1.69%)</title><rect x="458.7" y="179.0" width="20.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="461.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (748 samples, 1.69%)</title><rect x="458.7" y="163.0" width="20.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (748 samples, 1.69%)</title><rect x="458.7" y="147.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (748 samples, 1.69%)</title><rect x="458.7" y="131.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (293 samples, 0.66%)</title><rect x="458.7" y="115.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (172 samples, 0.39%)</title><rect x="458.7" y="99.0" width="4.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="461.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (121 samples, 0.27%)</title><rect x="463.3" y="99.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.3" y="110.0"></text>
</g>
<g>
<title>byte[] (121 samples, 0.27%)</title><rect x="463.3" y="83.0" width="3.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="466.3" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (24 samples, 0.05%)</title><rect x="466.6" y="115.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="469.6" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (26 samples, 0.06%)</title><rect x="467.2" y="115.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="470.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (319 samples, 0.72%)</title><rect x="467.9" y="115.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="470.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (235 samples, 0.53%)</title><rect x="467.9" y="99.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="470.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (135 samples, 0.31%)</title><rect x="467.9" y="83.0" width="3.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="470.9" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (100 samples, 0.23%)</title><rect x="471.5" y="83.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.5" y="94.0"></text>
</g>
<g>
<title>byte[] (100 samples, 0.23%)</title><rect x="471.5" y="67.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="474.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (84 samples, 0.19%)</title><rect x="474.2" y="99.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (84 samples, 0.19%)</title><rect x="474.2" y="83.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (58 samples, 0.13%)</title><rect x="474.2" y="67.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="477.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (26 samples, 0.06%)</title><rect x="475.7" y="67.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="478.7" y="78.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.06%)</title><rect x="475.7" y="51.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="478.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (86 samples, 0.19%)</title><rect x="476.4" y="115.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (86 samples, 0.19%)</title><rect x="476.4" y="99.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.4" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (56 samples, 0.13%)</title><rect x="476.4" y="83.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="479.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (30 samples, 0.07%)</title><rect x="477.9" y="83.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.9" y="94.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.07%)</title><rect x="477.9" y="67.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="480.9" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (316 samples, 0.72%)</title><rect x="478.7" y="179.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (316 samples, 0.72%)</title><rect x="478.7" y="163.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (316 samples, 0.72%)</title><rect x="478.7" y="147.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (316 samples, 0.72%)</title><rect x="478.7" y="131.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="481.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (316 samples, 0.72%)</title><rect x="478.7" y="115.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (316 samples, 0.72%)</title><rect x="478.7" y="99.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (316 samples, 0.72%)</title><rect x="478.7" y="83.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (316 samples, 0.72%)</title><rect x="478.7" y="67.0" width="8.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="481.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (78 samples, 0.18%)</title><rect x="487.4" y="307.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (76 samples, 0.17%)</title><rect x="487.5" y="291.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (76 samples, 0.17%)</title><rect x="487.5" y="275.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.5" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (31 samples, 0.07%)</title><rect x="487.5" y="259.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (31 samples, 0.07%)</title><rect x="487.5" y="243.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="490.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (31 samples, 0.07%)</title><rect x="487.5" y="227.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="490.5" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (31 samples, 0.07%)</title><rect x="487.5" y="211.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (31 samples, 0.07%)</title><rect x="487.5" y="195.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="490.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (31 samples, 0.07%)</title><rect x="487.5" y="179.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (31 samples, 0.07%)</title><rect x="487.5" y="163.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (31 samples, 0.07%)</title><rect x="487.5" y="147.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (31 samples, 0.07%)</title><rect x="487.5" y="131.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (31 samples, 0.07%)</title><rect x="487.5" y="115.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (31 samples, 0.07%)</title><rect x="487.5" y="99.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="490.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (31 samples, 0.07%)</title><rect x="487.5" y="83.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.07%)</title><rect x="487.5" y="67.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="490.5" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (45 samples, 0.10%)</title><rect x="488.3" y="259.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (45 samples, 0.10%)</title><rect x="488.3" y="243.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="491.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (45 samples, 0.10%)</title><rect x="488.3" y="227.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (45 samples, 0.10%)</title><rect x="488.3" y="211.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (45 samples, 0.10%)</title><rect x="488.3" y="195.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="491.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (45 samples, 0.10%)</title><rect x="488.3" y="179.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (27 samples, 0.06%)</title><rect x="488.3" y="163.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (27 samples, 0.06%)</title><rect x="488.3" y="147.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (27 samples, 0.06%)</title><rect x="488.3" y="131.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (27 samples, 0.06%)</title><rect x="488.3" y="115.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (15 samples, 0.03%)</title><rect x="488.5" y="99.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (12 samples, 0.03%)</title><rect x="488.5" y="83.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.02%)</title><rect x="488.5" y="67.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="491.5" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (18 samples, 0.04%)</title><rect x="489.0" y="163.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (18 samples, 0.04%)</title><rect x="489.0" y="147.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (18 samples, 0.04%)</title><rect x="489.0" y="131.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="492.0" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (18 samples, 0.04%)</title><rect x="489.0" y="115.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (18 samples, 0.04%)</title><rect x="489.0" y="99.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (18 samples, 0.04%)</title><rect x="489.0" y="83.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="492.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (18 samples, 0.04%)</title><rect x="489.0" y="67.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="492.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 0.04%)</title><rect x="489.0" y="51.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="492.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (3,936 samples, 8.91%)</title><rect x="489.5" y="307.0" width="105.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.5" y="318.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (3,933 samples, 8.91%)</title><rect x="489.5" y="291.0" width="105.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="492.5" y="302.0">java/lang/Ite..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$105/1095861321.accept (3,928 samples, 8.90%)</title><rect x="489.6" y="275.0" width="105.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="492.6" y="286.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$10 (3,928 samples, 8.90%)</title><rect x="489.6" y="259.0" width="105.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.6" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (3,928 samples, 8.90%)</title><rect x="489.6" y="243.0" width="105.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="492.6" y="254.0">ru/mail/poli..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (25 samples, 0.06%)</title><rect x="489.6" y="227.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="492.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (3,903 samples, 8.84%)</title><rect x="490.3" y="227.0" width="104.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="493.3" y="238.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (3,903 samples, 8.84%)</title><rect x="490.3" y="211.0" width="104.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.3" y="222.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (3,903 samples, 8.84%)</title><rect x="490.3" y="195.0" width="104.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.3" y="206.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,748 samples, 6.22%)</title><rect x="490.3" y="179.0" width="73.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.3" y="190.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,470 samples, 3.33%)</title><rect x="490.3" y="163.0" width="39.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="493.3" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,278 samples, 2.89%)</title><rect x="529.6" y="163.0" width="34.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="532.6" y="174.0">ja..</text>
</g>
<g>
<title>byte[] (1,278 samples, 2.89%)</title><rect x="529.6" y="147.0" width="34.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="532.6" y="158.0">by..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (1,155 samples, 2.62%)</title><rect x="563.7" y="179.0" width="30.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="566.7" y="190.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,155 samples, 2.62%)</title><rect x="563.7" y="163.0" width="30.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="566.7" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (787 samples, 1.78%)</title><rect x="563.7" y="147.0" width="21.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="566.7" y="158.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (368 samples, 0.83%)</title><rect x="584.8" y="147.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="587.8" y="158.0"></text>
</g>
<g>
<title>byte[] (368 samples, 0.83%)</title><rect x="584.8" y="131.0" width="9.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="587.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (12 samples, 0.03%)</title><rect x="594.7" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/TableSet.startIterating (61 samples, 0.14%)</title><rect x="595.0" y="323.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.0" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (54 samples, 0.12%)</title><rect x="595.2" y="307.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="598.2" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (53 samples, 0.12%)</title><rect x="595.2" y="291.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (53 samples, 0.12%)</title><rect x="595.2" y="275.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.2" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (53 samples, 0.12%)</title><rect x="595.2" y="259.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (47 samples, 0.11%)</title><rect x="595.4" y="243.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="598.4" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (39 samples, 0.09%)</title><rect x="595.6" y="227.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.6" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (20 samples, 0.05%)</title><rect x="595.6" y="211.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="598.6" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (19 samples, 0.04%)</title><rect x="596.1" y="211.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="599.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (19 samples, 0.04%)</title><rect x="596.1" y="195.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="599.1" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.03%)</title><rect x="597.2" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.2" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.03%)</title><rect x="597.2" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.2" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=25099] (5,542 samples, 12.55%)</title><rect x="597.5" y="499.0" width="148.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="600.5" y="510.0">[NIO Selector #4 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,542 samples, 12.55%)</title><rect x="597.5" y="483.0" width="148.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.5" y="494.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/Session.process (5,542 samples, 12.55%)</title><rect x="597.5" y="467.0" width="148.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="600.5" y="478.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,542 samples, 12.55%)</title><rect x="597.5" y="451.0" width="148.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.5" y="462.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,542 samples, 12.55%)</title><rect x="597.5" y="435.0" width="148.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.5" y="446.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,471 samples, 12.39%)</title><rect x="597.5" y="419.0" width="146.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.5" y="430.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,471 samples, 12.39%)</title><rect x="597.5" y="403.0" width="146.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.5" y="414.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (5,468 samples, 12.38%)</title><rect x="597.5" y="387.0" width="146.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="600.5" y="398.0">RequestHandler1_ge..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.02%)</title><rect x="597.5" y="371.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.02%)</title><rect x="597.5" y="355.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.get (5,454 samples, 12.35%)</title><rect x="597.8" y="371.0" width="145.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="600.8" y="382.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (5,440 samples, 12.32%)</title><rect x="598.0" y="355.0" width="145.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.0" y="366.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (102 samples, 0.23%)</title><rect x="598.0" y="339.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (102 samples, 0.23%)</title><rect x="598.0" y="323.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (102 samples, 0.23%)</title><rect x="598.0" y="307.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="601.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (102 samples, 0.23%)</title><rect x="598.0" y="291.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (102 samples, 0.23%)</title><rect x="598.0" y="275.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="601.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (99 samples, 0.22%)</title><rect x="598.0" y="259.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.0" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (40 samples, 0.09%)</title><rect x="598.0" y="243.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (40 samples, 0.09%)</title><rect x="598.0" y="227.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (40 samples, 0.09%)</title><rect x="598.0" y="211.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="601.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (40 samples, 0.09%)</title><rect x="598.0" y="195.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="601.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (40 samples, 0.09%)</title><rect x="598.0" y="179.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (40 samples, 0.09%)</title><rect x="598.0" y="163.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (40 samples, 0.09%)</title><rect x="598.0" y="147.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (40 samples, 0.09%)</title><rect x="598.0" y="131.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.0" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (40 samples, 0.09%)</title><rect x="598.0" y="115.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (40 samples, 0.09%)</title><rect x="598.0" y="99.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="601.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (40 samples, 0.09%)</title><rect x="598.0" y="83.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (40 samples, 0.09%)</title><rect x="598.0" y="67.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (40 samples, 0.09%)</title><rect x="598.0" y="51.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="601.0" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (59 samples, 0.13%)</title><rect x="599.1" y="243.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="602.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (59 samples, 0.13%)</title><rect x="599.1" y="227.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (59 samples, 0.13%)</title><rect x="599.1" y="211.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (59 samples, 0.13%)</title><rect x="599.1" y="195.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="602.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 0.13%)</title><rect x="599.1" y="179.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 0.13%)</title><rect x="599.1" y="163.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (31 samples, 0.07%)</title><rect x="599.1" y="147.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (31 samples, 0.07%)</title><rect x="599.1" y="131.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (31 samples, 0.07%)</title><rect x="599.1" y="115.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (31 samples, 0.07%)</title><rect x="599.1" y="99.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18 samples, 0.04%)</title><rect x="599.1" y="83.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.02%)</title><rect x="599.1" y="67.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="602.1" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (28 samples, 0.06%)</title><rect x="599.9" y="147.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (28 samples, 0.06%)</title><rect x="599.9" y="131.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.9" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (28 samples, 0.06%)</title><rect x="599.9" y="115.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.9" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (28 samples, 0.06%)</title><rect x="599.9" y="99.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (28 samples, 0.06%)</title><rect x="599.9" y="83.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (28 samples, 0.06%)</title><rect x="599.9" y="67.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (28 samples, 0.06%)</title><rect x="599.9" y="51.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="602.9" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (28 samples, 0.06%)</title><rect x="599.9" y="35.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="602.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (5,330 samples, 12.07%)</title><rect x="600.9" y="339.0" width="142.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.9" y="350.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (5,236 samples, 11.86%)</title><rect x="601.3" y="323.0" width="140.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.3" y="334.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,079 samples, 2.44%)</title><rect x="601.3" y="307.0" width="28.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.3" y="318.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,078 samples, 2.44%)</title><rect x="601.4" y="291.0" width="28.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.4" y="302.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (35 samples, 0.08%)</title><rect x="601.4" y="275.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="604.4" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (35 samples, 0.08%)</title><rect x="601.4" y="259.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="604.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,030 samples, 2.33%)</title><rect x="602.4" y="275.0" width="27.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="605.4" y="286.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,030 samples, 2.33%)</title><rect x="602.4" y="259.0" width="27.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.4" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,021 samples, 2.31%)</title><rect x="602.6" y="243.0" width="27.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.6" y="254.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,021 samples, 2.31%)</title><rect x="602.6" y="227.0" width="27.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.6" y="238.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,021 samples, 2.31%)</title><rect x="602.6" y="211.0" width="27.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.6" y="222.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,021 samples, 2.31%)</title><rect x="602.6" y="195.0" width="27.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.6" y="206.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (728 samples, 1.65%)</title><rect x="602.6" y="179.0" width="19.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (728 samples, 1.65%)</title><rect x="602.6" y="163.0" width="19.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (728 samples, 1.65%)</title><rect x="602.6" y="147.0" width="19.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (728 samples, 1.65%)</title><rect x="602.6" y="131.0" width="19.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.6" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (301 samples, 0.68%)</title><rect x="602.6" y="115.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.6" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (179 samples, 0.41%)</title><rect x="602.6" y="99.0" width="4.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="605.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (122 samples, 0.28%)</title><rect x="607.4" y="99.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.4" y="110.0"></text>
</g>
<g>
<title>byte[] (122 samples, 0.28%)</title><rect x="607.4" y="83.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="610.4" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (21 samples, 0.05%)</title><rect x="610.7" y="115.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="613.7" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (20 samples, 0.05%)</title><rect x="611.2" y="115.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="614.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (303 samples, 0.69%)</title><rect x="611.7" y="115.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="614.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (218 samples, 0.49%)</title><rect x="611.7" y="99.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (122 samples, 0.28%)</title><rect x="611.7" y="83.0" width="3.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="614.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (96 samples, 0.22%)</title><rect x="615.0" y="83.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="618.0" y="94.0"></text>
</g>
<g>
<title>byte[] (96 samples, 0.22%)</title><rect x="615.0" y="67.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="618.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (85 samples, 0.19%)</title><rect x="617.6" y="99.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (85 samples, 0.19%)</title><rect x="617.6" y="83.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (60 samples, 0.14%)</title><rect x="617.6" y="67.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="620.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (25 samples, 0.06%)</title><rect x="619.2" y="67.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="622.2" y="78.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.06%)</title><rect x="619.2" y="51.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="622.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (83 samples, 0.19%)</title><rect x="619.8" y="115.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (83 samples, 0.19%)</title><rect x="619.8" y="99.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (57 samples, 0.13%)</title><rect x="619.8" y="83.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="622.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (26 samples, 0.06%)</title><rect x="621.4" y="83.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.4" y="94.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.06%)</title><rect x="621.4" y="67.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="624.4" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (293 samples, 0.66%)</title><rect x="622.1" y="179.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="625.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (293 samples, 0.66%)</title><rect x="622.1" y="163.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="625.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (293 samples, 0.66%)</title><rect x="622.1" y="147.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (293 samples, 0.66%)</title><rect x="622.1" y="131.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (293 samples, 0.66%)</title><rect x="622.1" y="115.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="625.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (293 samples, 0.66%)</title><rect x="622.1" y="99.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="625.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (293 samples, 0.66%)</title><rect x="622.1" y="83.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (293 samples, 0.66%)</title><rect x="622.1" y="67.0" width="7.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="625.1" y="78.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (11 samples, 0.02%)</title><rect x="629.9" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11 samples, 0.02%)</title><rect x="629.9" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (11 samples, 0.02%)</title><rect x="629.9" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (120 samples, 0.27%)</title><rect x="630.2" y="307.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (119 samples, 0.27%)</title><rect x="630.2" y="291.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (119 samples, 0.27%)</title><rect x="630.2" y="275.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.2" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (57 samples, 0.13%)</title><rect x="630.2" y="259.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (57 samples, 0.13%)</title><rect x="630.2" y="243.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (57 samples, 0.13%)</title><rect x="630.2" y="227.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.2" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.13%)</title><rect x="630.2" y="211.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.13%)</title><rect x="630.2" y="195.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (57 samples, 0.13%)</title><rect x="630.2" y="179.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (57 samples, 0.13%)</title><rect x="630.2" y="163.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="633.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (57 samples, 0.13%)</title><rect x="630.2" y="147.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (57 samples, 0.13%)</title><rect x="630.2" y="131.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (57 samples, 0.13%)</title><rect x="630.2" y="115.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (57 samples, 0.13%)</title><rect x="630.2" y="99.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.2" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (57 samples, 0.13%)</title><rect x="630.2" y="83.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (57 samples, 0.13%)</title><rect x="630.2" y="67.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="633.2" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (62 samples, 0.14%)</title><rect x="631.7" y="259.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="634.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (62 samples, 0.14%)</title><rect x="631.7" y="243.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="634.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (62 samples, 0.14%)</title><rect x="631.7" y="227.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (62 samples, 0.14%)</title><rect x="631.7" y="211.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="634.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.14%)</title><rect x="631.7" y="195.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.14%)</title><rect x="631.7" y="179.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="634.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (37 samples, 0.08%)</title><rect x="631.7" y="163.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (37 samples, 0.08%)</title><rect x="631.7" y="147.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (37 samples, 0.08%)</title><rect x="631.7" y="131.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (37 samples, 0.08%)</title><rect x="631.7" y="115.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (12 samples, 0.03%)</title><rect x="631.7" y="99.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (20 samples, 0.05%)</title><rect x="632.1" y="99.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.03%)</title><rect x="632.1" y="83.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.1" y="94.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (25 samples, 0.06%)</title><rect x="632.7" y="163.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (25 samples, 0.06%)</title><rect x="632.7" y="147.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (25 samples, 0.06%)</title><rect x="632.7" y="131.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="635.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (25 samples, 0.06%)</title><rect x="632.7" y="115.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="635.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (25 samples, 0.06%)</title><rect x="632.7" y="99.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="635.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (25 samples, 0.06%)</title><rect x="632.7" y="83.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="635.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (25 samples, 0.06%)</title><rect x="632.7" y="67.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="635.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (25 samples, 0.06%)</title><rect x="632.7" y="51.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="635.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (4,037 samples, 9.14%)</title><rect x="633.4" y="307.0" width="107.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.4" y="318.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (4,032 samples, 9.13%)</title><rect x="633.4" y="291.0" width="107.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.4" y="302.0">java/lang/Ite..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$105/1095861321.accept (4,030 samples, 9.13%)</title><rect x="633.4" y="275.0" width="107.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="636.4" y="286.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$10 (4,030 samples, 9.13%)</title><rect x="633.4" y="259.0" width="107.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.4" y="270.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (4,030 samples, 9.13%)</title><rect x="633.4" y="243.0" width="107.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="636.4" y="254.0">ru/mail/polis..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (41 samples, 0.09%)</title><rect x="633.4" y="227.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="636.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (3,989 samples, 9.03%)</title><rect x="634.5" y="227.0" width="106.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.5" y="238.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (3,989 samples, 9.03%)</title><rect x="634.5" y="211.0" width="106.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.5" y="222.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (3,989 samples, 9.03%)</title><rect x="634.5" y="195.0" width="106.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.5" y="206.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,806 samples, 6.36%)</title><rect x="634.5" y="179.0" width="75.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.5" y="190.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,484 samples, 3.36%)</title><rect x="634.5" y="163.0" width="39.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="637.5" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,322 samples, 2.99%)</title><rect x="674.2" y="163.0" width="35.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="677.2" y="174.0">jav..</text>
</g>
<g>
<title>byte[] (1,322 samples, 2.99%)</title><rect x="674.2" y="147.0" width="35.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="677.2" y="158.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (1,183 samples, 2.68%)</title><rect x="709.5" y="179.0" width="31.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="712.5" y="190.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,183 samples, 2.68%)</title><rect x="709.5" y="163.0" width="31.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.5" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (768 samples, 1.74%)</title><rect x="709.5" y="147.0" width="20.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="712.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (415 samples, 0.94%)</title><rect x="730.1" y="147.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.1" y="158.0"></text>
</g>
<g>
<title>byte[] (415 samples, 0.94%)</title><rect x="730.1" y="131.0" width="11.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="733.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (16 samples, 0.04%)</title><rect x="741.3" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/TableSet.startIterating (63 samples, 0.14%)</title><rect x="741.7" y="323.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (50 samples, 0.11%)</title><rect x="742.0" y="307.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.0" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (46 samples, 0.10%)</title><rect x="742.1" y="291.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.1" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (46 samples, 0.10%)</title><rect x="742.1" y="275.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.1" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (44 samples, 0.10%)</title><rect x="742.1" y="259.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.1" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (39 samples, 0.09%)</title><rect x="742.3" y="243.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="745.3" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (30 samples, 0.07%)</title><rect x="742.5" y="227.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.5" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (17 samples, 0.04%)</title><rect x="742.5" y="211.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="745.5" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (13 samples, 0.03%)</title><rect x="743.0" y="211.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.0" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (13 samples, 0.03%)</title><rect x="743.0" y="195.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="746.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (65 samples, 0.15%)</title><rect x="743.7" y="419.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.7" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (60 samples, 0.14%)</title><rect x="743.8" y="403.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="746.8" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (60 samples, 0.14%)</title><rect x="743.8" y="387.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.8" y="398.0"></text>
</g>
<g>
<title>char[] (53 samples, 0.12%)</title><rect x="743.8" y="371.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="746.8" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=25100] (5,491 samples, 12.44%)</title><rect x="745.6" y="499.0" width="146.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="748.6" y="510.0">[NIO Selector #5 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,491 samples, 12.44%)</title><rect x="745.6" y="483.0" width="146.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.6" y="494.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (57 samples, 0.13%)</title><rect x="745.6" y="467.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.6" y="478.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (57 samples, 0.13%)</title><rect x="745.6" y="451.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="748.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5,434 samples, 12.31%)</title><rect x="747.1" y="467.0" width="145.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="750.1" y="478.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,434 samples, 12.31%)</title><rect x="747.1" y="451.0" width="145.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.1" y="462.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,434 samples, 12.31%)</title><rect x="747.1" y="435.0" width="145.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="750.1" y="446.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,419 samples, 12.27%)</title><rect x="747.1" y="419.0" width="144.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.1" y="430.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,419 samples, 12.27%)</title><rect x="747.1" y="403.0" width="144.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="750.1" y="414.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (5,417 samples, 12.27%)</title><rect x="747.1" y="387.0" width="144.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.1" y="398.0">RequestHandler1_ge..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.get (5,406 samples, 12.24%)</title><rect x="747.4" y="371.0" width="144.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.4" y="382.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (5,395 samples, 12.22%)</title><rect x="747.6" y="355.0" width="144.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="750.6" y="366.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (84 samples, 0.19%)</title><rect x="747.6" y="339.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (84 samples, 0.19%)</title><rect x="747.6" y="323.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (84 samples, 0.19%)</title><rect x="747.6" y="307.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (84 samples, 0.19%)</title><rect x="747.6" y="291.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (84 samples, 0.19%)</title><rect x="747.6" y="275.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="750.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (81 samples, 0.18%)</title><rect x="747.6" y="259.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="750.6" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (38 samples, 0.09%)</title><rect x="747.6" y="243.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="750.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (38 samples, 0.09%)</title><rect x="747.6" y="227.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="750.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (38 samples, 0.09%)</title><rect x="747.6" y="211.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (38 samples, 0.09%)</title><rect x="747.6" y="195.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (38 samples, 0.09%)</title><rect x="747.6" y="179.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (38 samples, 0.09%)</title><rect x="747.6" y="163.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (38 samples, 0.09%)</title><rect x="747.6" y="147.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (38 samples, 0.09%)</title><rect x="747.6" y="131.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (38 samples, 0.09%)</title><rect x="747.6" y="115.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (38 samples, 0.09%)</title><rect x="747.6" y="99.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (38 samples, 0.09%)</title><rect x="747.6" y="83.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="750.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (38 samples, 0.09%)</title><rect x="747.6" y="67.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (38 samples, 0.09%)</title><rect x="747.6" y="51.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="750.6" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (43 samples, 0.10%)</title><rect x="748.6" y="243.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (43 samples, 0.10%)</title><rect x="748.6" y="227.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (43 samples, 0.10%)</title><rect x="748.6" y="211.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="751.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (43 samples, 0.10%)</title><rect x="748.6" y="195.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (43 samples, 0.10%)</title><rect x="748.6" y="179.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (43 samples, 0.10%)</title><rect x="748.6" y="163.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (32 samples, 0.07%)</title><rect x="748.6" y="147.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (32 samples, 0.07%)</title><rect x="748.6" y="131.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (32 samples, 0.07%)</title><rect x="748.6" y="115.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="751.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (32 samples, 0.07%)</title><rect x="748.6" y="99.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (21 samples, 0.05%)</title><rect x="748.6" y="83.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="751.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.03%)</title><rect x="748.6" y="67.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="751.6" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (11 samples, 0.02%)</title><rect x="749.4" y="147.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="752.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (11 samples, 0.02%)</title><rect x="749.4" y="131.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="752.4" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (11 samples, 0.02%)</title><rect x="749.4" y="115.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="752.4" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (11 samples, 0.02%)</title><rect x="749.4" y="99.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="752.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (11 samples, 0.02%)</title><rect x="749.4" y="83.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (11 samples, 0.02%)</title><rect x="749.4" y="67.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.02%)</title><rect x="749.4" y="51.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.4" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.02%)</title><rect x="749.4" y="35.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="752.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (5,298 samples, 12.00%)</title><rect x="750.2" y="339.0" width="141.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.2" y="350.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (5,216 samples, 11.81%)</title><rect x="750.3" y="323.0" width="139.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.3" y="334.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,057 samples, 2.39%)</title><rect x="750.3" y="307.0" width="28.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.3" y="318.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,057 samples, 2.39%)</title><rect x="750.3" y="291.0" width="28.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.3" y="302.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (25 samples, 0.06%)</title><rect x="750.4" y="275.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.4" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (25 samples, 0.06%)</title><rect x="750.4" y="259.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="753.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,019 samples, 2.31%)</title><rect x="751.2" y="275.0" width="27.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.2" y="286.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,019 samples, 2.31%)</title><rect x="751.2" y="259.0" width="27.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.2" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (14 samples, 0.03%)</title><rect x="751.2" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="754.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.03%)</title><rect x="751.2" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="754.2" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.03%)</title><rect x="751.2" y="211.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="754.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,005 samples, 2.28%)</title><rect x="751.5" y="243.0" width="26.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.5" y="254.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,005 samples, 2.28%)</title><rect x="751.5" y="227.0" width="26.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.5" y="238.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,005 samples, 2.28%)</title><rect x="751.5" y="211.0" width="26.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="754.5" y="222.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,005 samples, 2.28%)</title><rect x="751.5" y="195.0" width="26.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.5" y="206.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (691 samples, 1.57%)</title><rect x="751.5" y="179.0" width="18.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (691 samples, 1.57%)</title><rect x="751.5" y="163.0" width="18.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (691 samples, 1.57%)</title><rect x="751.5" y="147.0" width="18.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (691 samples, 1.57%)</title><rect x="751.5" y="131.0" width="18.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (296 samples, 0.67%)</title><rect x="751.5" y="115.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="754.5" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (173 samples, 0.39%)</title><rect x="751.5" y="99.0" width="4.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="754.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (123 samples, 0.28%)</title><rect x="756.2" y="99.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="759.2" y="110.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.28%)</title><rect x="756.2" y="83.0" width="3.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="759.2" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (19 samples, 0.04%)</title><rect x="759.5" y="115.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="762.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (27 samples, 0.06%)</title><rect x="760.0" y="115.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="763.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (278 samples, 0.63%)</title><rect x="760.7" y="115.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (189 samples, 0.43%)</title><rect x="760.7" y="99.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="763.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (93 samples, 0.21%)</title><rect x="760.7" y="83.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="763.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (96 samples, 0.22%)</title><rect x="763.2" y="83.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="766.2" y="94.0"></text>
</g>
<g>
<title>byte[] (96 samples, 0.22%)</title><rect x="763.2" y="67.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="766.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (89 samples, 0.20%)</title><rect x="765.7" y="99.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="768.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (89 samples, 0.20%)</title><rect x="765.7" y="83.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (58 samples, 0.13%)</title><rect x="765.7" y="67.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="768.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (31 samples, 0.07%)</title><rect x="767.3" y="67.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="770.3" y="78.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.07%)</title><rect x="767.3" y="51.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="770.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (71 samples, 0.16%)</title><rect x="768.1" y="115.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (71 samples, 0.16%)</title><rect x="768.1" y="99.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="771.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (50 samples, 0.11%)</title><rect x="768.1" y="83.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="771.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (21 samples, 0.05%)</title><rect x="769.5" y="83.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.5" y="94.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.05%)</title><rect x="769.5" y="67.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="772.5" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (314 samples, 0.71%)</title><rect x="770.0" y="179.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (314 samples, 0.71%)</title><rect x="770.0" y="163.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (314 samples, 0.71%)</title><rect x="770.0" y="147.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (314 samples, 0.71%)</title><rect x="770.0" y="131.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (314 samples, 0.71%)</title><rect x="770.0" y="115.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (314 samples, 0.71%)</title><rect x="770.0" y="99.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="773.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (314 samples, 0.71%)</title><rect x="770.0" y="83.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="773.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (314 samples, 0.71%)</title><rect x="770.0" y="67.0" width="8.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="773.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (83 samples, 0.19%)</title><rect x="778.6" y="307.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (80 samples, 0.18%)</title><rect x="778.7" y="291.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (80 samples, 0.18%)</title><rect x="778.7" y="275.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.7" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (30 samples, 0.07%)</title><rect x="778.7" y="259.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (30 samples, 0.07%)</title><rect x="778.7" y="243.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (30 samples, 0.07%)</title><rect x="778.7" y="227.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (30 samples, 0.07%)</title><rect x="778.7" y="211.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (30 samples, 0.07%)</title><rect x="778.7" y="195.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (30 samples, 0.07%)</title><rect x="778.7" y="179.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="781.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (30 samples, 0.07%)</title><rect x="778.7" y="163.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (30 samples, 0.07%)</title><rect x="778.7" y="147.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (30 samples, 0.07%)</title><rect x="778.7" y="131.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="781.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (30 samples, 0.07%)</title><rect x="778.7" y="115.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (30 samples, 0.07%)</title><rect x="778.7" y="99.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (30 samples, 0.07%)</title><rect x="778.7" y="83.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="781.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.07%)</title><rect x="778.7" y="67.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="781.7" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (50 samples, 0.11%)</title><rect x="779.5" y="259.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (50 samples, 0.11%)</title><rect x="779.5" y="243.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (50 samples, 0.11%)</title><rect x="779.5" y="227.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (50 samples, 0.11%)</title><rect x="779.5" y="211.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="782.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.11%)</title><rect x="779.5" y="195.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.11%)</title><rect x="779.5" y="179.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="782.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (26 samples, 0.06%)</title><rect x="779.5" y="163.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (26 samples, 0.06%)</title><rect x="779.5" y="147.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (26 samples, 0.06%)</title><rect x="779.5" y="131.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (26 samples, 0.06%)</title><rect x="779.5" y="115.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.02%)</title><rect x="779.5" y="99.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (10 samples, 0.02%)</title><rect x="779.8" y="99.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.8" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (24 samples, 0.05%)</title><rect x="780.2" y="163.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (24 samples, 0.05%)</title><rect x="780.2" y="147.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (24 samples, 0.05%)</title><rect x="780.2" y="131.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="783.2" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (24 samples, 0.05%)</title><rect x="780.2" y="115.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="783.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (24 samples, 0.05%)</title><rect x="780.2" y="99.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="783.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (24 samples, 0.05%)</title><rect x="780.2" y="83.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (24 samples, 0.05%)</title><rect x="780.2" y="67.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="783.2" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.05%)</title><rect x="780.2" y="51.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="783.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (4,076 samples, 9.23%)</title><rect x="780.8" y="307.0" width="108.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="783.8" y="318.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (4,073 samples, 9.22%)</title><rect x="780.8" y="291.0" width="108.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="783.8" y="302.0">java/lang/Ite..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$105/1095861321.accept (4,069 samples, 9.22%)</title><rect x="780.9" y="275.0" width="108.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="783.9" y="286.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$10 (4,069 samples, 9.22%)</title><rect x="780.9" y="259.0" width="108.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="783.9" y="270.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (4,069 samples, 9.22%)</title><rect x="780.9" y="243.0" width="108.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.9" y="254.0">ru/mail/polis..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (28 samples, 0.06%)</title><rect x="780.9" y="227.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="783.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (4,041 samples, 9.15%)</title><rect x="781.7" y="227.0" width="108.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.7" y="238.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (4,041 samples, 9.15%)</title><rect x="781.7" y="211.0" width="108.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="784.7" y="222.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (4,041 samples, 9.15%)</title><rect x="781.7" y="195.0" width="108.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="784.7" y="206.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,886 samples, 6.54%)</title><rect x="781.7" y="179.0" width="77.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="784.7" y="190.0">java/nio/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,569 samples, 3.55%)</title><rect x="781.7" y="163.0" width="41.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="784.7" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,317 samples, 2.98%)</title><rect x="823.6" y="163.0" width="35.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.6" y="174.0">jav..</text>
</g>
<g>
<title>byte[] (1,317 samples, 2.98%)</title><rect x="823.6" y="147.0" width="35.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="826.6" y="158.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (1,155 samples, 2.62%)</title><rect x="858.8" y="179.0" width="30.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.8" y="190.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,155 samples, 2.62%)</title><rect x="858.8" y="163.0" width="30.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="861.8" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (771 samples, 1.75%)</title><rect x="858.8" y="147.0" width="20.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="861.8" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (384 samples, 0.87%)</title><rect x="879.4" y="147.0" width="10.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="882.4" y="158.0"></text>
</g>
<g>
<title>byte[] (384 samples, 0.87%)</title><rect x="879.4" y="131.0" width="10.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="882.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (17 samples, 0.04%)</title><rect x="889.7" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="892.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/TableSet.startIterating (58 samples, 0.13%)</title><rect x="890.2" y="323.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="893.2" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (48 samples, 0.11%)</title><rect x="890.5" y="307.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="893.5" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (47 samples, 0.11%)</title><rect x="890.5" y="291.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="893.5" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (47 samples, 0.11%)</title><rect x="890.5" y="275.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="893.5" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (46 samples, 0.10%)</title><rect x="890.5" y="259.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="893.5" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (43 samples, 0.10%)</title><rect x="890.6" y="243.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="893.6" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (34 samples, 0.08%)</title><rect x="890.8" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="893.8" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (18 samples, 0.04%)</title><rect x="890.8" y="211.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="893.8" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (16 samples, 0.04%)</title><rect x="891.3" y="211.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.3" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (16 samples, 0.04%)</title><rect x="891.3" y="195.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="894.3" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=25101] (5,558 samples, 12.59%)</title><rect x="892.3" y="499.0" width="148.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="895.3" y="510.0">[NIO Selector #6 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,558 samples, 12.59%)</title><rect x="892.3" y="483.0" width="148.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="895.3" y="494.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (70 samples, 0.16%)</title><rect x="892.3" y="467.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="895.3" y="478.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (70 samples, 0.16%)</title><rect x="892.3" y="451.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="895.3" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5,488 samples, 12.43%)</title><rect x="894.2" y="467.0" width="146.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.2" y="478.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,488 samples, 12.43%)</title><rect x="894.2" y="451.0" width="146.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.2" y="462.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,488 samples, 12.43%)</title><rect x="894.2" y="435.0" width="146.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.2" y="446.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,462 samples, 12.37%)</title><rect x="894.2" y="419.0" width="146.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="897.2" y="430.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,462 samples, 12.37%)</title><rect x="894.2" y="403.0" width="146.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.2" y="414.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (5,461 samples, 12.37%)</title><rect x="894.2" y="387.0" width="146.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="897.2" y="398.0">RequestHandler1_ge..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.get (5,454 samples, 12.35%)</title><rect x="894.4" y="371.0" width="145.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="897.4" y="382.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (5,443 samples, 12.33%)</title><rect x="894.6" y="355.0" width="145.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="897.6" y="366.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (102 samples, 0.23%)</title><rect x="894.6" y="339.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (102 samples, 0.23%)</title><rect x="894.6" y="323.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (102 samples, 0.23%)</title><rect x="894.6" y="307.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="897.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (102 samples, 0.23%)</title><rect x="894.6" y="291.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="897.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (102 samples, 0.23%)</title><rect x="894.6" y="275.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="897.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (98 samples, 0.22%)</title><rect x="894.6" y="259.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="897.6" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (42 samples, 0.10%)</title><rect x="894.6" y="243.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="897.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (42 samples, 0.10%)</title><rect x="894.6" y="227.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (42 samples, 0.10%)</title><rect x="894.6" y="211.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (42 samples, 0.10%)</title><rect x="894.6" y="195.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="897.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (42 samples, 0.10%)</title><rect x="894.6" y="179.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="897.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (42 samples, 0.10%)</title><rect x="894.6" y="163.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="897.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (42 samples, 0.10%)</title><rect x="894.6" y="147.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="897.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (42 samples, 0.10%)</title><rect x="894.6" y="131.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (42 samples, 0.10%)</title><rect x="894.6" y="115.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="897.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (42 samples, 0.10%)</title><rect x="894.6" y="99.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="897.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (42 samples, 0.10%)</title><rect x="894.6" y="83.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="897.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (42 samples, 0.10%)</title><rect x="894.6" y="67.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="897.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (42 samples, 0.10%)</title><rect x="894.6" y="51.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="897.6" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (56 samples, 0.13%)</title><rect x="895.7" y="243.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (56 samples, 0.13%)</title><rect x="895.7" y="227.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="898.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (56 samples, 0.13%)</title><rect x="895.7" y="211.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (56 samples, 0.13%)</title><rect x="895.7" y="195.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="898.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (56 samples, 0.13%)</title><rect x="895.7" y="179.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (56 samples, 0.13%)</title><rect x="895.7" y="163.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (40 samples, 0.09%)</title><rect x="895.7" y="147.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="898.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (40 samples, 0.09%)</title><rect x="895.7" y="131.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (40 samples, 0.09%)</title><rect x="895.7" y="115.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (40 samples, 0.09%)</title><rect x="895.7" y="99.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.03%)</title><rect x="895.7" y="83.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.02%)</title><rect x="895.7" y="67.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="898.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (17 samples, 0.04%)</title><rect x="896.1" y="83.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="899.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (15 samples, 0.03%)</title><rect x="896.1" y="67.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="899.1" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (16 samples, 0.04%)</title><rect x="896.7" y="147.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="899.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (16 samples, 0.04%)</title><rect x="896.7" y="131.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="899.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (16 samples, 0.04%)</title><rect x="896.7" y="115.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="899.7" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (16 samples, 0.04%)</title><rect x="896.7" y="99.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="899.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (16 samples, 0.04%)</title><rect x="896.7" y="83.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="899.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (16 samples, 0.04%)</title><rect x="896.7" y="67.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="899.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (16 samples, 0.04%)</title><rect x="896.7" y="51.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.7" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.04%)</title><rect x="896.7" y="35.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="899.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (5,331 samples, 12.07%)</title><rect x="897.5" y="339.0" width="142.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.5" y="350.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (5,259 samples, 11.91%)</title><rect x="897.8" y="323.0" width="140.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.8" y="334.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,127 samples, 2.55%)</title><rect x="897.8" y="307.0" width="30.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.8" y="318.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,126 samples, 2.55%)</title><rect x="897.8" y="291.0" width="30.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="900.8" y="302.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (34 samples, 0.08%)</title><rect x="897.8" y="275.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.8" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (34 samples, 0.08%)</title><rect x="897.8" y="259.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="900.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,076 samples, 2.44%)</title><rect x="898.8" y="275.0" width="28.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="901.8" y="286.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,076 samples, 2.44%)</title><rect x="898.8" y="259.0" width="28.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="901.8" y="270.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (16 samples, 0.04%)</title><rect x="898.8" y="243.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.04%)</title><rect x="898.8" y="227.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.8" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.04%)</title><rect x="898.8" y="211.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="901.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,060 samples, 2.40%)</title><rect x="899.2" y="243.0" width="28.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="902.2" y="254.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,060 samples, 2.40%)</title><rect x="899.2" y="227.0" width="28.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="902.2" y="238.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,060 samples, 2.40%)</title><rect x="899.2" y="211.0" width="28.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="902.2" y="222.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,060 samples, 2.40%)</title><rect x="899.2" y="195.0" width="28.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="902.2" y="206.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (715 samples, 1.62%)</title><rect x="899.2" y="179.0" width="19.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (715 samples, 1.62%)</title><rect x="899.2" y="163.0" width="19.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="902.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (715 samples, 1.62%)</title><rect x="899.2" y="147.0" width="19.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="902.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (715 samples, 1.62%)</title><rect x="899.2" y="131.0" width="19.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="902.2" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (296 samples, 0.67%)</title><rect x="899.2" y="115.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.2" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (164 samples, 0.37%)</title><rect x="899.2" y="99.0" width="4.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="902.2" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (132 samples, 0.30%)</title><rect x="903.6" y="99.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.6" y="110.0"></text>
</g>
<g>
<title>byte[] (132 samples, 0.30%)</title><rect x="903.6" y="83.0" width="3.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="906.6" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (32 samples, 0.07%)</title><rect x="907.1" y="115.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="910.1" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (26 samples, 0.06%)</title><rect x="908.0" y="115.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="911.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (278 samples, 0.63%)</title><rect x="908.7" y="115.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="911.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (205 samples, 0.46%)</title><rect x="908.7" y="99.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="911.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (112 samples, 0.25%)</title><rect x="908.7" y="83.0" width="3.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="911.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (93 samples, 0.21%)</title><rect x="911.7" y="83.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="914.7" y="94.0"></text>
</g>
<g>
<title>byte[] (93 samples, 0.21%)</title><rect x="911.7" y="67.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="914.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (73 samples, 0.17%)</title><rect x="914.1" y="99.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="917.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (73 samples, 0.17%)</title><rect x="914.1" y="83.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (49 samples, 0.11%)</title><rect x="914.1" y="67.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="917.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (24 samples, 0.05%)</title><rect x="915.5" y="67.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="918.5" y="78.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.05%)</title><rect x="915.5" y="51.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="918.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (83 samples, 0.19%)</title><rect x="916.1" y="115.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="919.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (83 samples, 0.19%)</title><rect x="916.1" y="99.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="919.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (54 samples, 0.12%)</title><rect x="916.1" y="83.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="919.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (29 samples, 0.07%)</title><rect x="917.5" y="83.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="920.5" y="94.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.07%)</title><rect x="917.5" y="67.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="920.5" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (345 samples, 0.78%)</title><rect x="918.3" y="179.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="921.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (345 samples, 0.78%)</title><rect x="918.3" y="163.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (345 samples, 0.78%)</title><rect x="918.3" y="147.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="921.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (345 samples, 0.78%)</title><rect x="918.3" y="131.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="921.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (345 samples, 0.78%)</title><rect x="918.3" y="115.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (345 samples, 0.78%)</title><rect x="918.3" y="99.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="921.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (345 samples, 0.78%)</title><rect x="918.3" y="83.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="921.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (345 samples, 0.78%)</title><rect x="918.3" y="67.0" width="9.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="921.3" y="78.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (13 samples, 0.03%)</title><rect x="927.5" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="930.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (13 samples, 0.03%)</title><rect x="927.5" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="930.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (13 samples, 0.03%)</title><rect x="927.5" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="930.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (12 samples, 0.03%)</title><rect x="927.6" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="930.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (89 samples, 0.20%)</title><rect x="927.9" y="307.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="930.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (88 samples, 0.20%)</title><rect x="927.9" y="291.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="930.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (88 samples, 0.20%)</title><rect x="927.9" y="275.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.9" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (34 samples, 0.08%)</title><rect x="927.9" y="259.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="930.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (34 samples, 0.08%)</title><rect x="927.9" y="243.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="930.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (34 samples, 0.08%)</title><rect x="927.9" y="227.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="930.9" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (34 samples, 0.08%)</title><rect x="927.9" y="211.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="930.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (34 samples, 0.08%)</title><rect x="927.9" y="195.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (34 samples, 0.08%)</title><rect x="927.9" y="179.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="930.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (34 samples, 0.08%)</title><rect x="927.9" y="163.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="930.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (34 samples, 0.08%)</title><rect x="927.9" y="147.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="930.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (34 samples, 0.08%)</title><rect x="927.9" y="131.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="930.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (34 samples, 0.08%)</title><rect x="927.9" y="115.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="930.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (34 samples, 0.08%)</title><rect x="927.9" y="99.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="930.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (34 samples, 0.08%)</title><rect x="927.9" y="83.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="930.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (34 samples, 0.08%)</title><rect x="927.9" y="67.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="930.9" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (54 samples, 0.12%)</title><rect x="928.8" y="259.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="931.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (54 samples, 0.12%)</title><rect x="928.8" y="243.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="931.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (54 samples, 0.12%)</title><rect x="928.8" y="227.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="931.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (54 samples, 0.12%)</title><rect x="928.8" y="211.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="931.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (54 samples, 0.12%)</title><rect x="928.8" y="195.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="931.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (54 samples, 0.12%)</title><rect x="928.8" y="179.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="931.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (29 samples, 0.07%)</title><rect x="928.8" y="163.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (29 samples, 0.07%)</title><rect x="928.8" y="147.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="931.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (29 samples, 0.07%)</title><rect x="928.8" y="131.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="931.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (29 samples, 0.07%)</title><rect x="928.8" y="115.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="931.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.02%)</title><rect x="928.8" y="99.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="931.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (13 samples, 0.03%)</title><rect x="929.2" y="99.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="932.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.02%)</title><rect x="929.2" y="83.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="932.2" y="94.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (25 samples, 0.06%)</title><rect x="929.6" y="163.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="932.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (25 samples, 0.06%)</title><rect x="929.6" y="147.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="932.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (25 samples, 0.06%)</title><rect x="929.6" y="131.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="932.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (25 samples, 0.06%)</title><rect x="929.6" y="115.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (25 samples, 0.06%)</title><rect x="929.6" y="99.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="932.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (25 samples, 0.06%)</title><rect x="929.6" y="83.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="932.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (25 samples, 0.06%)</title><rect x="929.6" y="67.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="932.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (25 samples, 0.06%)</title><rect x="929.6" y="51.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="932.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (4,043 samples, 9.16%)</title><rect x="930.3" y="307.0" width="108.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.3" y="318.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (4,040 samples, 9.15%)</title><rect x="930.3" y="291.0" width="107.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.3" y="302.0">java/lang/Ite..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$105/1095861321.accept (4,032 samples, 9.13%)</title><rect x="930.5" y="275.0" width="107.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="933.5" y="286.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$10 (4,032 samples, 9.13%)</title><rect x="930.5" y="259.0" width="107.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.5" y="270.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (4,032 samples, 9.13%)</title><rect x="930.5" y="243.0" width="107.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="933.5" y="254.0">ru/mail/polis..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (28 samples, 0.06%)</title><rect x="930.5" y="227.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="933.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (4,004 samples, 9.07%)</title><rect x="931.2" y="227.0" width="107.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="934.2" y="238.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (4,004 samples, 9.07%)</title><rect x="931.2" y="211.0" width="107.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="934.2" y="222.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (4,004 samples, 9.07%)</title><rect x="931.2" y="195.0" width="107.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="934.2" y="206.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,798 samples, 6.34%)</title><rect x="931.2" y="179.0" width="74.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="934.2" y="190.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,472 samples, 3.33%)</title><rect x="931.2" y="163.0" width="39.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="934.2" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,326 samples, 3.00%)</title><rect x="970.6" y="163.0" width="35.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="973.6" y="174.0">jav..</text>
</g>
<g>
<title>byte[] (1,326 samples, 3.00%)</title><rect x="970.6" y="147.0" width="35.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="973.6" y="158.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (1,206 samples, 2.73%)</title><rect x="1006.0" y="179.0" width="32.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1009.0" y="190.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,206 samples, 2.73%)</title><rect x="1006.0" y="163.0" width="32.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1009.0" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (810 samples, 1.83%)</title><rect x="1006.0" y="147.0" width="21.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1009.0" y="158.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (396 samples, 0.90%)</title><rect x="1027.6" y="147.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1030.6" y="158.0"></text>
</g>
<g>
<title>byte[] (396 samples, 0.90%)</title><rect x="1027.6" y="131.0" width="10.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1030.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (12 samples, 0.03%)</title><rect x="1038.3" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1041.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/TableSet.startIterating (52 samples, 0.12%)</title><rect x="1038.6" y="323.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1041.6" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (47 samples, 0.11%)</title><rect x="1038.8" y="307.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1041.8" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (43 samples, 0.10%)</title><rect x="1038.8" y="291.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1041.8" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (43 samples, 0.10%)</title><rect x="1038.8" y="275.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1041.8" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (43 samples, 0.10%)</title><rect x="1038.8" y="259.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1041.8" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (41 samples, 0.09%)</title><rect x="1038.9" y="243.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1041.9" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (12 samples, 0.03%)</title><rect x="1038.9" y="227.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1041.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (29 samples, 0.07%)</title><rect x="1039.2" y="227.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1042.2" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (17 samples, 0.04%)</title><rect x="1039.2" y="211.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1042.2" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (12 samples, 0.03%)</title><rect x="1039.6" y="211.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1042.6" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (12 samples, 0.03%)</title><rect x="1039.6" y="195.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1042.6" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (17 samples, 0.04%)</title><rect x="1040.2" y="419.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.2" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=25102] (5,580 samples, 12.64%)</title><rect x="1040.9" y="499.0" width="149.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1043.9" y="510.0">[NIO Selector #7 ti..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,580 samples, 12.64%)</title><rect x="1040.9" y="483.0" width="149.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1043.9" y="494.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/Session.process (5,580 samples, 12.64%)</title><rect x="1040.9" y="467.0" width="149.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1043.9" y="478.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,580 samples, 12.64%)</title><rect x="1040.9" y="451.0" width="149.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1043.9" y="462.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,580 samples, 12.64%)</title><rect x="1040.9" y="435.0" width="149.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1043.9" y="446.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,510 samples, 12.48%)</title><rect x="1040.9" y="419.0" width="147.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1043.9" y="430.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,510 samples, 12.48%)</title><rect x="1040.9" y="403.0" width="147.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1043.9" y="414.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (5,506 samples, 12.47%)</title><rect x="1040.9" y="387.0" width="147.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1043.9" y="398.0">RequestHandler1_get..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.get (5,492 samples, 12.44%)</title><rect x="1041.2" y="371.0" width="146.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1044.2" y="382.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/Response.ok (10 samples, 0.02%)</title><rect x="1041.2" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1044.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (5,477 samples, 12.40%)</title><rect x="1041.5" y="355.0" width="146.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1044.5" y="366.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (112 samples, 0.25%)</title><rect x="1041.5" y="339.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (112 samples, 0.25%)</title><rect x="1041.5" y="323.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1044.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (112 samples, 0.25%)</title><rect x="1041.5" y="307.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1044.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (112 samples, 0.25%)</title><rect x="1041.5" y="291.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1044.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (112 samples, 0.25%)</title><rect x="1041.5" y="275.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1044.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (106 samples, 0.24%)</title><rect x="1041.5" y="259.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.5" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (46 samples, 0.10%)</title><rect x="1041.5" y="243.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1044.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (46 samples, 0.10%)</title><rect x="1041.5" y="227.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1044.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (46 samples, 0.10%)</title><rect x="1041.5" y="211.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1044.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (46 samples, 0.10%)</title><rect x="1041.5" y="195.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1044.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (46 samples, 0.10%)</title><rect x="1041.5" y="179.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (46 samples, 0.10%)</title><rect x="1041.5" y="163.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (46 samples, 0.10%)</title><rect x="1041.5" y="147.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1044.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (46 samples, 0.10%)</title><rect x="1041.5" y="131.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1044.5" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (46 samples, 0.10%)</title><rect x="1041.5" y="115.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1044.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (46 samples, 0.10%)</title><rect x="1041.5" y="99.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1044.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (46 samples, 0.10%)</title><rect x="1041.5" y="83.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (46 samples, 0.10%)</title><rect x="1041.5" y="67.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1044.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (46 samples, 0.10%)</title><rect x="1041.5" y="51.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1044.5" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (60 samples, 0.14%)</title><rect x="1042.7" y="243.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (60 samples, 0.14%)</title><rect x="1042.7" y="227.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1045.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (60 samples, 0.14%)</title><rect x="1042.7" y="211.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1045.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (60 samples, 0.14%)</title><rect x="1042.7" y="195.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1045.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (60 samples, 0.14%)</title><rect x="1042.7" y="179.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (60 samples, 0.14%)</title><rect x="1042.7" y="163.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1045.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (36 samples, 0.08%)</title><rect x="1042.7" y="147.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (36 samples, 0.08%)</title><rect x="1042.7" y="131.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1045.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (36 samples, 0.08%)</title><rect x="1042.7" y="115.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1045.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (36 samples, 0.08%)</title><rect x="1042.7" y="99.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1045.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.02%)</title><rect x="1042.7" y="83.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1045.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (20 samples, 0.05%)</title><rect x="1043.1" y="83.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1046.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.04%)</title><rect x="1043.1" y="67.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1046.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.02%)</title><rect x="1043.1" y="51.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1046.1" y="62.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (24 samples, 0.05%)</title><rect x="1043.7" y="147.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1046.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (24 samples, 0.05%)</title><rect x="1043.7" y="131.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1046.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (24 samples, 0.05%)</title><rect x="1043.7" y="115.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1046.7" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (24 samples, 0.05%)</title><rect x="1043.7" y="99.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1046.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (24 samples, 0.05%)</title><rect x="1043.7" y="83.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1046.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (24 samples, 0.05%)</title><rect x="1043.7" y="67.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1046.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (24 samples, 0.05%)</title><rect x="1043.7" y="51.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1046.7" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.05%)</title><rect x="1043.7" y="35.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1046.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (5,355 samples, 12.13%)</title><rect x="1044.8" y="339.0" width="143.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1047.8" y="350.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (5,255 samples, 11.90%)</title><rect x="1045.1" y="323.0" width="140.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1048.1" y="334.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,064 samples, 2.41%)</title><rect x="1045.1" y="307.0" width="28.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.1" y="318.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,063 samples, 2.41%)</title><rect x="1045.2" y="291.0" width="28.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.2" y="302.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (31 samples, 0.07%)</title><rect x="1045.2" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1048.2" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (31 samples, 0.07%)</title><rect x="1045.2" y="259.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1048.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,020 samples, 2.31%)</title><rect x="1046.1" y="275.0" width="27.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1049.1" y="286.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,020 samples, 2.31%)</title><rect x="1046.1" y="259.0" width="27.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1049.1" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (14 samples, 0.03%)</title><rect x="1046.1" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1049.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.03%)</title><rect x="1046.1" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.1" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.03%)</title><rect x="1046.1" y="211.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1049.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,006 samples, 2.28%)</title><rect x="1046.4" y="243.0" width="26.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1049.4" y="254.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,006 samples, 2.28%)</title><rect x="1046.4" y="227.0" width="26.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1049.4" y="238.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,006 samples, 2.28%)</title><rect x="1046.4" y="211.0" width="26.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1049.4" y="222.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,006 samples, 2.28%)</title><rect x="1046.4" y="195.0" width="26.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.4" y="206.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (713 samples, 1.61%)</title><rect x="1046.4" y="179.0" width="19.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (713 samples, 1.61%)</title><rect x="1046.4" y="163.0" width="19.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (713 samples, 1.61%)</title><rect x="1046.4" y="147.0" width="19.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1049.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (713 samples, 1.61%)</title><rect x="1046.4" y="131.0" width="19.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1049.4" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (293 samples, 0.66%)</title><rect x="1046.4" y="115.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.4" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (177 samples, 0.40%)</title><rect x="1046.4" y="99.0" width="4.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1049.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (116 samples, 0.26%)</title><rect x="1051.2" y="99.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1054.2" y="110.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.26%)</title><rect x="1051.2" y="83.0" width="3.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1054.2" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (25 samples, 0.06%)</title><rect x="1054.3" y="115.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1057.3" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (26 samples, 0.06%)</title><rect x="1054.9" y="115.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1057.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (281 samples, 0.64%)</title><rect x="1055.6" y="115.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1058.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (204 samples, 0.46%)</title><rect x="1055.6" y="99.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1058.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (109 samples, 0.25%)</title><rect x="1055.6" y="83.0" width="2.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1058.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (95 samples, 0.22%)</title><rect x="1058.5" y="83.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1061.5" y="94.0"></text>
</g>
<g>
<title>byte[] (95 samples, 0.22%)</title><rect x="1058.5" y="67.0" width="2.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1061.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (77 samples, 0.17%)</title><rect x="1061.1" y="99.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1064.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (77 samples, 0.17%)</title><rect x="1061.1" y="83.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1064.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (55 samples, 0.12%)</title><rect x="1061.1" y="67.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1064.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (22 samples, 0.05%)</title><rect x="1062.5" y="67.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1065.5" y="78.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.05%)</title><rect x="1062.5" y="51.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1065.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (88 samples, 0.20%)</title><rect x="1063.1" y="115.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1066.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (88 samples, 0.20%)</title><rect x="1063.1" y="99.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1066.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (62 samples, 0.14%)</title><rect x="1063.1" y="83.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1066.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (26 samples, 0.06%)</title><rect x="1064.8" y="83.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1067.8" y="94.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.06%)</title><rect x="1064.8" y="67.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1067.8" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (293 samples, 0.66%)</title><rect x="1065.5" y="179.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1068.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (293 samples, 0.66%)</title><rect x="1065.5" y="163.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1068.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (293 samples, 0.66%)</title><rect x="1065.5" y="147.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1068.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (293 samples, 0.66%)</title><rect x="1065.5" y="131.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1068.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (293 samples, 0.66%)</title><rect x="1065.5" y="115.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1068.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (293 samples, 0.66%)</title><rect x="1065.5" y="99.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1068.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (293 samples, 0.66%)</title><rect x="1065.5" y="83.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1068.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (293 samples, 0.66%)</title><rect x="1065.5" y="67.0" width="7.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1068.5" y="78.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (10 samples, 0.02%)</title><rect x="1073.3" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1076.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (10 samples, 0.02%)</title><rect x="1073.3" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1076.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (10 samples, 0.02%)</title><rect x="1073.3" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1076.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (86 samples, 0.19%)</title><rect x="1073.6" y="307.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1076.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (83 samples, 0.19%)</title><rect x="1073.7" y="291.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1076.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (83 samples, 0.19%)</title><rect x="1073.7" y="275.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1076.7" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (35 samples, 0.08%)</title><rect x="1073.7" y="259.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (35 samples, 0.08%)</title><rect x="1073.7" y="243.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1076.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (35 samples, 0.08%)</title><rect x="1073.7" y="227.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (35 samples, 0.08%)</title><rect x="1073.7" y="211.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1076.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (35 samples, 0.08%)</title><rect x="1073.7" y="195.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1076.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (35 samples, 0.08%)</title><rect x="1073.7" y="179.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1076.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (35 samples, 0.08%)</title><rect x="1073.7" y="163.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1076.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (35 samples, 0.08%)</title><rect x="1073.7" y="147.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1076.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (35 samples, 0.08%)</title><rect x="1073.7" y="131.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1076.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (35 samples, 0.08%)</title><rect x="1073.7" y="115.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1076.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (35 samples, 0.08%)</title><rect x="1073.7" y="99.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1076.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (35 samples, 0.08%)</title><rect x="1073.7" y="83.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1076.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (35 samples, 0.08%)</title><rect x="1073.7" y="67.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1076.7" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (48 samples, 0.11%)</title><rect x="1074.6" y="259.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1077.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (48 samples, 0.11%)</title><rect x="1074.6" y="243.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1077.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (48 samples, 0.11%)</title><rect x="1074.6" y="227.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1077.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (48 samples, 0.11%)</title><rect x="1074.6" y="211.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1077.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (48 samples, 0.11%)</title><rect x="1074.6" y="195.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1077.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (48 samples, 0.11%)</title><rect x="1074.6" y="179.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1077.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (30 samples, 0.07%)</title><rect x="1074.6" y="163.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1077.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (30 samples, 0.07%)</title><rect x="1074.6" y="147.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1077.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (30 samples, 0.07%)</title><rect x="1074.6" y="131.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1077.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (30 samples, 0.07%)</title><rect x="1074.6" y="115.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1077.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (10 samples, 0.02%)</title><rect x="1074.6" y="99.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1077.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (10 samples, 0.02%)</title><rect x="1075.0" y="99.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1078.0" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$100/821788979.compare (18 samples, 0.04%)</title><rect x="1075.4" y="163.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1078.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (18 samples, 0.04%)</title><rect x="1075.4" y="147.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1078.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (18 samples, 0.04%)</title><rect x="1075.4" y="131.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1078.4" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (18 samples, 0.04%)</title><rect x="1075.4" y="115.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1078.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$98/1732288223.apply (18 samples, 0.04%)</title><rect x="1075.4" y="99.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1078.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (18 samples, 0.04%)</title><rect x="1075.4" y="83.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1078.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (18 samples, 0.04%)</title><rect x="1075.4" y="67.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1078.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (18 samples, 0.04%)</title><rect x="1075.4" y="51.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1078.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (4,105 samples, 9.30%)</title><rect x="1075.9" y="307.0" width="109.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1078.9" y="318.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (4,101 samples, 9.29%)</title><rect x="1075.9" y="291.0" width="109.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1078.9" y="302.0">java/lang/Ite..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$105/1095861321.accept (4,094 samples, 9.27%)</title><rect x="1076.1" y="275.0" width="109.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1079.1" y="286.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$10 (4,094 samples, 9.27%)</title><rect x="1076.1" y="259.0" width="109.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1079.1" y="270.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (4,094 samples, 9.27%)</title><rect x="1076.1" y="243.0" width="109.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1079.1" y="254.0">ru/mail/polis..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (24 samples, 0.05%)</title><rect x="1076.1" y="227.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1079.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (4,070 samples, 9.22%)</title><rect x="1076.7" y="227.0" width="108.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1079.7" y="238.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (4,070 samples, 9.22%)</title><rect x="1076.7" y="211.0" width="108.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1079.7" y="222.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (4,070 samples, 9.22%)</title><rect x="1076.7" y="195.0" width="108.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.7" y="206.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,888 samples, 6.54%)</title><rect x="1076.7" y="179.0" width="77.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1079.7" y="190.0">java/nio/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,559 samples, 3.53%)</title><rect x="1076.7" y="163.0" width="41.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1079.7" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,329 samples, 3.01%)</title><rect x="1118.4" y="163.0" width="35.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.4" y="174.0">jav..</text>
</g>
<g>
<title>byte[] (1,329 samples, 3.01%)</title><rect x="1118.4" y="147.0" width="35.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1121.4" y="158.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (1,182 samples, 2.68%)</title><rect x="1153.9" y="179.0" width="31.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1156.9" y="190.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,182 samples, 2.68%)</title><rect x="1153.9" y="163.0" width="31.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1156.9" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (815 samples, 1.85%)</title><rect x="1153.9" y="147.0" width="21.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1156.9" y="158.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (367 samples, 0.83%)</title><rect x="1175.7" y="147.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1178.7" y="158.0"></text>
</g>
<g>
<title>byte[] (367 samples, 0.83%)</title><rect x="1175.7" y="131.0" width="9.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1178.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (21 samples, 0.05%)</title><rect x="1185.6" y="323.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/TableSet.startIterating (65 samples, 0.15%)</title><rect x="1186.2" y="323.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1189.2" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (56 samples, 0.13%)</title><rect x="1186.4" y="307.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1189.4" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (53 samples, 0.12%)</title><rect x="1186.4" y="291.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1189.4" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (53 samples, 0.12%)</title><rect x="1186.4" y="275.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1189.4" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (47 samples, 0.11%)</title><rect x="1186.6" y="259.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1189.6" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (44 samples, 0.10%)</title><rect x="1186.7" y="243.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1189.7" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (11 samples, 0.02%)</title><rect x="1186.7" y="227.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1189.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (33 samples, 0.07%)</title><rect x="1187.0" y="227.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1190.0" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (21 samples, 0.05%)</title><rect x="1187.0" y="211.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1190.0" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (12 samples, 0.03%)</title><rect x="1187.5" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1190.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (12 samples, 0.03%)</title><rect x="1187.5" y="195.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1190.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (64 samples, 0.14%)</title><rect x="1188.1" y="419.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.1" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 0.13%)</title><rect x="1188.3" y="403.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1191.3" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 0.13%)</title><rect x="1188.3" y="387.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1191.3" y="398.0"></text>
</g>
<g>
<title>char[] (55 samples, 0.12%)</title><rect x="1188.3" y="371.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1191.3" y="382.0"></text>
</g>
</g>
</svg>
