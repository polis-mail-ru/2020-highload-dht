<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix local)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (3,986 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>[G1 Conc#0 tid=18744] (3 samples, 0.08%)</title><rect x="10.0" y="931.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.08%)</title><rect x="10.0" y="915.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.08%)</title><rect x="10.0" y="899.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.08%)</title><rect x="10.0" y="883.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.08%)</title><rect x="10.0" y="867.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (3 samples, 0.08%)</title><rect x="10.0" y="851.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (3 samples, 0.08%)</title><rect x="10.0" y="835.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) (1 samples, 0.03%)</title><rect x="10.3" y="819.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.3" y="830.0"></text>
</g>
<g>
<title>G1CMTask::get_entries_from_global_stack() (1 samples, 0.03%)</title><rect x="10.3" y="803.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.3" y="814.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="10.3" y="787.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.3" y="798.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.149] (1 samples, 0.03%)</title><rect x="10.6" y="819.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.6" y="830.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (1 samples, 0.03%)</title><rect x="10.6" y="803.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.6" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="10.6" y="787.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.6" y="798.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (1 samples, 0.03%)</title><rect x="10.6" y="771.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.6" y="782.0"></text>
</g>
<g>
<title>[G1 Conc#1 tid=18849] (4 samples, 0.10%)</title><rect x="10.9" y="931.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.9" y="942.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.10%)</title><rect x="10.9" y="915.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="13.9" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.10%)</title><rect x="10.9" y="899.0" width="1.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.9" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.10%)</title><rect x="10.9" y="883.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.9" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.10%)</title><rect x="10.9" y="867.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.9" y="878.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.05%)</title><rect x="10.9" y="851.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.9" y="862.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.05%)</title><rect x="10.9" y="835.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.9" y="846.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.149] (2 samples, 0.05%)</title><rect x="10.9" y="819.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.9" y="830.0"></text>
</g>
<g>
<title>G1CMTask::regular_clock_call() (1 samples, 0.03%)</title><rect x="11.2" y="803.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="14.2" y="814.0"></text>
</g>
<g>
<title>__GI___getrusage (1 samples, 0.03%)</title><rect x="11.2" y="787.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="14.2" y="798.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="11.5" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.5" y="862.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (1 samples, 0.03%)</title><rect x="11.5" y="835.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.5" y="846.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="11.5" y="819.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.5" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RootRegionScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RootRegionScanClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="11.8" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.8" y="862.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=18740] (14 samples, 0.35%)</title><rect x="12.1" y="931.0" width="4.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="15.1" y="942.0"></text>
</g>
<g>
<title>start_thread (14 samples, 0.35%)</title><rect x="12.1" y="915.0" width="4.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="15.1" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (14 samples, 0.35%)</title><rect x="12.1" y="899.0" width="4.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="15.1" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (14 samples, 0.35%)</title><rect x="12.1" y="883.0" width="4.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.1" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (14 samples, 0.35%)</title><rect x="12.1" y="867.0" width="4.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.1" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (14 samples, 0.35%)</title><rect x="12.1" y="851.0" width="4.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.1" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 0.23%)</title><rect x="12.1" y="835.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.1" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (7 samples, 0.18%)</title><rect x="12.1" y="819.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.1" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.15%)</title><rect x="12.1" y="803.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="15.1" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.08%)</title><rect x="13.0" y="787.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="16.0" y="798.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="13.8" y="803.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="16.8" y="814.0"></text>
</g>
<g>
<title>OWSTTaskTerminator::offer_termination(TerminatorTerminator*) (2 samples, 0.05%)</title><rect x="14.1" y="819.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.1" y="830.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="14.1" y="803.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="17.1" y="814.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.10%)</title><rect x="14.7" y="835.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="17.7" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.10%)</title><rect x="14.7" y="819.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="17.7" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.10%)</title><rect x="14.7" y="803.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="17.7" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.10%)</title><rect x="14.7" y="787.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.7" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.10%)</title><rect x="14.7" y="771.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.7" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.08%)</title><rect x="14.7" y="755.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.7" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.08%)</title><rect x="14.7" y="739.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="17.7" y="750.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.03%)</title><rect x="15.6" y="755.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="18.6" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.03%)</title><rect x="15.6" y="739.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="18.6" y="750.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="15.9" y="835.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="18.9" y="846.0"></text>
</g>
<g>
<title>G1EvacPhaseTimesTracker::~G1EvacPhaseTimesTracker() (1 samples, 0.03%)</title><rect x="15.9" y="819.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="18.9" y="830.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=18832] (16 samples, 0.40%)</title><rect x="16.2" y="931.0" width="4.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="19.2" y="942.0"></text>
</g>
<g>
<title>start_thread (16 samples, 0.40%)</title><rect x="16.2" y="915.0" width="4.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="19.2" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (16 samples, 0.40%)</title><rect x="16.2" y="899.0" width="4.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="19.2" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (16 samples, 0.40%)</title><rect x="16.2" y="883.0" width="4.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="19.2" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (16 samples, 0.40%)</title><rect x="16.2" y="867.0" width="4.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="19.2" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (16 samples, 0.40%)</title><rect x="16.2" y="851.0" width="4.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="19.2" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (12 samples, 0.30%)</title><rect x="16.2" y="835.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="19.2" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="16.2" y="819.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="19.2" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (8 samples, 0.20%)</title><rect x="16.5" y="819.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="19.5" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.08%)</title><rect x="17.7" y="803.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="20.7" y="814.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="18.6" y="803.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="21.6" y="814.0"></text>
</g>
<g>
<title>OWSTTaskTerminator::offer_termination(TerminatorTerminator*) (3 samples, 0.08%)</title><rect x="18.9" y="819.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="21.9" y="830.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.08%)</title><rect x="18.9" y="803.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="21.9" y="814.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.10%)</title><rect x="19.8" y="835.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="22.8" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.10%)</title><rect x="19.8" y="819.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="22.8" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.10%)</title><rect x="19.8" y="803.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="22.8" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.10%)</title><rect x="19.8" y="787.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="22.8" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.10%)</title><rect x="19.8" y="771.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="22.8" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.10%)</title><rect x="19.8" y="755.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="22.8" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="20.7" y="739.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="23.7" y="750.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="20.7" y="723.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="23.7" y="734.0"></text>
</g>
<g>
<title>[GC Thread#2 tid=18833] (16 samples, 0.40%)</title><rect x="21.0" y="931.0" width="4.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="24.0" y="942.0"></text>
</g>
<g>
<title>start_thread (16 samples, 0.40%)</title><rect x="21.0" y="915.0" width="4.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="24.0" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (16 samples, 0.40%)</title><rect x="21.0" y="899.0" width="4.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="24.0" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (16 samples, 0.40%)</title><rect x="21.0" y="883.0" width="4.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="24.0" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (16 samples, 0.40%)</title><rect x="21.0" y="867.0" width="4.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="24.0" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (16 samples, 0.40%)</title><rect x="21.0" y="851.0" width="4.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="24.0" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (11 samples, 0.28%)</title><rect x="21.0" y="835.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="24.0" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (10 samples, 0.25%)</title><rect x="21.0" y="819.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="24.0" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (7 samples, 0.18%)</title><rect x="21.8" y="803.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="24.8" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="23.6" y="787.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="26.6" y="798.0"></text>
</g>
<g>
<title>OWSTTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.03%)</title><rect x="23.9" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="26.9" y="830.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="23.9" y="803.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="26.9" y="814.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="23.9" y="787.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="26.9" y="798.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="23.9" y="771.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="26.9" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="23.9" y="755.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="26.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="23.9" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="26.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="23.9" y="723.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="26.9" y="734.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="23.9" y="707.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="26.9" y="718.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="23.9" y="691.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="26.9" y="702.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="23.9" y="675.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="26.9" y="686.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (1 samples, 0.03%)</title><rect x="23.9" y="659.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="26.9" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.10%)</title><rect x="24.2" y="835.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="27.2" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.10%)</title><rect x="24.2" y="819.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="27.2" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.10%)</title><rect x="24.2" y="803.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="27.2" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.10%)</title><rect x="24.2" y="787.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="27.2" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.10%)</title><rect x="24.2" y="771.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="27.2" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.08%)</title><rect x="24.2" y="755.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="27.2" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.08%)</title><rect x="24.2" y="739.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="27.2" y="750.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="24.8" y="723.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="27.8" y="734.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.03%)</title><rect x="25.1" y="755.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="28.1" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.03%)</title><rect x="25.1" y="739.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="28.1" y="750.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.03%)</title><rect x="25.1" y="723.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="28.1" y="734.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.03%)</title><rect x="25.1" y="707.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="28.1" y="718.0"></text>
</g>
<g>
<title>HeapRegion::block_is_obj(HeapWord const*) const (1 samples, 0.03%)</title><rect x="25.1" y="691.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="28.1" y="702.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="25.4" y="835.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="28.4" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.03%)</title><rect x="25.4" y="819.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="28.4" y="830.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="25.4" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="28.4" y="814.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=18834] (16 samples, 0.40%)</title><rect x="25.7" y="931.0" width="4.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="28.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="25.7" y="915.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="28.7" y="926.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (1 samples, 0.03%)</title><rect x="25.7" y="899.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="28.7" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="25.7" y="883.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="28.7" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="25.7" y="867.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="28.7" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="25.7" y="851.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="28.7" y="862.0"></text>
</g>
<g>
<title>start_thread (15 samples, 0.38%)</title><rect x="26.0" y="915.0" width="4.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="29.0" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (15 samples, 0.38%)</title><rect x="26.0" y="899.0" width="4.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="29.0" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (15 samples, 0.38%)</title><rect x="26.0" y="883.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="29.0" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (15 samples, 0.38%)</title><rect x="26.0" y="867.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="29.0" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (15 samples, 0.38%)</title><rect x="26.0" y="851.0" width="4.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="29.0" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (8 samples, 0.20%)</title><rect x="26.0" y="835.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="29.0" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (8 samples, 0.20%)</title><rect x="26.0" y="819.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="29.0" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.08%)</title><rect x="27.2" y="803.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="30.2" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="27.8" y="787.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="30.8" y="798.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="28.1" y="803.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="31.1" y="814.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (6 samples, 0.15%)</title><rect x="28.4" y="835.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="31.4" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (6 samples, 0.15%)</title><rect x="28.4" y="819.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="31.4" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (6 samples, 0.15%)</title><rect x="28.4" y="803.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="31.4" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (6 samples, 0.15%)</title><rect x="28.4" y="787.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="31.4" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (6 samples, 0.15%)</title><rect x="28.4" y="771.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="31.4" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (6 samples, 0.15%)</title><rect x="28.4" y="755.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="31.4" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.13%)</title><rect x="28.4" y="739.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="31.4" y="750.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="29.8" y="739.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="32.8" y="750.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="30.1" y="835.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="33.1" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.03%)</title><rect x="30.1" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="33.1" y="830.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="30.1" y="803.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="33.1" y="814.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="30.1" y="787.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="33.1" y="798.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (1 samples, 0.03%)</title><rect x="30.1" y="771.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="33.1" y="782.0"></text>
</g>
<g>
<title>Method::mask_for(int, InterpreterOopMap*) (1 samples, 0.03%)</title><rect x="30.1" y="755.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="33.1" y="766.0"></text>
</g>
<g>
<title>OopMapCache::lookup(methodHandle const&amp;, int, InterpreterOopMap*) (1 samples, 0.03%)</title><rect x="30.1" y="739.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="33.1" y="750.0"></text>
</g>
<g>
<title>[GC Thread#4 tid=18835] (15 samples, 0.38%)</title><rect x="30.4" y="931.0" width="4.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="33.4" y="942.0"></text>
</g>
<g>
<title>start_thread (15 samples, 0.38%)</title><rect x="30.4" y="915.0" width="4.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="33.4" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (15 samples, 0.38%)</title><rect x="30.4" y="899.0" width="4.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="33.4" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (15 samples, 0.38%)</title><rect x="30.4" y="883.0" width="4.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="33.4" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (15 samples, 0.38%)</title><rect x="30.4" y="867.0" width="4.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="33.4" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (15 samples, 0.38%)</title><rect x="30.4" y="851.0" width="4.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="33.4" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (10 samples, 0.25%)</title><rect x="30.4" y="835.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="33.4" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (10 samples, 0.25%)</title><rect x="30.4" y="819.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="33.4" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.10%)</title><rect x="31.6" y="803.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="34.6" y="814.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (2 samples, 0.05%)</title><rect x="32.8" y="803.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="35.8" y="814.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.10%)</title><rect x="33.4" y="835.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="36.4" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.10%)</title><rect x="33.4" y="819.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="36.4" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.10%)</title><rect x="33.4" y="803.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="36.4" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.10%)</title><rect x="33.4" y="787.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="36.4" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.08%)</title><rect x="33.7" y="771.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="36.7" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.08%)</title><rect x="33.7" y="755.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="36.7" y="766.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="34.6" y="835.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="37.6" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.03%)</title><rect x="34.6" y="819.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="37.6" y="830.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="34.6" y="803.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="37.6" y="814.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.03%)</title><rect x="34.6" y="787.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="37.6" y="798.0"></text>
</g>
<g>
<title>[GC Thread#5 tid=18836] (15 samples, 0.38%)</title><rect x="34.9" y="931.0" width="4.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="37.9" y="942.0"></text>
</g>
<g>
<title>start_thread (15 samples, 0.38%)</title><rect x="34.9" y="915.0" width="4.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="37.9" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (15 samples, 0.38%)</title><rect x="34.9" y="899.0" width="4.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="37.9" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (15 samples, 0.38%)</title><rect x="34.9" y="883.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="37.9" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (15 samples, 0.38%)</title><rect x="34.9" y="867.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="37.9" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (14 samples, 0.35%)</title><rect x="34.9" y="851.0" width="4.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="37.9" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (8 samples, 0.20%)</title><rect x="34.9" y="835.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="37.9" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (7 samples, 0.18%)</title><rect x="34.9" y="819.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="37.9" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.13%)</title><rect x="35.5" y="803.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="38.5" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.05%)</title><rect x="36.3" y="787.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="39.3" y="798.0"></text>
</g>
<g>
<title>OWSTTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.03%)</title><rect x="36.9" y="819.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="39.9" y="830.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="36.9" y="803.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="39.9" y="814.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (6 samples, 0.15%)</title><rect x="37.2" y="835.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="40.2" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (6 samples, 0.15%)</title><rect x="37.2" y="819.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="40.2" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (6 samples, 0.15%)</title><rect x="37.2" y="803.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="40.2" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (6 samples, 0.15%)</title><rect x="37.2" y="787.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="40.2" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (6 samples, 0.15%)</title><rect x="37.2" y="771.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="40.2" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (5 samples, 0.13%)</title><rect x="37.2" y="755.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="40.2" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.08%)</title><rect x="37.8" y="739.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="40.8" y="750.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.05%)</title><rect x="38.1" y="723.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="41.1" y="734.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.03%)</title><rect x="38.7" y="755.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="41.7" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.03%)</title><rect x="38.7" y="739.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="41.7" y="750.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.03%)</title><rect x="38.7" y="723.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="41.7" y="734.0"></text>
</g>
<g>
<title>ParallelCleaningTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="39.0" y="851.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="42.0" y="862.0"></text>
</g>
<g>
<title>CodeCacheUnloadingTask::claim_nmethods(CompiledMethod**, int*) (1 samples, 0.03%)</title><rect x="39.0" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="42.0" y="846.0"></text>
</g>
<g>
<title>CodeHeap::next_used(HeapBlock*) const (1 samples, 0.03%)</title><rect x="39.0" y="819.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="42.0" y="830.0"></text>
</g>
<g>
<title>[GC Thread#6 tid=18837] (18 samples, 0.45%)</title><rect x="39.3" y="931.0" width="5.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="42.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="39.3" y="915.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="42.3" y="926.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="39.3" y="899.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="42.3" y="910.0"></text>
</g>
<g>
<title>start_thread (17 samples, 0.43%)</title><rect x="39.6" y="915.0" width="5.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="42.6" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (17 samples, 0.43%)</title><rect x="39.6" y="899.0" width="5.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="42.6" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (17 samples, 0.43%)</title><rect x="39.6" y="883.0" width="5.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="42.6" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (17 samples, 0.43%)</title><rect x="39.6" y="867.0" width="5.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="42.6" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (17 samples, 0.43%)</title><rect x="39.6" y="851.0" width="5.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="42.6" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (11 samples, 0.28%)</title><rect x="39.6" y="835.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="42.6" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (11 samples, 0.28%)</title><rect x="39.6" y="819.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="42.6" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.15%)</title><rect x="41.1" y="803.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="44.1" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.05%)</title><rect x="42.3" y="787.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="45.3" y="798.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (5 samples, 0.13%)</title><rect x="42.9" y="835.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="45.9" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.13%)</title><rect x="42.9" y="819.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="45.9" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (5 samples, 0.13%)</title><rect x="42.9" y="803.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="45.9" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (5 samples, 0.13%)</title><rect x="42.9" y="787.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="45.9" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (5 samples, 0.13%)</title><rect x="42.9" y="771.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="45.9" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.10%)</title><rect x="42.9" y="755.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="45.9" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.05%)</title><rect x="43.2" y="739.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="46.2" y="750.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="43.5" y="723.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="46.5" y="734.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="43.7" y="739.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="46.7" y="750.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.03%)</title><rect x="44.0" y="755.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="47.0" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.03%)</title><rect x="44.0" y="739.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="47.0" y="750.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.03%)</title><rect x="44.0" y="723.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="47.0" y="734.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="44.3" y="835.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="47.3" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.03%)</title><rect x="44.3" y="819.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="47.3" y="830.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="44.3" y="803.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="47.3" y="814.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="44.3" y="787.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="47.3" y="798.0"></text>
</g>
<g>
<title>HandleArea::oops_do(OopClosure*) (1 samples, 0.03%)</title><rect x="44.3" y="771.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="47.3" y="782.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.03%)</title><rect x="44.3" y="755.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="47.3" y="766.0"></text>
</g>
<g>
<title>[GC Thread#7 tid=18838] (16 samples, 0.40%)</title><rect x="44.6" y="931.0" width="4.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="47.6" y="942.0"></text>
</g>
<g>
<title>start_thread (16 samples, 0.40%)</title><rect x="44.6" y="915.0" width="4.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="47.6" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (16 samples, 0.40%)</title><rect x="44.6" y="899.0" width="4.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="47.6" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (16 samples, 0.40%)</title><rect x="44.6" y="883.0" width="4.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="47.6" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (16 samples, 0.40%)</title><rect x="44.6" y="867.0" width="4.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="47.6" y="878.0"></text>
</g>
<g>
<title>G1CMRemarkTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="44.6" y="851.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="47.6" y="862.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (1 samples, 0.03%)</title><rect x="44.6" y="835.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="47.6" y="846.0"></text>
</g>
<g>
<title>OWSTTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.03%)</title><rect x="44.6" y="819.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="47.6" y="830.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="44.6" y="803.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="47.6" y="814.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (15 samples, 0.38%)</title><rect x="44.9" y="851.0" width="4.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="47.9" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (12 samples, 0.30%)</title><rect x="44.9" y="835.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="47.9" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (10 samples, 0.25%)</title><rect x="44.9" y="819.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="47.9" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.15%)</title><rect x="45.8" y="803.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="48.8" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (4 samples, 0.10%)</title><rect x="46.4" y="787.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="49.4" y="798.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="47.6" y="803.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="50.6" y="814.0"></text>
</g>
<g>
<title>OWSTTaskTerminator::offer_termination(TerminatorTerminator*) (2 samples, 0.05%)</title><rect x="47.9" y="819.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="50.9" y="830.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="47.9" y="803.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="50.9" y="814.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.05%)</title><rect x="48.5" y="835.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="51.5" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.05%)</title><rect x="48.5" y="819.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="51.5" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.05%)</title><rect x="48.5" y="803.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="51.5" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.05%)</title><rect x="48.5" y="787.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="51.5" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.05%)</title><rect x="48.5" y="771.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="51.5" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.05%)</title><rect x="48.5" y="755.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="51.5" y="766.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="49.1" y="835.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="52.1" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.03%)</title><rect x="49.1" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="52.1" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="49.1" y="803.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="52.1" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (1 samples, 0.03%)</title><rect x="49.1" y="787.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="52.1" y="798.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_card(MemRegion, unsigned int) (1 samples, 0.03%)</title><rect x="49.1" y="771.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="52.1" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.03%)</title><rect x="49.1" y="755.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="52.1" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="49.1" y="739.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="52.1" y="750.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="49.1" y="723.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="52.1" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=18771] (440 samples, 11.04%)</title><rect x="49.4" y="931.0" width="130.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="52.4" y="942.0">[NIO Selector #0..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (440 samples, 11.04%)</title><rect x="49.4" y="915.0" width="130.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.4" y="926.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.03%)</title><rect x="49.4" y="899.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.4" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (54 samples, 1.35%)</title><rect x="49.7" y="899.0" width="16.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.7" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.08%)</title><rect x="49.7" y="883.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.03%)</title><rect x="50.3" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (51 samples, 1.28%)</title><rect x="50.6" y="883.0" width="15.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="53.6" y="894.0"></text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (1 samples, 0.03%)</title><rect x="52.9" y="867.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="55.9" y="878.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (1 samples, 0.03%)</title><rect x="52.9" y="851.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="55.9" y="862.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.03%)</title><rect x="52.9" y="835.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="55.9" y="846.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="52.9" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="55.9" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="52.9" y="803.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="55.9" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="52.9" y="787.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="55.9" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="52.9" y="771.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="55.9" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="52.9" y="755.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="55.9" y="766.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="52.9" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="55.9" y="750.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="52.9" y="723.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="55.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 1.03%)</title><rect x="53.2" y="867.0" width="12.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="56.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="53.2" y="851.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="56.2" y="862.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="53.2" y="835.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="56.2" y="846.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="53.2" y="819.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="56.2" y="830.0"></text>
</g>
<g>
<title>epoll_wait (39 samples, 0.98%)</title><rect x="53.8" y="851.0" width="11.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="56.8" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.63%)</title><rect x="58.0" y="835.0" width="7.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="61.0" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.63%)</title><rect x="58.0" y="819.0" width="7.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="61.0" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (21 samples, 0.53%)</title><rect x="59.1" y="803.0" width="6.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="62.1" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (21 samples, 0.53%)</title><rect x="59.1" y="787.0" width="6.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="62.1" y="798.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="59.1" y="771.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="62.1" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="59.1" y="755.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="62.1" y="766.0"></text>
</g>
<g>
<title>ep_poll (20 samples, 0.50%)</title><rect x="59.4" y="771.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="62.4" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (20 samples, 0.50%)</title><rect x="59.4" y="755.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="62.4" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (14 samples, 0.35%)</title><rect x="61.2" y="739.0" width="4.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="64.2" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (10 samples, 0.25%)</title><rect x="62.4" y="723.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="65.4" y="734.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rcx (1 samples, 0.03%)</title><rect x="63.0" y="707.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="66.0" y="718.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.15%)</title><rect x="63.3" y="707.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="66.3" y="718.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.10%)</title><rect x="63.9" y="691.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="66.9" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="65.1" y="707.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="68.1" y="718.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.03%)</title><rect x="65.4" y="867.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="68.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (385 samples, 9.66%)</title><rect x="65.7" y="899.0" width="113.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.7" y="910.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (383 samples, 9.61%)</title><rect x="66.0" y="883.0" width="113.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.0" y="894.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (333 samples, 8.35%)</title><rect x="66.0" y="867.0" width="98.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.0" y="878.0">one/nio/http..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="70.7" y="851.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="73.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (298 samples, 7.48%)</title><rect x="71.0" y="851.0" width="88.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="74.0" y="862.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (298 samples, 7.48%)</title><rect x="71.0" y="835.0" width="88.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.0" y="846.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (294 samples, 7.38%)</title><rect x="71.0" y="819.0" width="87.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.0" y="830.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (180 samples, 4.52%)</title><rect x="71.3" y="803.0" width="53.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.3" y="814.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.05%)</title><rect x="71.6" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="71.6" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="71.6" y="755.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.6" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="71.6" y="739.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="74.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (173 samples, 4.34%)</title><rect x="72.2" y="787.0" width="51.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.2" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.20%)</title><rect x="72.8" y="771.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (163 samples, 4.09%)</title><rect x="75.1" y="771.0" width="48.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.1" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (163 samples, 4.09%)</title><rect x="75.1" y="755.0" width="48.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.1" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (162 samples, 4.06%)</title><rect x="75.4" y="739.0" width="48.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.4" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (162 samples, 4.06%)</title><rect x="75.4" y="723.0" width="48.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.4" y="734.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="76.3" y="707.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="79.3" y="718.0"></text>
</g>
<g>
<title>__send (158 samples, 3.96%)</title><rect x="76.6" y="707.0" width="46.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="79.6" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (146 samples, 3.66%)</title><rect x="80.2" y="691.0" width="43.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="83.2" y="702.0">entr..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.05%)</title><rect x="80.2" y="675.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="83.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (144 samples, 3.61%)</title><rect x="80.8" y="675.0" width="42.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="83.8" y="686.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (138 samples, 3.46%)</title><rect x="82.5" y="659.0" width="40.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="85.5" y="670.0">__x..</text>
</g>
<g>
<title>__sys_sendto (138 samples, 3.46%)</title><rect x="82.5" y="643.0" width="40.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="85.5" y="654.0">__s..</text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="82.8" y="627.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="85.8" y="638.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="82.8" y="611.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="85.8" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (135 samples, 3.39%)</title><rect x="83.1" y="627.0" width="40.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="86.1" y="638.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (130 samples, 3.26%)</title><rect x="83.1" y="611.0" width="38.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="86.1" y="622.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (128 samples, 3.21%)</title><rect x="83.7" y="595.0" width="37.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="86.7" y="606.0">tcp..</text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="84.0" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="87.0" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (124 samples, 3.11%)</title><rect x="84.3" y="579.0" width="36.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="87.3" y="590.0">tcp..</text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="85.5" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="88.5" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.05%)</title><rect x="85.8" y="563.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="88.8" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="85.8" y="547.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="88.8" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.03%)</title><rect x="86.1" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="89.1" y="558.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.03%)</title><rect x="86.4" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="89.4" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.03%)</title><rect x="86.4" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="89.4" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.10%)</title><rect x="86.7" y="563.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="89.7" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.10%)</title><rect x="86.7" y="547.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="89.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (2 samples, 0.05%)</title><rect x="87.0" y="531.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="90.0" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="87.0" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="90.0" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="87.3" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="90.3" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="87.6" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="90.6" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="87.6" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="90.6" y="526.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.05%)</title><rect x="87.9" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="90.9" y="574.0"></text>
</g>
<g>
<title>tcp_chrono_start (2 samples, 0.05%)</title><rect x="87.9" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="90.9" y="558.0"></text>
</g>
<g>
<title>tcp_push (106 samples, 2.66%)</title><rect x="88.4" y="563.0" width="31.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="91.4" y="574.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (106 samples, 2.66%)</title><rect x="88.4" y="547.0" width="31.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="91.4" y="558.0">__..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.34 (1 samples, 0.03%)</title><rect x="88.4" y="531.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="91.4" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (105 samples, 2.63%)</title><rect x="88.7" y="531.0" width="31.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="91.7" y="542.0">tc..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="89.9" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="92.9" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (95 samples, 2.38%)</title><rect x="90.2" y="515.0" width="28.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="93.2" y="526.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (93 samples, 2.33%)</title><rect x="90.8" y="499.0" width="27.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="93.8" y="510.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (91 samples, 2.28%)</title><rect x="90.8" y="483.0" width="27.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="93.8" y="494.0">_..</text>
</g>
<g>
<title>ip_local_out (90 samples, 2.26%)</title><rect x="90.8" y="467.0" width="26.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="93.8" y="478.0">i..</text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.10%)</title><rect x="90.8" y="451.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="93.8" y="462.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.05%)</title><rect x="90.8" y="435.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="93.8" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.05%)</title><rect x="91.4" y="435.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="94.4" y="446.0"></text>
</g>
<g>
<title>netlbl_enabled (2 samples, 0.05%)</title><rect x="91.4" y="419.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="94.4" y="430.0"></text>
</g>
<g>
<title>ip_output (84 samples, 2.11%)</title><rect x="92.0" y="451.0" width="24.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="95.0" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output (76 samples, 1.91%)</title><rect x="92.6" y="435.0" width="22.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="95.6" y="446.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="93.2" y="419.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="96.2" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (72 samples, 1.81%)</title><rect x="93.5" y="419.0" width="21.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="96.5" y="430.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (70 samples, 1.76%)</title><rect x="93.8" y="403.0" width="20.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="96.8" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (58 samples, 1.46%)</title><rect x="93.8" y="387.0" width="17.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="96.8" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (58 samples, 1.46%)</title><rect x="93.8" y="371.0" width="17.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="96.8" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (57 samples, 1.43%)</title><rect x="94.1" y="355.0" width="16.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="97.1" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (57 samples, 1.43%)</title><rect x="94.1" y="339.0" width="16.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="97.1" y="350.0"></text>
</g>
<g>
<title>net_rx_action (53 samples, 1.33%)</title><rect x="95.0" y="323.0" width="15.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="98.0" y="334.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="95.9" y="307.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="98.9" y="318.0"></text>
</g>
<g>
<title>process_backlog (49 samples, 1.23%)</title><rect x="96.1" y="307.0" width="14.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="99.1" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (46 samples, 1.15%)</title><rect x="97.0" y="291.0" width="13.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="100.0" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (46 samples, 1.15%)</title><rect x="97.0" y="275.0" width="13.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="100.0" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.05%)</title><rect x="97.0" y="259.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="100.0" y="270.0"></text>
</g>
<g>
<title>ip_rcv (44 samples, 1.10%)</title><rect x="97.6" y="259.0" width="13.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="100.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.03%)</title><rect x="97.6" y="243.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="100.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (43 samples, 1.08%)</title><rect x="97.9" y="243.0" width="12.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="100.9" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (39 samples, 0.98%)</title><rect x="98.5" y="227.0" width="11.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="101.5" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (39 samples, 0.98%)</title><rect x="98.5" y="211.0" width="11.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="101.5" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (37 samples, 0.93%)</title><rect x="98.5" y="195.0" width="11.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="101.5" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (37 samples, 0.93%)</title><rect x="98.5" y="179.0" width="11.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="101.5" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.05%)</title><rect x="100.0" y="163.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="103.0" y="174.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="100.6" y="163.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="103.6" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="100.9" y="163.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="103.9" y="174.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="101.2" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="104.2" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.15%)</title><rect x="101.5" y="163.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="104.5" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="101.5" y="147.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="104.5" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.10%)</title><rect x="101.8" y="147.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="104.8" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (4 samples, 0.10%)</title><rect x="101.8" y="131.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="104.8" y="142.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (3 samples, 0.08%)</title><rect x="102.1" y="115.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="105.1" y="126.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (1 samples, 0.03%)</title><rect x="102.1" y="99.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="105.1" y="110.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (2 samples, 0.05%)</title><rect x="102.4" y="99.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="105.4" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (1 samples, 0.03%)</title><rect x="103.0" y="147.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="106.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (21 samples, 0.53%)</title><rect x="103.3" y="163.0" width="6.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="106.3" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (21 samples, 0.53%)</title><rect x="103.3" y="147.0" width="6.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="106.3" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.08%)</title><rect x="103.3" y="131.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="106.3" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="103.3" y="115.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="106.3" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.05%)</title><rect x="103.5" y="115.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="106.5" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="103.5" y="99.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="106.5" y="110.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.03%)</title><rect x="103.8" y="83.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="106.8" y="94.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="104.1" y="131.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="107.1" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.13%)</title><rect x="104.4" y="131.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="107.4" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.13%)</title><rect x="104.4" y="115.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="107.4" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.13%)</title><rect x="104.4" y="99.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="107.4" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.13%)</title><rect x="104.4" y="83.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="107.4" y="94.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.25%)</title><rect x="105.9" y="131.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="108.9" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.10%)</title><rect x="106.8" y="115.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="109.8" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="106.8" y="99.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="109.8" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="106.8" y="83.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="109.8" y="94.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.08%)</title><rect x="107.1" y="99.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="110.1" y="110.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.08%)</title><rect x="107.1" y="83.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="110.1" y="94.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.08%)</title><rect x="107.1" y="67.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="110.1" y="78.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.08%)</title><rect x="107.1" y="51.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="110.1" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="107.4" y="35.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="110.4" y="46.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.03%)</title><rect x="108.0" y="115.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="111.0" y="126.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.03%)</title><rect x="108.3" y="115.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="111.3" y="126.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.03%)</title><rect x="108.6" y="115.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="111.6" y="126.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.03%)</title><rect x="108.9" y="131.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="111.9" y="142.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.03%)</title><rect x="109.2" y="131.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="112.2" y="142.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.05%)</title><rect x="109.5" y="195.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="112.5" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (2 samples, 0.05%)</title><rect x="110.1" y="227.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="113.1" y="238.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="110.7" y="323.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="113.7" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (12 samples, 0.30%)</title><rect x="110.9" y="387.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="113.9" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (12 samples, 0.30%)</title><rect x="110.9" y="371.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="113.9" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.15%)</title><rect x="112.1" y="355.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="115.1" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.13%)</title><rect x="112.4" y="339.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="115.4" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="113.3" y="323.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="116.3" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="113.3" y="307.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="116.3" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.03%)</title><rect x="113.3" y="291.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="116.3" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="113.6" y="323.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="116.6" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="113.9" y="355.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="116.9" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="114.2" y="355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="117.2" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="114.2" y="339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="117.2" y="350.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="114.5" y="403.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="117.5" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="114.8" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="117.8" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.15%)</title><rect x="115.1" y="435.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="118.1" y="446.0"></text>
</g>
<g>
<title>selinux_ip_postroute (1 samples, 0.03%)</title><rect x="115.1" y="419.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="118.1" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (5 samples, 0.13%)</title><rect x="115.4" y="419.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="118.4" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (4 samples, 0.10%)</title><rect x="115.4" y="403.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="118.4" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (2 samples, 0.05%)</title><rect x="116.0" y="387.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="119.0" y="398.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (1 samples, 0.03%)</title><rect x="116.3" y="371.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="119.3" y="382.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="116.3" y="355.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="119.3" y="366.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (1 samples, 0.03%)</title><rect x="116.6" y="403.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="119.6" y="414.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="116.9" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="119.9" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="117.2" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="120.2" y="462.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="117.5" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="120.5" y="478.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.05%)</title><rect x="117.8" y="483.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="120.8" y="494.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.03%)</title><rect x="118.3" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="121.3" y="526.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="118.6" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="121.6" y="526.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="118.9" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="121.9" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.03%)</title><rect x="119.2" y="515.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="122.2" y="526.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.03%)</title><rect x="119.2" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="122.2" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="119.5" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="122.5" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.08%)</title><rect x="119.8" y="563.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="122.8" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.05%)</title><rect x="120.1" y="547.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="123.1" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="120.1" y="531.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="123.1" y="542.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.03%)</title><rect x="120.7" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="123.7" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="121.0" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="124.0" y="590.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.03%)</title><rect x="121.3" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="124.3" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.13%)</title><rect x="121.6" y="611.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="124.6" y="622.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (1 samples, 0.03%)</title><rect x="122.5" y="595.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="125.5" y="606.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.03%)</title><rect x="122.5" y="579.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="125.5" y="590.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (1 samples, 0.03%)</title><rect x="122.8" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="125.8" y="606.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg_permission (1 samples, 0.03%)</title><rect x="122.8" y="579.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="125.8" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="123.1" y="627.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="126.1" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="123.1" y="611.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="126.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.10%)</title><rect x="123.4" y="787.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="124.3" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="124.3" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (8 samples, 0.20%)</title><rect x="124.6" y="803.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.20%)</title><rect x="124.6" y="787.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="124.6" y="771.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="124.6" y="755.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.15%)</title><rect x="125.2" y="771.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.15%)</title><rect x="125.2" y="755.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.15%)</title><rect x="125.2" y="739.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.15%)</title><rect x="125.2" y="723.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (1 samples, 0.03%)</title><rect x="126.9" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.upsert (104 samples, 2.61%)</title><rect x="127.2" y="803.0" width="30.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.2" y="814.0">ru..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="127.2" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="127.2" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="130.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 0.03%)</title><rect x="127.2" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="130.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 0.03%)</title><rect x="127.2" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.2" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="127.2" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="130.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="127.2" y="707.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="130.2" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="127.2" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="130.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="127.5" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.5" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="127.5" y="771.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="130.5" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="127.5" y="755.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="130.5" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="127.5" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="130.5" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="127.5" y="723.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="130.5" y="734.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="127.5" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="130.5" y="718.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="127.5" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="130.5" y="702.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="127.5" y="675.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="130.5" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="127.5" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="130.5" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="127.5" y="643.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="130.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (63 samples, 1.58%)</title><rect x="127.8" y="787.0" width="18.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (63 samples, 1.58%)</title><rect x="127.8" y="771.0" width="18.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.10%)</title><rect x="127.8" y="755.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.10%)</title><rect x="127.8" y="739.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="130.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.10%)</title><rect x="127.8" y="723.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="130.8" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="128.4" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="128.7" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="128.7" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="131.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.05%)</title><rect x="129.0" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="132.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.05%)</title><rect x="129.0" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.05%)</title><rect x="129.0" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$91/1753024190.run (57 samples, 1.43%)</title><rect x="129.6" y="755.0" width="16.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (57 samples, 1.43%)</title><rect x="129.6" y="739.0" width="16.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (57 samples, 1.43%)</title><rect x="129.6" y="723.0" width="16.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (57 samples, 1.43%)</title><rect x="129.6" y="707.0" width="16.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (54 samples, 1.35%)</title><rect x="130.2" y="691.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="133.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.03%)</title><rect x="136.4" y="675.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.03%)</title><rect x="136.4" y="659.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (32 samples, 0.80%)</title><rect x="136.7" y="675.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="139.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (29 samples, 0.73%)</title><rect x="137.6" y="659.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="140.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (29 samples, 0.73%)</title><rect x="137.6" y="643.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="140.6" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.15%)</title><rect x="137.6" y="627.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.6" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (23 samples, 0.58%)</title><rect x="139.4" y="627.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.4" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (23 samples, 0.58%)</title><rect x="139.4" y="611.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.4" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (9 samples, 0.23%)</title><rect x="143.5" y="595.0" width="2.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="146.5" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="146.2" y="691.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="149.2" y="702.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="146.2" y="675.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="149.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapArray (2 samples, 0.05%)</title><rect x="146.5" y="787.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="146.5" y="771.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="149.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="146.5" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="146.5" y="739.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="146.5" y="723.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="149.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (2 samples, 0.05%)</title><rect x="146.5" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapString (37 samples, 0.93%)</title><rect x="147.1" y="787.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.28%)</title><rect x="147.1" y="771.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.1" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.28%)</title><rect x="147.1" y="755.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.1" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.28%)</title><rect x="147.1" y="739.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.28%)</title><rect x="147.1" y="723.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="149.1" y="707.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.1" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="149.7" y="707.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="152.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="149.7" y="691.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.toBytes (26 samples, 0.65%)</title><rect x="150.3" y="771.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (26 samples, 0.65%)</title><rect x="150.3" y="755.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (15 samples, 0.38%)</title><rect x="150.3" y="739.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (13 samples, 0.33%)</title><rect x="150.3" y="723.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="153.0" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.08%)</title><rect x="153.3" y="707.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.05%)</title><rect x="154.2" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.2" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="154.5" y="707.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="157.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 0.28%)</title><rect x="154.8" y="739.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (8 samples, 0.20%)</title><rect x="154.8" y="723.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.05%)</title><rect x="156.5" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.08%)</title><rect x="157.1" y="723.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="157.7" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.10%)</title><rect x="158.0" y="819.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.10%)</title><rect x="158.0" y="803.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="161.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.10%)</title><rect x="158.0" y="787.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="161.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 0.25%)</title><rect x="159.2" y="851.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.2" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="159.2" y="835.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="162.2" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="159.2" y="819.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="162.2" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="159.2" y="803.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="162.2" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="159.2" y="787.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="162.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.20%)</title><rect x="159.5" y="835.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.20%)</title><rect x="159.5" y="819.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="161.6" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="161.6" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.03%)</title><rect x="161.6" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.6" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="161.6" y="755.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="164.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.03%)</title><rect x="161.9" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="164.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="162.2" y="851.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="162.2" y="835.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.2" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="162.2" y="819.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="165.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.15%)</title><rect x="162.8" y="851.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.13%)</title><rect x="163.1" y="835.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (50 samples, 1.25%)</title><rect x="164.5" y="867.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (50 samples, 1.25%)</title><rect x="164.5" y="851.0" width="14.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.5" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.10%)</title><rect x="165.1" y="835.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="168.1" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="165.1" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="168.1" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="165.4" y="819.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="168.4" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.05%)</title><rect x="165.7" y="819.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="168.7" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (2 samples, 0.05%)</title><rect x="165.7" y="803.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="168.7" y="814.0"></text>
</g>
<g>
<title>__recv (43 samples, 1.08%)</title><rect x="166.3" y="835.0" width="12.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="169.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.88%)</title><rect x="168.7" y="819.0" width="10.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="171.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 0.88%)</title><rect x="168.7" y="803.0" width="10.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="171.7" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (31 samples, 0.78%)</title><rect x="169.9" y="787.0" width="9.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="172.9" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (31 samples, 0.78%)</title><rect x="169.9" y="771.0" width="9.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="172.9" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (29 samples, 0.73%)</title><rect x="169.9" y="755.0" width="8.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="172.9" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (22 samples, 0.55%)</title><rect x="169.9" y="739.0" width="6.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="172.9" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (22 samples, 0.55%)</title><rect x="169.9" y="723.0" width="6.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="172.9" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.18%)</title><rect x="170.2" y="707.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="173.2" y="718.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.15%)</title><rect x="170.2" y="691.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="173.2" y="702.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="170.5" y="675.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="173.5" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.10%)</title><rect x="170.7" y="675.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="173.7" y="686.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="171.0" y="659.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="174.0" y="670.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="171.6" y="659.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="174.6" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="171.9" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="174.9" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="172.2" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="175.2" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="172.2" y="691.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="175.2" y="702.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="172.5" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="175.5" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="172.5" y="691.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="175.5" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.15%)</title><rect x="172.8" y="707.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="175.8" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.15%)</title><rect x="172.8" y="691.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="175.8" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.13%)</title><rect x="173.1" y="675.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="176.1" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="173.1" y="659.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="176.1" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.08%)</title><rect x="173.7" y="659.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="176.7" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.08%)</title><rect x="173.7" y="643.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="176.7" y="654.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="174.6" y="707.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="177.6" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.13%)</title><rect x="174.9" y="707.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="177.9" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.13%)</title><rect x="174.9" y="691.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="177.9" y="702.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="175.2" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="178.2" y="686.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="175.2" y="659.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="178.2" y="670.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.08%)</title><rect x="175.5" y="675.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="178.5" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (7 samples, 0.18%)</title><rect x="176.4" y="739.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="179.4" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.13%)</title><rect x="176.7" y="723.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="179.7" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.13%)</title><rect x="176.7" y="707.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="179.7" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.10%)</title><rect x="177.0" y="691.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="180.0" y="702.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (1 samples, 0.03%)</title><rect x="178.1" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="181.1" y="734.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.03%)</title><rect x="178.1" y="707.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="181.1" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="178.4" y="755.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="181.4" y="766.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="178.4" y="739.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="181.4" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="178.4" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="181.4" y="734.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="178.4" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="181.4" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="178.7" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="181.7" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="179.0" y="835.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="182.0" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="179.3" y="883.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="182.3" y="894.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="179.3" y="867.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="182.3" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="179.3" y="851.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="182.3" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=18772] (404 samples, 10.14%)</title><rect x="179.6" y="931.0" width="119.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="182.6" y="942.0">[NIO Selector #..</text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.05%)</title><rect x="179.6" y="915.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="182.6" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="179.6" y="899.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="182.6" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.05%)</title><rect x="179.6" y="883.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="182.6" y="894.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.05%)</title><rect x="179.6" y="867.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="182.6" y="878.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="179.6" y="851.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="182.6" y="862.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="179.6" y="835.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="182.6" y="846.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="179.9" y="851.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="182.9" y="862.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.05%)</title><rect x="180.2" y="915.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="183.2" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="180.2" y="899.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="183.2" y="910.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="180.5" y="883.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="183.5" y="894.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (400 samples, 10.04%)</title><rect x="180.8" y="915.0" width="118.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="183.8" y="926.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (55 samples, 1.38%)</title><rect x="180.8" y="899.0" width="16.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="183.8" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="181.4" y="883.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="184.4" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="181.4" y="867.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="184.4" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="181.4" y="851.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="184.4" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="181.4" y="835.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="184.4" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="181.4" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="184.4" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.03%)</title><rect x="181.4" y="803.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="184.4" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (52 samples, 1.30%)</title><rect x="181.7" y="883.0" width="15.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.7" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="181.7" y="867.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="184.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 1.20%)</title><rect x="182.0" y="867.0" width="14.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="185.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="182.0" y="851.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="185.0" y="862.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="182.0" y="835.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="185.0" y="846.0"></text>
</g>
<g>
<title>epoll_wait (47 samples, 1.18%)</title><rect x="182.3" y="851.0" width="13.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="185.3" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.93%)</title><rect x="185.3" y="835.0" width="10.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="188.3" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.03%)</title><rect x="185.3" y="819.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="188.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.90%)</title><rect x="185.5" y="819.0" width="10.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="188.5" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (33 samples, 0.83%)</title><rect x="186.4" y="803.0" width="9.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="189.4" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (33 samples, 0.83%)</title><rect x="186.4" y="787.0" width="9.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="189.4" y="798.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="186.4" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="189.4" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="186.4" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="189.4" y="766.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="186.4" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="189.4" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_irq (1 samples, 0.03%)</title><rect x="186.7" y="771.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="189.7" y="782.0"></text>
</g>
<g>
<title>ep_poll (31 samples, 0.78%)</title><rect x="187.0" y="771.0" width="9.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="190.0" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (28 samples, 0.70%)</title><rect x="187.3" y="755.0" width="8.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="190.3" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (18 samples, 0.45%)</title><rect x="189.7" y="739.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="192.7" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (12 samples, 0.30%)</title><rect x="190.6" y="723.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="193.6" y="734.0"></text>
</g>
<g>
<title>sock_poll (8 samples, 0.20%)</title><rect x="191.5" y="707.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="194.5" y="718.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.05%)</title><rect x="193.0" y="691.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="196.0" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="193.5" y="691.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="196.5" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="193.8" y="707.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="196.8" y="718.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.08%)</title><rect x="194.1" y="723.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="197.1" y="734.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="195.0" y="739.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="198.0" y="750.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="195.3" y="723.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="198.3" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.05%)</title><rect x="195.6" y="755.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="198.6" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.05%)</title><rect x="195.6" y="739.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="198.6" y="750.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="195.6" y="723.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="198.6" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="195.6" y="707.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="198.6" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="196.2" y="867.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="199.2" y="878.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.05%)</title><rect x="196.5" y="867.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="199.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (345 samples, 8.66%)</title><rect x="197.1" y="899.0" width="102.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.1" y="910.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (344 samples, 8.63%)</title><rect x="197.4" y="883.0" width="101.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="200.4" y="894.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (308 samples, 7.73%)</title><rect x="197.4" y="867.0" width="91.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="200.4" y="878.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (269 samples, 6.75%)</title><rect x="202.4" y="851.0" width="79.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.4" y="862.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (269 samples, 6.75%)</title><rect x="202.4" y="835.0" width="79.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.4" y="846.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (264 samples, 6.62%)</title><rect x="202.4" y="819.0" width="78.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="205.4" y="830.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (168 samples, 4.21%)</title><rect x="202.4" y="803.0" width="49.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.4" y="814.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.05%)</title><rect x="203.0" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="203.0" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="203.0" y="755.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="206.0" y="766.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="203.3" y="739.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="206.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (158 samples, 3.96%)</title><rect x="203.6" y="787.0" width="46.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.6" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.28%)</title><rect x="203.9" y="771.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.9" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (146 samples, 3.66%)</title><rect x="207.2" y="771.0" width="43.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.2" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (146 samples, 3.66%)</title><rect x="207.2" y="755.0" width="43.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="210.2" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (145 samples, 3.64%)</title><rect x="207.5" y="739.0" width="42.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.5" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (145 samples, 3.64%)</title><rect x="207.5" y="723.0" width="42.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.5" y="734.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.13%)</title><rect x="208.0" y="707.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="211.0" y="718.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (5 samples, 0.13%)</title><rect x="208.0" y="691.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="211.0" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.05%)</title><rect x="209.5" y="707.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="212.5" y="718.0"></text>
</g>
<g>
<title>__send (136 samples, 3.41%)</title><rect x="210.1" y="707.0" width="40.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="213.1" y="718.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (126 samples, 3.16%)</title><rect x="213.1" y="691.0" width="37.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="216.1" y="702.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (126 samples, 3.16%)</title><rect x="213.1" y="675.0" width="37.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="216.1" y="686.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (126 samples, 3.16%)</title><rect x="213.1" y="659.0" width="37.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="216.1" y="670.0">__x..</text>
</g>
<g>
<title>__sys_sendto (126 samples, 3.16%)</title><rect x="213.1" y="643.0" width="37.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="216.1" y="654.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (124 samples, 3.11%)</title><rect x="213.1" y="627.0" width="36.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="216.1" y="638.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (120 samples, 3.01%)</title><rect x="213.1" y="611.0" width="35.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="216.1" y="622.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (120 samples, 3.01%)</title><rect x="213.1" y="595.0" width="35.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="216.1" y="606.0">tcp..</text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="213.1" y="579.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="216.1" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="213.4" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="216.4" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (118 samples, 2.96%)</title><rect x="213.7" y="579.0" width="34.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="216.7" y="590.0">tc..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.05%)</title><rect x="214.6" y="563.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="217.6" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="214.6" y="547.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="217.6" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.13%)</title><rect x="215.2" y="563.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="218.2" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.13%)</title><rect x="215.2" y="547.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="218.2" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (2 samples, 0.05%)</title><rect x="215.4" y="531.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="218.4" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.05%)</title><rect x="215.4" y="515.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="218.4" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="215.7" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="218.7" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="216.0" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="219.0" y="542.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.03%)</title><rect x="216.0" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="219.0" y="526.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="216.3" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="219.3" y="542.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.03%)</title><rect x="216.3" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="219.3" y="526.0"></text>
</g>
<g>
<title>tcp_push (107 samples, 2.68%)</title><rect x="216.6" y="563.0" width="31.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="219.6" y="574.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (106 samples, 2.66%)</title><rect x="216.9" y="547.0" width="31.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="219.9" y="558.0">__..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="216.9" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="219.9" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (105 samples, 2.63%)</title><rect x="217.2" y="531.0" width="31.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="220.2" y="542.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (93 samples, 2.33%)</title><rect x="217.8" y="515.0" width="27.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="220.8" y="526.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (91 samples, 2.28%)</title><rect x="218.1" y="499.0" width="27.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="221.1" y="510.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (90 samples, 2.26%)</title><rect x="218.1" y="483.0" width="26.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="221.1" y="494.0">_..</text>
</g>
<g>
<title>ip_local_out (89 samples, 2.23%)</title><rect x="218.4" y="467.0" width="26.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="221.4" y="478.0">i..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.08%)</title><rect x="218.7" y="451.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="221.7" y="462.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="218.7" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="221.7" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.05%)</title><rect x="219.0" y="435.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="222.0" y="446.0"></text>
</g>
<g>
<title>ip_output (85 samples, 2.13%)</title><rect x="219.6" y="451.0" width="25.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="222.6" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output (76 samples, 1.91%)</title><rect x="220.2" y="435.0" width="22.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="223.2" y="446.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="220.2" y="419.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="223.2" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (71 samples, 1.78%)</title><rect x="220.8" y="419.0" width="21.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="223.8" y="430.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (70 samples, 1.76%)</title><rect x="221.1" y="403.0" width="20.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="224.1" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (64 samples, 1.61%)</title><rect x="221.1" y="387.0" width="18.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="224.1" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (64 samples, 1.61%)</title><rect x="221.1" y="371.0" width="18.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="224.1" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (62 samples, 1.56%)</title><rect x="221.7" y="355.0" width="18.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="224.7" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (62 samples, 1.56%)</title><rect x="221.7" y="339.0" width="18.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="224.7" y="350.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="222.3" y="323.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="225.3" y="334.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="222.6" y="323.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="225.6" y="334.0"></text>
</g>
<g>
<title>net_rx_action (58 samples, 1.46%)</title><rect x="222.8" y="323.0" width="17.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="225.8" y="334.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="223.1" y="307.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="226.1" y="318.0"></text>
</g>
<g>
<title>process_backlog (56 samples, 1.40%)</title><rect x="223.4" y="307.0" width="16.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="226.4" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (56 samples, 1.40%)</title><rect x="223.4" y="291.0" width="16.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="226.4" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="223.4" y="275.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="226.4" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (55 samples, 1.38%)</title><rect x="223.7" y="275.0" width="16.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="226.7" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.05%)</title><rect x="223.7" y="259.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="226.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv (53 samples, 1.33%)</title><rect x="224.3" y="259.0" width="15.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="227.3" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="224.6" y="243.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="227.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.03%)</title><rect x="225.2" y="243.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="228.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (49 samples, 1.23%)</title><rect x="225.5" y="243.0" width="14.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="228.5" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (47 samples, 1.18%)</title><rect x="225.5" y="227.0" width="13.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="228.5" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (47 samples, 1.18%)</title><rect x="225.5" y="211.0" width="13.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="228.5" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (47 samples, 1.18%)</title><rect x="225.5" y="195.0" width="13.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="228.5" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (47 samples, 1.18%)</title><rect x="225.5" y="179.0" width="13.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="228.5" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.05%)</title><rect x="226.4" y="163.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="229.4" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="226.7" y="147.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="229.7" y="158.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="227.0" y="163.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="230.0" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (11 samples, 0.28%)</title><rect x="227.6" y="163.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="230.6" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="227.9" y="147.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="230.9" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (8 samples, 0.20%)</title><rect x="228.5" y="147.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="231.5" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (6 samples, 0.15%)</title><rect x="229.1" y="131.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="232.1" y="142.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (3 samples, 0.08%)</title><rect x="230.0" y="115.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="233.0" y="126.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (1 samples, 0.03%)</title><rect x="230.0" y="99.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="233.0" y="110.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (1 samples, 0.03%)</title><rect x="230.3" y="99.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="233.3" y="110.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (1 samples, 0.03%)</title><rect x="230.5" y="99.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="233.5" y="110.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.03%)</title><rect x="230.8" y="163.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="233.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (28 samples, 0.70%)</title><rect x="231.1" y="163.0" width="8.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="234.1" y="174.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.03%)</title><rect x="231.1" y="147.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="234.1" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (27 samples, 0.68%)</title><rect x="231.4" y="147.0" width="8.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="234.4" y="158.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.03%)</title><rect x="232.0" y="131.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="235.0" y="142.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.03%)</title><rect x="232.3" y="131.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="235.3" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.13%)</title><rect x="232.6" y="131.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="235.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.13%)</title><rect x="232.6" y="115.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="235.6" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.13%)</title><rect x="232.6" y="99.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="235.6" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.13%)</title><rect x="232.6" y="83.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="235.6" y="94.0"></text>
</g>
<g>
<title>tcp_ack (13 samples, 0.33%)</title><rect x="234.1" y="131.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="237.1" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.20%)</title><rect x="235.6" y="115.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="238.6" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="235.6" y="99.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="238.6" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="235.6" y="83.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="238.6" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="235.6" y="67.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="238.6" y="78.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.18%)</title><rect x="235.9" y="99.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="238.9" y="110.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.18%)</title><rect x="235.9" y="83.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="238.9" y="94.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.15%)</title><rect x="236.2" y="67.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="239.2" y="78.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.15%)</title><rect x="236.2" y="51.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="239.2" y="62.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.10%)</title><rect x="236.8" y="35.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="239.8" y="46.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="237.9" y="131.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="240.9" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="238.2" y="131.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="241.2" y="142.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="238.2" y="115.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="241.2" y="126.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="238.2" y="99.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="241.2" y="110.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="238.5" y="115.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="241.5" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.03%)</title><rect x="238.8" y="131.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="241.8" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="239.1" y="131.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="242.1" y="142.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="239.4" y="227.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="242.4" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.03%)</title><rect x="239.7" y="227.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="242.7" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.15%)</title><rect x="240.0" y="387.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="243.0" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.15%)</title><rect x="240.0" y="371.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="243.0" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.05%)</title><rect x="241.2" y="355.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="244.2" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="241.2" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="244.2" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="241.2" y="323.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="244.2" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="241.2" y="307.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="244.2" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="241.5" y="339.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="244.5" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.05%)</title><rect x="241.8" y="419.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="244.8" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="242.4" y="419.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="245.4" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.15%)</title><rect x="242.7" y="435.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="245.7" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (6 samples, 0.15%)</title><rect x="242.7" y="419.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="245.7" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (6 samples, 0.15%)</title><rect x="242.7" y="403.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="245.7" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (3 samples, 0.08%)</title><rect x="243.3" y="387.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="246.3" y="398.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="243.6" y="371.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="246.6" y="382.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (1 samples, 0.03%)</title><rect x="243.9" y="371.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="246.9" y="382.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (1 samples, 0.03%)</title><rect x="244.2" y="387.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="247.2" y="398.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (1 samples, 0.03%)</title><rect x="244.5" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="247.5" y="446.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.03%)</title><rect x="244.8" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="247.8" y="494.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="245.1" y="499.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="248.1" y="510.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.05%)</title><rect x="245.3" y="515.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="248.3" y="526.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="245.9" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="248.9" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="246.2" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="249.2" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.08%)</title><rect x="246.5" y="515.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="249.5" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.08%)</title><rect x="246.5" y="499.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="249.5" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="247.1" y="483.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="250.1" y="494.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="247.1" y="467.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="250.1" y="478.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.03%)</title><rect x="247.4" y="515.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="250.4" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.05%)</title><rect x="247.7" y="515.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="250.7" y="526.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="248.3" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="251.3" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="248.6" y="611.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="251.6" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="248.6" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="251.6" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="248.6" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="251.6" y="590.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (2 samples, 0.05%)</title><rect x="248.9" y="611.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="251.9" y="622.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (1 samples, 0.03%)</title><rect x="249.5" y="611.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="252.5" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="249.8" y="627.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="252.8" y="638.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="249.8" y="611.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="252.8" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="249.8" y="595.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="252.8" y="606.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="250.1" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="253.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.15%)</title><rect x="250.4" y="787.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.08%)</title><rect x="251.3" y="771.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="254.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.08%)</title><rect x="251.3" y="755.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (16 samples, 0.40%)</title><rect x="252.2" y="803.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (16 samples, 0.40%)</title><rect x="252.2" y="787.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="255.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.20%)</title><rect x="252.5" y="771.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.20%)</title><rect x="252.5" y="755.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.5" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="254.8" y="771.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="257.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.15%)</title><rect x="255.1" y="771.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.13%)</title><rect x="255.4" y="755.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="258.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.13%)</title><rect x="255.4" y="739.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.13%)</title><rect x="255.4" y="723.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.upsert (80 samples, 2.01%)</title><rect x="256.9" y="803.0" width="23.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.9" y="814.0">r..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.13%)</title><rect x="256.9" y="787.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="259.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.13%)</title><rect x="256.9" y="771.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="259.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (5 samples, 0.13%)</title><rect x="256.9" y="755.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (5 samples, 0.13%)</title><rect x="256.9" y="739.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="259.9" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.10%)</title><rect x="256.9" y="723.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.9" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="257.2" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.2" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.05%)</title><rect x="257.5" y="707.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="260.5" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="258.1" y="723.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="258.1" y="707.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="261.1" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="258.1" y="691.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="261.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="258.4" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="261.4" y="798.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="258.4" y="771.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="261.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (37 samples, 0.93%)</title><rect x="258.7" y="787.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="261.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (36 samples, 0.90%)</title><rect x="259.0" y="771.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="259.0" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="259.0" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="259.0" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="262.0" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.03%)</title><rect x="259.0" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="262.0" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.03%)</title><rect x="259.0" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.0" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1 samples, 0.03%)</title><rect x="259.0" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.03%)</title><rect x="259.3" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.03%)</title><rect x="259.3" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="262.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.03%)</title><rect x="259.3" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="262.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$91/1753024190.run (34 samples, 0.85%)</title><rect x="259.6" y="755.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (34 samples, 0.85%)</title><rect x="259.6" y="739.0" width="10.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (34 samples, 0.85%)</title><rect x="259.6" y="723.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.6" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.08%)</title><rect x="259.6" y="707.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="262.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (31 samples, 0.78%)</title><rect x="260.4" y="707.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="263.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (31 samples, 0.78%)</title><rect x="260.4" y="691.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="263.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.03%)</title><rect x="264.3" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="267.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.03%)</title><rect x="264.3" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.05%)</title><rect x="264.6" y="675.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="267.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.03%)</title><rect x="264.6" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="267.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="264.6" y="643.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="267.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="264.6" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.6" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="264.6" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="267.6" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="264.6" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="267.6" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="264.6" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.6" y="590.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.03%)</title><rect x="264.6" y="563.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="267.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="264.9" y="659.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="267.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="264.9" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="267.9" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="264.9" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="267.9" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="264.9" y="611.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.9" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="264.9" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.9" y="606.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.03%)</title><rect x="264.9" y="579.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="267.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (15 samples, 0.38%)</title><rect x="265.2" y="675.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 0.38%)</title><rect x="265.2" y="659.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="268.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 0.38%)</title><rect x="265.2" y="643.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="268.2" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.05%)</title><rect x="265.2" y="627.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="268.2" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (13 samples, 0.33%)</title><rect x="265.8" y="627.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="268.8" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (13 samples, 0.33%)</title><rect x="265.8" y="611.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="268.8" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (6 samples, 0.15%)</title><rect x="267.8" y="595.0" width="1.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="270.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapArray (1 samples, 0.03%)</title><rect x="269.6" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="269.6" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="269.6" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.6" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="269.6" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="269.6" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="272.6" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.03%)</title><rect x="269.6" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapString (36 samples, 0.90%)</title><rect x="269.9" y="787.0" width="10.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.35%)</title><rect x="269.9" y="771.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.35%)</title><rect x="269.9" y="755.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="272.9" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.35%)</title><rect x="269.9" y="739.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (14 samples, 0.35%)</title><rect x="269.9" y="723.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="272.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.13%)</title><rect x="271.7" y="707.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.7" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="273.2" y="707.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="276.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="273.2" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="273.5" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.5" y="702.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="273.8" y="691.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="276.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.toBytes (22 samples, 0.55%)</title><rect x="274.1" y="771.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="277.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (22 samples, 0.55%)</title><rect x="274.1" y="755.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="277.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (12 samples, 0.30%)</title><rect x="274.1" y="739.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (11 samples, 0.28%)</title><rect x="274.1" y="723.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="277.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="276.1" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.08%)</title><rect x="276.4" y="707.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="277.3" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.3" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="277.3" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 0.25%)</title><rect x="277.6" y="739.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.13%)</title><rect x="277.6" y="723.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.03%)</title><rect x="278.8" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.13%)</title><rect x="279.1" y="723.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="280.0" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.10%)</title><rect x="280.6" y="819.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="283.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.10%)</title><rect x="280.6" y="803.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.10%)</title><rect x="280.6" y="787.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="281.5" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.03%)</title><rect x="281.8" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="281.8" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="281.8" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.8" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="281.8" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="284.8" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="281.8" y="755.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="284.8" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="281.8" y="739.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="284.8" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="281.8" y="723.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="284.8" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="281.8" y="707.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="284.8" y="718.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::retire_before_allocation() (1 samples, 0.03%)</title><rect x="281.8" y="691.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="284.8" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.03%)</title><rect x="281.8" y="675.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="284.8" y="686.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="281.8" y="659.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="284.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13 samples, 0.33%)</title><rect x="282.1" y="851.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="282.4" y="835.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.4" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="282.4" y="819.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="285.4" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="282.4" y="803.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="285.4" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="282.4" y="787.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="285.4" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="282.4" y="771.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="285.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.25%)</title><rect x="282.6" y="835.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.25%)</title><rect x="282.6" y="819.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.6" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="285.3" y="803.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="288.3" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="285.3" y="787.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="288.3" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="285.3" y="771.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="288.3" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="285.3" y="755.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="288.3" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="285.3" y="739.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="288.3" y="750.0"></text>
</g>
<g>
<title>Monitor::lock() (1 samples, 0.03%)</title><rect x="285.3" y="723.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="288.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.03%)</title><rect x="285.6" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.15%)</title><rect x="285.9" y="851.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.10%)</title><rect x="286.5" y="835.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.10%)</title><rect x="286.5" y="819.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.5" y="830.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="287.1" y="803.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="290.1" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="287.4" y="803.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="290.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.08%)</title><rect x="287.7" y="851.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="288.0" y="835.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="288.3" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (36 samples, 0.90%)</title><rect x="288.6" y="867.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.6" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (36 samples, 0.90%)</title><rect x="288.6" y="851.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="291.6" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.10%)</title><rect x="288.9" y="835.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="291.9" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="289.2" y="819.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="292.2" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="289.5" y="819.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="292.5" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.03%)</title><rect x="289.5" y="803.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="292.5" y="814.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="289.8" y="819.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="292.8" y="830.0"></text>
</g>
<g>
<title>__recv (31 samples, 0.78%)</title><rect x="290.1" y="835.0" width="9.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="293.1" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.48%)</title><rect x="293.6" y="819.0" width="5.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="296.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.48%)</title><rect x="293.6" y="803.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="296.6" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (16 samples, 0.40%)</title><rect x="294.5" y="787.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="297.5" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (16 samples, 0.40%)</title><rect x="294.5" y="771.0" width="4.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="297.5" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (16 samples, 0.40%)</title><rect x="294.5" y="755.0" width="4.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="297.5" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (13 samples, 0.33%)</title><rect x="294.5" y="739.0" width="3.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="297.5" y="750.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="294.8" y="723.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="297.8" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 0.28%)</title><rect x="295.1" y="723.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="298.1" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.10%)</title><rect x="295.1" y="707.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="298.1" y="718.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.10%)</title><rect x="295.1" y="691.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="298.1" y="702.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="295.1" y="675.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="298.1" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.05%)</title><rect x="295.7" y="675.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="298.7" y="686.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="295.7" y="659.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="298.7" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.15%)</title><rect x="296.3" y="707.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="299.3" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.15%)</title><rect x="296.3" y="691.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="299.3" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.03%)</title><rect x="296.9" y="675.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="299.9" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.08%)</title><rect x="297.2" y="675.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="300.2" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="297.2" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="300.2" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.03%)</title><rect x="297.5" y="659.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="300.5" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="297.5" y="643.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="300.5" y="654.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="297.7" y="659.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="300.7" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="298.0" y="707.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="301.0" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="298.0" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="301.0" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.08%)</title><rect x="298.3" y="739.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="301.3" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.05%)</title><rect x="298.3" y="723.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="301.3" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.05%)</title><rect x="298.3" y="707.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="301.3" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="298.6" y="691.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="301.6" y="702.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (1 samples, 0.03%)</title><rect x="298.9" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="301.9" y="734.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.03%)</title><rect x="298.9" y="707.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="301.9" y="718.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=18773] (358 samples, 8.98%)</title><rect x="299.2" y="931.0" width="106.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="302.2" y="942.0">[NIO Selector..</text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.05%)</title><rect x="299.2" y="915.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="302.2" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="299.2" y="899.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="302.2" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.05%)</title><rect x="299.2" y="883.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="302.2" y="894.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.05%)</title><rect x="299.2" y="867.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="302.2" y="878.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.03%)</title><rect x="299.5" y="851.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="302.5" y="862.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="299.5" y="835.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="302.5" y="846.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (356 samples, 8.93%)</title><rect x="299.8" y="915.0" width="105.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="302.8" y="926.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.03%)</title><rect x="300.1" y="899.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="303.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.08%)</title><rect x="300.4" y="899.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="303.4" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.08%)</title><rect x="300.4" y="883.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.03%)</title><rect x="301.0" y="867.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (39 samples, 0.98%)</title><rect x="301.3" y="899.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.3" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (39 samples, 0.98%)</title><rect x="301.3" y="883.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.95%)</title><rect x="301.3" y="867.0" width="11.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="304.3" y="878.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="301.3" y="851.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="304.3" y="862.0"></text>
</g>
<g>
<title>epoll_wait (37 samples, 0.93%)</title><rect x="301.6" y="851.0" width="10.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="304.6" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.70%)</title><rect x="304.3" y="835.0" width="8.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="307.3" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.03%)</title><rect x="304.3" y="819.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="307.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.68%)</title><rect x="304.6" y="819.0" width="7.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="307.6" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (27 samples, 0.68%)</title><rect x="304.6" y="803.0" width="7.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="307.6" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (27 samples, 0.68%)</title><rect x="304.6" y="787.0" width="7.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="307.6" y="798.0"></text>
</g>
<g>
<title>ep_poll (27 samples, 0.68%)</title><rect x="304.6" y="771.0" width="7.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="307.6" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (25 samples, 0.63%)</title><rect x="304.6" y="755.0" width="7.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="307.6" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (17 samples, 0.43%)</title><rect x="306.3" y="739.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="309.3" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (12 samples, 0.30%)</title><rect x="307.8" y="723.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="310.8" y="734.0"></text>
</g>
<g>
<title>sock_poll (10 samples, 0.25%)</title><rect x="308.1" y="707.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="311.1" y="718.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.13%)</title><rect x="309.6" y="691.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="312.6" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="311.1" y="707.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="314.1" y="718.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="311.4" y="739.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="314.4" y="750.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="311.7" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="314.7" y="750.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="312.0" y="755.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="315.0" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.03%)</title><rect x="312.3" y="755.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="315.3" y="766.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="312.3" y="739.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="315.3" y="750.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="312.5" y="867.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="315.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (312 samples, 7.83%)</title><rect x="312.8" y="899.0" width="92.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="315.8" y="910.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (308 samples, 7.73%)</title><rect x="313.7" y="883.0" width="91.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.7" y="894.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (270 samples, 6.77%)</title><rect x="313.7" y="867.0" width="80.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="316.7" y="878.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (247 samples, 6.20%)</title><rect x="317.0" y="851.0" width="73.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="320.0" y="862.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (247 samples, 6.20%)</title><rect x="317.0" y="835.0" width="73.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.0" y="846.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (245 samples, 6.15%)</title><rect x="317.0" y="819.0" width="72.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="320.0" y="830.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (154 samples, 3.86%)</title><rect x="317.3" y="803.0" width="45.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="320.3" y="814.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="317.6" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="317.6" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="317.6" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.6" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="317.6" y="739.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="320.6" y="750.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="317.6" y="723.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="320.6" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="317.6" y="707.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="320.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (152 samples, 3.81%)</title><rect x="317.9" y="787.0" width="45.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="320.9" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.30%)</title><rect x="318.2" y="771.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="321.2" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="321.4" y="755.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="324.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (139 samples, 3.49%)</title><rect x="321.7" y="771.0" width="41.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.7" y="782.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (139 samples, 3.49%)</title><rect x="321.7" y="755.0" width="41.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="324.7" y="766.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="322.0" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (137 samples, 3.44%)</title><rect x="322.3" y="739.0" width="40.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.3" y="750.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (137 samples, 3.44%)</title><rect x="322.3" y="723.0" width="40.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.3" y="734.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="322.6" y="707.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="325.6" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="322.6" y="691.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="325.6" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="322.6" y="675.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="325.6" y="686.0"></text>
</g>
<g>
<title>__send (135 samples, 3.39%)</title><rect x="322.9" y="707.0" width="40.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="325.9" y="718.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (121 samples, 3.04%)</title><rect x="327.1" y="691.0" width="35.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="330.1" y="702.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (121 samples, 3.04%)</title><rect x="327.1" y="675.0" width="35.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="330.1" y="686.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (120 samples, 3.01%)</title><rect x="327.4" y="659.0" width="35.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="330.4" y="670.0">__x..</text>
</g>
<g>
<title>__sys_sendto (120 samples, 3.01%)</title><rect x="327.4" y="643.0" width="35.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="330.4" y="654.0">__s..</text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.03%)</title><rect x="327.9" y="627.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="330.9" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (116 samples, 2.91%)</title><rect x="328.2" y="627.0" width="34.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="331.2" y="638.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (113 samples, 2.83%)</title><rect x="328.2" y="611.0" width="33.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="331.2" y="622.0">in..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="328.2" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="331.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (112 samples, 2.81%)</title><rect x="328.5" y="595.0" width="33.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="331.5" y="606.0">tc..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="328.5" y="579.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="331.5" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.05%)</title><rect x="328.8" y="579.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="331.8" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="329.4" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="332.4" y="590.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="329.7" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="332.7" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (107 samples, 2.68%)</title><rect x="330.0" y="579.0" width="31.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="333.0" y="590.0">tc..</text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="330.9" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="333.9" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.05%)</title><rect x="331.2" y="563.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="334.2" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="331.2" y="547.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="334.2" y="558.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.03%)</title><rect x="331.8" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="334.8" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.03%)</title><rect x="331.8" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="334.8" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.03%)</title><rect x="332.1" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="335.1" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.03%)</title><rect x="332.1" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="335.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (1 samples, 0.03%)</title><rect x="332.1" y="531.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="335.1" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="332.1" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="335.1" y="526.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.05%)</title><rect x="332.4" y="563.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="335.4" y="574.0"></text>
</g>
<g>
<title>tcp_push (92 samples, 2.31%)</title><rect x="333.0" y="563.0" width="27.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="336.0" y="574.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (90 samples, 2.26%)</title><rect x="333.3" y="547.0" width="26.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="336.3" y="558.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (90 samples, 2.26%)</title><rect x="333.3" y="531.0" width="26.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="336.3" y="542.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (84 samples, 2.11%)</title><rect x="333.6" y="515.0" width="24.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="336.6" y="526.0">_..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="334.8" y="499.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="337.8" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (76 samples, 1.91%)</title><rect x="335.0" y="499.0" width="22.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="338.0" y="510.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (76 samples, 1.91%)</title><rect x="335.0" y="483.0" width="22.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="338.0" y="494.0">_..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.03%)</title><rect x="335.0" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="338.0" y="478.0"></text>
</g>
<g>
<title>ip_local_out (73 samples, 1.83%)</title><rect x="335.3" y="467.0" width="21.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="338.3" y="478.0">i..</text>
</g>
<g>
<title>ip_output (73 samples, 1.83%)</title><rect x="335.3" y="451.0" width="21.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="338.3" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output (66 samples, 1.66%)</title><rect x="335.9" y="435.0" width="19.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="338.9" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (63 samples, 1.58%)</title><rect x="336.2" y="419.0" width="18.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="339.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (61 samples, 1.53%)</title><rect x="336.8" y="403.0" width="18.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="339.8" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (53 samples, 1.33%)</title><rect x="336.8" y="387.0" width="15.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="339.8" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (53 samples, 1.33%)</title><rect x="336.8" y="371.0" width="15.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="339.8" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (53 samples, 1.33%)</title><rect x="336.8" y="355.0" width="15.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="339.8" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (52 samples, 1.30%)</title><rect x="336.8" y="339.0" width="15.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="339.8" y="350.0"></text>
</g>
<g>
<title>net_rx_action (50 samples, 1.25%)</title><rect x="337.1" y="323.0" width="14.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="340.1" y="334.0"></text>
</g>
<g>
<title>process_backlog (50 samples, 1.25%)</title><rect x="337.1" y="307.0" width="14.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="340.1" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (50 samples, 1.25%)</title><rect x="337.1" y="291.0" width="14.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="340.1" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (49 samples, 1.23%)</title><rect x="337.1" y="275.0" width="14.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="340.1" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.13%)</title><rect x="337.1" y="259.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="340.1" y="270.0"></text>
</g>
<g>
<title>ip_rcv (43 samples, 1.08%)</title><rect x="338.6" y="259.0" width="12.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="341.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.03%)</title><rect x="338.6" y="243.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="341.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (42 samples, 1.05%)</title><rect x="338.9" y="243.0" width="12.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="341.9" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (42 samples, 1.05%)</title><rect x="338.9" y="227.0" width="12.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="341.9" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (42 samples, 1.05%)</title><rect x="338.9" y="211.0" width="12.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="341.9" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (42 samples, 1.05%)</title><rect x="338.9" y="195.0" width="12.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="341.9" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (40 samples, 1.00%)</title><rect x="339.5" y="179.0" width="11.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="342.5" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.08%)</title><rect x="339.5" y="163.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="342.5" y="174.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="340.4" y="163.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="343.4" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.18%)</title><rect x="340.7" y="163.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="343.7" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="341.0" y="147.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="344.0" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.08%)</title><rect x="341.6" y="147.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="344.6" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.08%)</title><rect x="341.6" y="131.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="344.6" y="142.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (1 samples, 0.03%)</title><rect x="341.9" y="115.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="344.9" y="126.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (1 samples, 0.03%)</title><rect x="342.2" y="115.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="345.2" y="126.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (1 samples, 0.03%)</title><rect x="342.2" y="99.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="345.2" y="110.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="342.2" y="83.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="345.2" y="94.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (1 samples, 0.03%)</title><rect x="342.4" y="147.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="345.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (29 samples, 0.73%)</title><rect x="342.7" y="163.0" width="8.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="345.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (29 samples, 0.73%)</title><rect x="342.7" y="147.0" width="8.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="345.7" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.10%)</title><rect x="343.0" y="131.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="346.0" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.05%)</title><rect x="343.6" y="115.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="346.6" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="343.6" y="99.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="346.6" y="110.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="343.6" y="83.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="346.6" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="343.9" y="67.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="346.9" y="78.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="344.2" y="131.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="347.2" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="344.5" y="131.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="347.5" y="142.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.03%)</title><rect x="344.8" y="131.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="347.8" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (8 samples, 0.20%)</title><rect x="345.1" y="131.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="348.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="345.1" y="115.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="348.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 0.18%)</title><rect x="345.4" y="115.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="348.4" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.18%)</title><rect x="345.4" y="99.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="348.4" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.18%)</title><rect x="345.4" y="83.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="348.4" y="94.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.25%)</title><rect x="347.5" y="131.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="350.5" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="348.7" y="115.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="351.7" y="126.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="348.7" y="99.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="351.7" y="110.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="348.7" y="83.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="351.7" y="94.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.03%)</title><rect x="349.0" y="115.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="352.0" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (2 samples, 0.05%)</title><rect x="349.3" y="115.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="352.3" y="126.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="349.6" y="99.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="352.6" y="110.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.05%)</title><rect x="349.8" y="115.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="352.8" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="350.4" y="131.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="353.4" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="350.7" y="131.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="353.7" y="142.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="351.0" y="131.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="354.0" y="142.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="351.3" y="259.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="354.3" y="270.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="351.6" y="275.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="354.6" y="286.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="351.9" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="354.9" y="334.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="352.2" y="339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="355.2" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (8 samples, 0.20%)</title><rect x="352.5" y="387.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="355.5" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.20%)</title><rect x="352.5" y="371.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="355.5" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.15%)</title><rect x="352.8" y="355.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="355.8" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.10%)</title><rect x="353.1" y="339.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="356.1" y="350.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.08%)</title><rect x="353.1" y="323.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="356.1" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.08%)</title><rect x="353.1" y="307.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="356.1" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.08%)</title><rect x="353.1" y="291.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="356.1" y="302.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.03%)</title><rect x="354.0" y="323.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="357.0" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="354.3" y="339.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="357.3" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="354.6" y="355.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="357.6" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="354.6" y="339.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="357.6" y="350.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.03%)</title><rect x="354.6" y="323.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="357.6" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.05%)</title><rect x="354.9" y="419.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="357.9" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.13%)</title><rect x="355.5" y="435.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="358.5" y="446.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.05%)</title><rect x="355.8" y="419.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="358.8" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (2 samples, 0.05%)</title><rect x="356.4" y="419.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="359.4" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (1 samples, 0.03%)</title><rect x="356.4" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="359.4" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (1 samples, 0.03%)</title><rect x="356.4" y="387.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="359.4" y="398.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (1 samples, 0.03%)</title><rect x="356.7" y="403.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="359.7" y="414.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="357.0" y="467.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="360.0" y="478.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.08%)</title><rect x="357.5" y="499.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="360.5" y="510.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.08%)</title><rect x="357.5" y="483.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="360.5" y="494.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="358.4" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="361.4" y="526.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="358.7" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="361.7" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.05%)</title><rect x="359.0" y="515.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="362.0" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="359.3" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="362.3" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="359.3" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="362.3" y="494.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="359.3" y="467.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="362.3" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="359.3" y="451.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="362.3" y="462.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="359.6" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="362.6" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.03%)</title><rect x="359.9" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="362.9" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.13%)</title><rect x="360.2" y="563.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="363.2" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="360.2" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="363.2" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.10%)</title><rect x="360.5" y="547.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="363.5" y="558.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="361.4" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="364.4" y="542.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.03%)</title><rect x="361.7" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="364.7" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="362.0" y="611.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="365.0" y="622.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (1 samples, 0.03%)</title><rect x="362.0" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="365.0" y="606.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg_permission (1 samples, 0.03%)</title><rect x="362.0" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="365.0" y="590.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (1 samples, 0.03%)</title><rect x="362.3" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="365.3" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="362.6" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="365.6" y="638.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="362.6" y="611.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="365.6" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="362.6" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="365.6" y="606.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="362.6" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="365.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.15%)</title><rect x="362.9" y="803.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.15%)</title><rect x="362.9" y="787.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="362.9" y="771.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="362.9" y="755.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.9" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="363.2" y="739.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="366.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.10%)</title><rect x="363.5" y="771.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.10%)</title><rect x="363.5" y="755.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.10%)</title><rect x="363.5" y="739.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.10%)</title><rect x="363.5" y="723.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.upsert (84 samples, 2.11%)</title><rect x="364.7" y="803.0" width="24.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="367.7" y="814.0">r..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.08%)</title><rect x="364.7" y="787.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="367.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.08%)</title><rect x="364.7" y="771.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (3 samples, 0.08%)</title><rect x="364.7" y="755.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="367.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (3 samples, 0.08%)</title><rect x="364.7" y="739.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="367.7" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.08%)</title><rect x="364.7" y="723.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="367.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.05%)</title><rect x="364.9" y="707.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="367.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (46 samples, 1.15%)</title><rect x="365.5" y="787.0" width="13.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="368.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (46 samples, 1.15%)</title><rect x="365.5" y="771.0" width="13.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="365.5" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="368.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="365.5" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="365.5" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="368.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.05%)</title><rect x="365.8" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.05%)</title><rect x="365.8" y="739.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.05%)</title><rect x="365.8" y="723.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="368.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$91/1753024190.run (43 samples, 1.08%)</title><rect x="366.4" y="755.0" width="12.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (43 samples, 1.08%)</title><rect x="366.4" y="739.0" width="12.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="369.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (43 samples, 1.08%)</title><rect x="366.4" y="723.0" width="12.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="369.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="366.4" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.4" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="366.4" y="691.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="369.4" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="366.4" y="675.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="369.4" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="366.4" y="659.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="369.4" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="366.4" y="643.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="369.4" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.03%)</title><rect x="366.4" y="627.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="369.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (40 samples, 1.00%)</title><rect x="366.7" y="707.0" width="11.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.7" y="718.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="367.0" y="691.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="370.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (37 samples, 0.93%)</title><rect x="367.3" y="691.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="370.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="371.8" y="675.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="374.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="371.8" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="374.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.03%)</title><rect x="372.1" y="675.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="375.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.03%)</title><rect x="372.1" y="659.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/Striped64$Cell.cas (1 samples, 0.03%)</title><rect x="372.1" y="643.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (1 samples, 0.03%)</title><rect x="372.1" y="627.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="372.1" y="611.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="375.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.03%)</title><rect x="372.3" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="372.3" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="375.3" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="372.3" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.3" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="372.3" y="627.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.3" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="372.3" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="375.3" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="372.3" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="375.3" y="606.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.03%)</title><rect x="372.3" y="579.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="375.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (19 samples, 0.48%)</title><rect x="372.6" y="675.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="375.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.48%)</title><rect x="372.6" y="659.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="375.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.48%)</title><rect x="372.6" y="643.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="375.6" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.13%)</title><rect x="372.6" y="627.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.6" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (14 samples, 0.35%)</title><rect x="374.1" y="627.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.1" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (14 samples, 0.35%)</title><rect x="374.1" y="611.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.1" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (4 samples, 0.10%)</title><rect x="377.1" y="595.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="380.1" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="378.3" y="691.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="381.3" y="702.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="378.3" y="675.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="381.3" y="686.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="378.3" y="659.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="381.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (2 samples, 0.05%)</title><rect x="378.6" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="381.6" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.05%)</title><rect x="378.6" y="691.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="381.6" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.05%)</title><rect x="378.6" y="675.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="381.6" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="378.6" y="659.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="381.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="378.6" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="381.6" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="378.6" y="627.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.6" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="378.6" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="381.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="378.6" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="381.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="378.9" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.9" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="378.9" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="381.9" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="378.9" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="381.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapArray (2 samples, 0.05%)</title><rect x="379.2" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="379.2" y="771.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="379.2" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="379.2" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="379.2" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapString (33 samples, 0.83%)</title><rect x="379.7" y="787.0" width="9.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.13%)</title><rect x="379.7" y="771.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.13%)</title><rect x="379.7" y="755.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.7" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.13%)</title><rect x="379.7" y="739.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.13%)</title><rect x="379.7" y="723.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.7" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="380.6" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="383.6" y="718.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="380.6" y="691.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="383.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.toBytes (28 samples, 0.70%)</title><rect x="381.2" y="771.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (28 samples, 0.70%)</title><rect x="381.2" y="755.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (16 samples, 0.40%)</title><rect x="381.2" y="739.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (14 samples, 0.35%)</title><rect x="381.2" y="723.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (6 samples, 0.15%)</title><rect x="383.6" y="707.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.05%)</title><rect x="385.4" y="723.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="388.4" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="385.7" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="388.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (12 samples, 0.30%)</title><rect x="386.0" y="739.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (7 samples, 0.18%)</title><rect x="386.0" y="723.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (5 samples, 0.13%)</title><rect x="386.6" y="707.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.13%)</title><rect x="388.0" y="723.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="391.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.08%)</title><rect x="388.6" y="707.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.05%)</title><rect x="389.5" y="819.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.5" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.05%)</title><rect x="389.5" y="803.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="392.5" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.05%)</title><rect x="389.5" y="787.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.20%)</title><rect x="390.1" y="851.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="390.4" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="393.4" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="390.4" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="393.4" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="390.4" y="803.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="393.4" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="390.4" y="787.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="393.4" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="390.4" y="771.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="393.4" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="390.4" y="755.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="393.4" y="766.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="390.4" y="739.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="393.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.10%)</title><rect x="390.7" y="835.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.10%)</title><rect x="390.7" y="819.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="393.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.05%)</title><rect x="391.9" y="835.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="392.5" y="851.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="395.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="392.5" y="835.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="395.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="392.5" y="819.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="395.5" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="393.1" y="851.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="396.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="393.1" y="835.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (38 samples, 0.95%)</title><rect x="393.7" y="867.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (38 samples, 0.95%)</title><rect x="393.7" y="851.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.7" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.10%)</title><rect x="394.8" y="835.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="397.8" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="394.8" y="819.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="397.8" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="395.1" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="398.1" y="830.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="395.4" y="819.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="398.4" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="395.7" y="819.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="398.7" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="395.7" y="803.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="398.7" y="814.0"></text>
</g>
<g>
<title>__recv (29 samples, 0.73%)</title><rect x="396.0" y="835.0" width="8.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="399.0" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.55%)</title><rect x="398.1" y="819.0" width="6.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="401.1" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.55%)</title><rect x="398.1" y="803.0" width="6.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="401.1" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (21 samples, 0.53%)</title><rect x="398.4" y="787.0" width="6.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="401.4" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (21 samples, 0.53%)</title><rect x="398.4" y="771.0" width="6.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="401.4" y="782.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="398.4" y="755.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="401.4" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (19 samples, 0.48%)</title><rect x="398.7" y="755.0" width="5.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="401.7" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (17 samples, 0.43%)</title><rect x="398.7" y="739.0" width="5.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="401.7" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (17 samples, 0.43%)</title><rect x="398.7" y="723.0" width="5.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="401.7" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.08%)</title><rect x="399.3" y="707.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="402.3" y="718.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.08%)</title><rect x="399.3" y="691.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="402.3" y="702.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="399.3" y="675.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="402.3" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.05%)</title><rect x="399.6" y="675.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="402.6" y="686.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="399.6" y="659.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="402.6" y="670.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="399.9" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="402.9" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (9 samples, 0.23%)</title><rect x="400.2" y="707.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="403.2" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (9 samples, 0.23%)</title><rect x="400.2" y="691.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="403.2" y="702.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="400.5" y="675.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="403.5" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.18%)</title><rect x="400.8" y="675.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="403.8" y="686.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="400.8" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="403.8" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="401.1" y="659.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="404.1" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.10%)</title><rect x="401.4" y="659.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="404.4" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.10%)</title><rect x="401.4" y="643.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="404.4" y="654.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="402.5" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="405.5" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.08%)</title><rect x="402.8" y="707.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="405.8" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.08%)</title><rect x="402.8" y="691.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="405.8" y="702.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.08%)</title><rect x="402.8" y="675.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="405.8" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.05%)</title><rect x="403.7" y="739.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="406.7" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.05%)</title><rect x="403.7" y="723.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="406.7" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.05%)</title><rect x="403.7" y="707.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="406.7" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.05%)</title><rect x="403.7" y="691.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="406.7" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="404.3" y="755.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="407.3" y="766.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="404.3" y="739.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="407.3" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="404.3" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="407.3" y="734.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="404.3" y="707.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="407.3" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="404.6" y="835.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="407.6" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="404.9" y="883.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="407.9" y="894.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="404.9" y="867.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="407.9" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="404.9" y="851.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="407.9" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=18774] (402 samples, 10.09%)</title><rect x="405.2" y="931.0" width="119.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="408.2" y="942.0">[NIO Selector #..</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.03%)</title><rect x="405.2" y="915.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="408.2" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="405.2" y="899.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="408.2" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.03%)</title><rect x="405.2" y="883.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="408.2" y="894.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="405.2" y="867.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="408.2" y="878.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="405.2" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="408.2" y="862.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="405.2" y="835.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="408.2" y="846.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (401 samples, 10.06%)</title><rect x="405.5" y="915.0" width="118.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="408.5" y="926.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (46 samples, 1.15%)</title><rect x="406.7" y="899.0" width="13.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.7" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (46 samples, 1.15%)</title><rect x="406.7" y="883.0" width="13.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="409.7" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="407.3" y="867.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="410.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 1.05%)</title><rect x="407.6" y="867.0" width="12.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="410.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="407.6" y="851.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="410.6" y="862.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="407.6" y="835.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="410.6" y="846.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="407.6" y="819.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="410.6" y="830.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="407.9" y="851.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="410.9" y="862.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="408.2" y="851.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="411.2" y="862.0"></text>
</g>
<g>
<title>epoll_wait (39 samples, 0.98%)</title><rect x="408.5" y="851.0" width="11.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="411.5" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.75%)</title><rect x="411.1" y="835.0" width="8.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="414.1" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.03%)</title><rect x="411.1" y="819.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="414.1" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.73%)</title><rect x="411.4" y="819.0" width="8.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="414.4" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (27 samples, 0.68%)</title><rect x="412.0" y="803.0" width="8.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="415.0" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (27 samples, 0.68%)</title><rect x="412.0" y="787.0" width="8.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="415.0" y="798.0"></text>
</g>
<g>
<title>ep_poll (25 samples, 0.63%)</title><rect x="412.3" y="771.0" width="7.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="415.3" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (21 samples, 0.53%)</title><rect x="412.9" y="755.0" width="6.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="415.9" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (17 samples, 0.43%)</title><rect x="413.8" y="739.0" width="5.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="416.8" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (10 samples, 0.25%)</title><rect x="415.6" y="723.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="418.6" y="734.0"></text>
</g>
<g>
<title>sock_poll (8 samples, 0.20%)</title><rect x="416.2" y="707.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="419.2" y="718.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.08%)</title><rect x="417.6" y="691.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="420.6" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="418.2" y="675.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="421.2" y="686.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="418.5" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="421.5" y="734.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="418.8" y="739.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="421.8" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.05%)</title><rect x="419.1" y="755.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="422.1" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.05%)</title><rect x="419.1" y="739.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="422.1" y="750.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="419.1" y="723.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="422.1" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="419.4" y="707.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="422.4" y="718.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="419.7" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="422.7" y="782.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="419.7" y="755.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="422.7" y="766.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="420.0" y="867.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="423.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (351 samples, 8.81%)</title><rect x="420.3" y="899.0" width="103.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="423.3" y="910.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (348 samples, 8.73%)</title><rect x="421.2" y="883.0" width="103.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="424.2" y="894.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (310 samples, 7.78%)</title><rect x="421.5" y="867.0" width="91.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.5" y="878.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (265 samples, 6.65%)</title><rect x="428.3" y="851.0" width="78.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="431.3" y="862.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (265 samples, 6.65%)</title><rect x="428.3" y="835.0" width="78.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.3" y="846.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (262 samples, 6.57%)</title><rect x="428.3" y="819.0" width="77.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="431.3" y="830.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (161 samples, 4.04%)</title><rect x="428.9" y="803.0" width="47.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="431.9" y="814.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="429.2" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="429.2" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="429.2" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="432.2" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="429.2" y="739.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="432.2" y="750.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="429.2" y="723.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="432.2" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="429.2" y="707.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="432.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (157 samples, 3.94%)</title><rect x="429.5" y="787.0" width="46.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="432.5" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.15%)</title><rect x="429.5" y="771.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.5" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (151 samples, 3.79%)</title><rect x="431.3" y="771.0" width="44.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="434.3" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (151 samples, 3.79%)</title><rect x="431.3" y="755.0" width="44.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.3" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (151 samples, 3.79%)</title><rect x="431.3" y="739.0" width="44.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="434.3" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (151 samples, 3.79%)</title><rect x="431.3" y="723.0" width="44.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.3" y="734.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="431.9" y="707.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="434.9" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="431.9" y="691.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="434.9" y="702.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="432.1" y="707.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="435.1" y="718.0"></text>
</g>
<g>
<title>__send (147 samples, 3.69%)</title><rect x="432.4" y="707.0" width="43.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="435.4" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (136 samples, 3.41%)</title><rect x="435.7" y="691.0" width="40.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="438.7" y="702.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (136 samples, 3.41%)</title><rect x="435.7" y="675.0" width="40.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="438.7" y="686.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (133 samples, 3.34%)</title><rect x="436.6" y="659.0" width="39.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="439.6" y="670.0">__x..</text>
</g>
<g>
<title>__sys_sendto (133 samples, 3.34%)</title><rect x="436.6" y="643.0" width="39.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="439.6" y="654.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (130 samples, 3.26%)</title><rect x="436.6" y="627.0" width="38.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="439.6" y="638.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (129 samples, 3.24%)</title><rect x="436.6" y="611.0" width="38.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="439.6" y="622.0">ine..</text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="436.6" y="595.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="439.6" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (127 samples, 3.19%)</title><rect x="437.2" y="595.0" width="37.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="440.2" y="606.0">tcp..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="437.5" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="440.5" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.03%)</title><rect x="437.8" y="579.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="440.8" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="438.1" y="579.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="441.1" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (123 samples, 3.09%)</title><rect x="438.4" y="579.0" width="36.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="441.4" y="590.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.05%)</title><rect x="439.3" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="442.3" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="439.3" y="547.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="442.3" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.03%)</title><rect x="439.5" y="547.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="442.5" y="558.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.05%)</title><rect x="439.8" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="442.8" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.05%)</title><rect x="439.8" y="547.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="442.8" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.08%)</title><rect x="440.4" y="563.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="443.4" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.08%)</title><rect x="440.4" y="547.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="443.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (3 samples, 0.08%)</title><rect x="440.4" y="531.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="443.4" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.08%)</title><rect x="440.4" y="515.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="443.4" y="526.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.05%)</title><rect x="441.3" y="563.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="444.3" y="574.0"></text>
</g>
<g>
<title>tcp_push (108 samples, 2.71%)</title><rect x="441.9" y="563.0" width="32.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="444.9" y="574.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (108 samples, 2.71%)</title><rect x="441.9" y="547.0" width="32.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="444.9" y="558.0">__..</text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.03%)</title><rect x="441.9" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="444.9" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (107 samples, 2.68%)</title><rect x="442.2" y="531.0" width="31.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="445.2" y="542.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (95 samples, 2.38%)</title><rect x="442.8" y="515.0" width="28.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="445.8" y="526.0">__..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="443.4" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="446.4" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (90 samples, 2.26%)</title><rect x="443.7" y="499.0" width="26.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="446.7" y="510.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (89 samples, 2.23%)</title><rect x="443.7" y="483.0" width="26.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="446.7" y="494.0">_..</text>
</g>
<g>
<title>ip_local_out (85 samples, 2.13%)</title><rect x="443.7" y="467.0" width="25.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="446.7" y="478.0">i..</text>
</g>
<g>
<title>ip_output (85 samples, 2.13%)</title><rect x="443.7" y="451.0" width="25.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="446.7" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output (77 samples, 1.93%)</title><rect x="444.3" y="435.0" width="22.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="447.3" y="446.0">i..</text>
</g>
<g>
<title>__ip_finish_output (76 samples, 1.91%)</title><rect x="444.6" y="419.0" width="22.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="447.6" y="430.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (75 samples, 1.88%)</title><rect x="444.6" y="403.0" width="22.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="447.6" y="414.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (65 samples, 1.63%)</title><rect x="445.5" y="387.0" width="19.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="448.5" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (65 samples, 1.63%)</title><rect x="445.5" y="371.0" width="19.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="448.5" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (64 samples, 1.61%)</title><rect x="445.8" y="355.0" width="18.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="448.8" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (64 samples, 1.61%)</title><rect x="445.8" y="339.0" width="18.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="448.8" y="350.0"></text>
</g>
<g>
<title>net_rx_action (62 samples, 1.56%)</title><rect x="446.4" y="323.0" width="18.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="449.4" y="334.0"></text>
</g>
<g>
<title>process_backlog (61 samples, 1.53%)</title><rect x="446.7" y="307.0" width="18.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="449.7" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (61 samples, 1.53%)</title><rect x="446.7" y="291.0" width="18.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="449.7" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (61 samples, 1.53%)</title><rect x="446.7" y="275.0" width="18.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="449.7" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.10%)</title><rect x="446.7" y="259.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="449.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv (57 samples, 1.43%)</title><rect x="447.8" y="259.0" width="16.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="450.8" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.03%)</title><rect x="447.8" y="243.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="450.8" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (56 samples, 1.40%)</title><rect x="448.1" y="243.0" width="16.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="451.1" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (56 samples, 1.40%)</title><rect x="448.1" y="227.0" width="16.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="451.1" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (56 samples, 1.40%)</title><rect x="448.1" y="211.0" width="16.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="451.1" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (56 samples, 1.40%)</title><rect x="448.1" y="195.0" width="16.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="451.1" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (54 samples, 1.35%)</title><rect x="448.7" y="179.0" width="16.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="451.7" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="449.6" y="163.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="452.6" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.15%)</title><rect x="449.9" y="163.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="452.9" y="174.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.44 (1 samples, 0.03%)</title><rect x="451.7" y="163.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="454.7" y="174.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="452.0" y="163.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="455.0" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 0.20%)</title><rect x="452.6" y="163.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="455.6" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="452.6" y="147.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="455.6" y="158.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.03%)</title><rect x="452.9" y="147.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="455.9" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.10%)</title><rect x="453.2" y="147.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="456.2" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (4 samples, 0.10%)</title><rect x="453.2" y="131.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="456.2" y="142.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (1 samples, 0.03%)</title><rect x="453.2" y="115.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="456.2" y="126.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (3 samples, 0.08%)</title><rect x="453.5" y="115.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="456.5" y="126.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="453.8" y="99.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="456.8" y="110.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (1 samples, 0.03%)</title><rect x="454.1" y="99.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="457.1" y="110.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="454.1" y="83.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="457.1" y="94.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.05%)</title><rect x="454.4" y="147.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="457.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (33 samples, 0.83%)</title><rect x="454.9" y="163.0" width="9.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="457.9" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (33 samples, 0.83%)</title><rect x="454.9" y="147.0" width="9.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="457.9" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.05%)</title><rect x="455.2" y="131.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="458.2" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.03%)</title><rect x="455.5" y="115.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="458.5" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="455.5" y="99.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="458.5" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.15%)</title><rect x="455.8" y="131.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="458.8" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.15%)</title><rect x="455.8" y="115.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="458.8" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.15%)</title><rect x="455.8" y="99.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="458.8" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.15%)</title><rect x="455.8" y="83.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="458.8" y="94.0"></text>
</g>
<g>
<title>tcp_ack (17 samples, 0.43%)</title><rect x="457.6" y="131.0" width="5.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="460.6" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.13%)</title><rect x="459.4" y="115.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="462.4" y="126.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.13%)</title><rect x="459.4" y="99.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="462.4" y="110.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.13%)</title><rect x="459.4" y="83.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="462.4" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.03%)</title><rect x="460.6" y="67.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="463.6" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="460.6" y="51.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="463.6" y="62.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="460.9" y="115.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="463.9" y="126.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="461.2" y="115.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="464.2" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (1 samples, 0.03%)</title><rect x="461.5" y="115.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="464.5" y="126.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="461.8" y="115.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="464.8" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.03%)</title><rect x="462.0" y="115.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="465.0" y="126.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="462.3" y="115.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="465.3" y="126.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="462.6" y="131.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="465.6" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="462.9" y="131.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="465.9" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.08%)</title><rect x="463.2" y="131.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="466.2" y="142.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.08%)</title><rect x="463.2" y="115.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="466.2" y="126.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.08%)</title><rect x="463.2" y="99.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="466.2" y="110.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.03%)</title><rect x="464.1" y="131.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="467.1" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="464.4" y="131.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="467.4" y="142.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.18%)</title><rect x="464.7" y="387.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="467.7" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.18%)</title><rect x="464.7" y="371.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="467.7" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.08%)</title><rect x="465.0" y="355.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="468.0" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="465.6" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="468.6" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="465.6" y="323.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="468.6" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="465.6" y="307.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="468.6" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="465.9" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="468.9" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="466.2" y="355.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="469.2" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="466.2" y="339.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="469.2" y="350.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.03%)</title><rect x="466.5" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="469.5" y="366.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="466.8" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="469.8" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.13%)</title><rect x="467.1" y="435.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="470.1" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.10%)</title><rect x="467.4" y="419.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="470.4" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (4 samples, 0.10%)</title><rect x="467.4" y="403.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="470.4" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (4 samples, 0.10%)</title><rect x="467.4" y="387.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="470.4" y="398.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="467.4" y="371.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="470.4" y="382.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (3 samples, 0.08%)</title><rect x="467.7" y="371.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="470.7" y="382.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (1 samples, 0.03%)</title><rect x="468.6" y="435.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="471.6" y="446.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.08%)</title><rect x="468.9" y="467.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="471.9" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="469.7" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="472.7" y="478.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.03%)</title><rect x="470.0" y="483.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="473.0" y="494.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="470.3" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="473.3" y="510.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="470.3" y="483.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="473.3" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="470.3" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="473.3" y="478.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.03%)</title><rect x="470.6" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="473.6" y="510.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="470.9" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="473.9" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.13%)</title><rect x="471.2" y="515.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="474.2" y="526.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.05%)</title><rect x="471.8" y="499.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="474.8" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="472.4" y="499.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="475.4" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="472.4" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="475.4" y="494.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="472.4" y="467.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="475.4" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.05%)</title><rect x="472.7" y="515.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="475.7" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="473.3" y="515.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="476.3" y="526.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.34 (1 samples, 0.03%)</title><rect x="473.6" y="515.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="476.6" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.08%)</title><rect x="473.9" y="563.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="476.9" y="574.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="473.9" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="476.9" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.05%)</title><rect x="474.2" y="547.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="477.2" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="474.8" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="477.8" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="474.8" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="477.8" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="474.8" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="477.8" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="474.8" y="563.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="477.8" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.08%)</title><rect x="475.1" y="627.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="478.1" y="638.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="475.1" y="611.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="478.1" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="475.1" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="478.1" y="606.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="475.4" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="478.4" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="475.7" y="611.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="478.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="476.0" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="476.3" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="479.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="476.3" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (10 samples, 0.25%)</title><rect x="476.6" y="803.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="479.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.25%)</title><rect x="476.6" y="787.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="479.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.18%)</title><rect x="477.1" y="771.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (7 samples, 0.18%)</title><rect x="477.1" y="755.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.1" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="479.2" y="771.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="482.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.upsert (89 samples, 2.23%)</title><rect x="479.5" y="803.0" width="26.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="482.5" y="814.0">r..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.10%)</title><rect x="479.5" y="787.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="482.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.10%)</title><rect x="479.5" y="771.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (4 samples, 0.10%)</title><rect x="479.5" y="755.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="482.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (4 samples, 0.10%)</title><rect x="479.5" y="739.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.5" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.10%)</title><rect x="479.5" y="723.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="482.5" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="480.1" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.1" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.03%)</title><rect x="480.4" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="483.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (45 samples, 1.13%)</title><rect x="480.7" y="787.0" width="13.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (45 samples, 1.13%)</title><rect x="480.7" y="771.0" width="13.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.10%)</title><rect x="480.7" y="755.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.10%)</title><rect x="480.7" y="739.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="483.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.10%)</title><rect x="480.7" y="723.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.05%)</title><rect x="481.0" y="707.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.0" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.05%)</title><rect x="481.0" y="691.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.03%)</title><rect x="481.3" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.03%)</title><rect x="481.3" y="659.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="484.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="481.6" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.03%)</title><rect x="481.9" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="484.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.03%)</title><rect x="481.9" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="484.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.03%)</title><rect x="481.9" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$91/1753024190.run (40 samples, 1.00%)</title><rect x="482.2" y="755.0" width="11.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (40 samples, 1.00%)</title><rect x="482.2" y="739.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (40 samples, 1.00%)</title><rect x="482.2" y="723.0" width="11.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (37 samples, 0.93%)</title><rect x="482.2" y="707.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="485.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (33 samples, 0.83%)</title><rect x="483.4" y="691.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.08%)</title><rect x="486.9" y="675.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.compareAndSet (3 samples, 0.08%)</title><rect x="486.9" y="659.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (2 samples, 0.05%)</title><rect x="487.8" y="675.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (2 samples, 0.05%)</title><rect x="487.8" y="659.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/Striped64$Cell.cas (1 samples, 0.03%)</title><rect x="488.1" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (1 samples, 0.03%)</title><rect x="488.1" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="488.1" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (3 samples, 0.08%)</title><rect x="488.4" y="675.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="491.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="489.0" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.0" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="489.0" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="492.0" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="489.0" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="492.0" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="489.0" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.0" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="489.0" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="492.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 0.33%)</title><rect x="489.3" y="675.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.25%)</title><rect x="490.2" y="659.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.25%)</title><rect x="490.2" y="643.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.2" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (10 samples, 0.25%)</title><rect x="490.2" y="627.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="493.2" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (10 samples, 0.25%)</title><rect x="490.2" y="611.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.2" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (5 samples, 0.13%)</title><rect x="491.7" y="595.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="494.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (3 samples, 0.08%)</title><rect x="493.1" y="707.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="496.1" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.08%)</title><rect x="493.1" y="691.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.1" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.08%)</title><rect x="493.1" y="675.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.1" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="493.1" y="659.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="493.1" y="643.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="496.1" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="493.1" y="627.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="493.1" y="611.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.1" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="493.1" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.03%)</title><rect x="493.4" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="496.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="493.7" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.7" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="493.7" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="496.7" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="493.7" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapArray (2 samples, 0.05%)</title><rect x="494.0" y="787.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="494.0" y="771.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="494.0" y="755.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="494.0" y="739.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="494.0" y="723.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.0" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="494.0" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="497.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.05%)</title><rect x="494.0" y="691.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapString (38 samples, 0.95%)</title><rect x="494.6" y="787.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.33%)</title><rect x="494.6" y="771.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.33%)</title><rect x="494.6" y="755.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="497.6" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.33%)</title><rect x="494.6" y="739.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.33%)</title><rect x="494.6" y="723.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.10%)</title><rect x="497.0" y="707.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="500.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="498.2" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="498.2" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.2" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="498.2" y="675.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.toBytes (25 samples, 0.63%)</title><rect x="498.5" y="771.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (25 samples, 0.63%)</title><rect x="498.5" y="755.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (12 samples, 0.30%)</title><rect x="498.5" y="739.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (11 samples, 0.28%)</title><rect x="498.5" y="723.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (6 samples, 0.15%)</title><rect x="499.9" y="707.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="502.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="501.7" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="504.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.33%)</title><rect x="502.0" y="739.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="505.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (9 samples, 0.23%)</title><rect x="502.0" y="723.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="505.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (4 samples, 0.10%)</title><rect x="503.5" y="707.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.10%)</title><rect x="504.7" y="723.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="507.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="505.6" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.08%)</title><rect x="505.9" y="819.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.9" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.08%)</title><rect x="505.9" y="803.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.08%)</title><rect x="505.9" y="787.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 0.25%)</title><rect x="506.7" y="851.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.08%)</title><rect x="506.7" y="835.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="509.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.08%)</title><rect x="506.7" y="819.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="509.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.08%)</title><rect x="506.7" y="803.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.08%)</title><rect x="506.7" y="787.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.08%)</title><rect x="506.7" y="771.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.13%)</title><rect x="507.6" y="835.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.13%)</title><rect x="507.6" y="819.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="510.6" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="508.8" y="803.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="511.8" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="508.8" y="787.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="511.8" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="508.8" y="771.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="511.8" y="782.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="508.8" y="755.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="511.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.05%)</title><rect x="509.1" y="835.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="512.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.03%)</title><rect x="509.7" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.08%)</title><rect x="510.0" y="851.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.08%)</title><rect x="510.0" y="835.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="513.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.08%)</title><rect x="510.0" y="819.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="513.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.20%)</title><rect x="510.9" y="851.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="513.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.20%)</title><rect x="510.9" y="835.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="513.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (37 samples, 0.93%)</title><rect x="513.3" y="867.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (37 samples, 0.93%)</title><rect x="513.3" y="851.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="516.3" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.10%)</title><rect x="513.3" y="835.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="516.3" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="513.3" y="819.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="516.3" y="830.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="513.9" y="819.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="516.9" y="830.0"></text>
</g>
<g>
<title>__recv (33 samples, 0.83%)</title><rect x="514.4" y="835.0" width="9.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="517.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.60%)</title><rect x="517.1" y="819.0" width="7.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="520.1" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="517.1" y="803.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="520.1" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.58%)</title><rect x="517.4" y="803.0" width="6.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="520.4" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (18 samples, 0.45%)</title><rect x="518.9" y="787.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="521.9" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (17 samples, 0.43%)</title><rect x="518.9" y="771.0" width="5.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="521.9" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (15 samples, 0.38%)</title><rect x="519.2" y="755.0" width="4.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="522.2" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (11 samples, 0.28%)</title><rect x="519.5" y="739.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="522.5" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (10 samples, 0.25%)</title><rect x="519.8" y="723.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="522.8" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.05%)</title><rect x="520.7" y="707.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="523.7" y="718.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.05%)</title><rect x="520.7" y="691.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="523.7" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.05%)</title><rect x="520.7" y="675.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="523.7" y="686.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="520.7" y="659.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="523.7" y="670.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.05%)</title><rect x="521.3" y="707.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="524.3" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="521.6" y="691.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="524.6" y="702.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="521.8" y="707.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="524.8" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="521.8" y="691.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="524.8" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.05%)</title><rect x="522.1" y="707.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="525.1" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.03%)</title><rect x="522.1" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="525.1" y="702.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="522.1" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="525.1" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.03%)</title><rect x="522.4" y="691.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="525.4" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.05%)</title><rect x="522.7" y="739.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="525.7" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.03%)</title><rect x="522.7" y="723.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="525.7" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="522.7" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="525.7" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="522.7" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="525.7" y="702.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (1 samples, 0.03%)</title><rect x="523.0" y="723.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="526.0" y="734.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.03%)</title><rect x="523.0" y="707.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="526.0" y="718.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (1 samples, 0.03%)</title><rect x="523.3" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="526.3" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="523.6" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="526.6" y="766.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="523.6" y="739.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="526.6" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="523.6" y="723.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="526.6" y="734.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="523.6" y="707.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="526.6" y="718.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="523.9" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="526.9" y="782.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=18775] (441 samples, 11.06%)</title><rect x="524.2" y="931.0" width="130.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="527.2" y="942.0">[NIO Selector #4..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (441 samples, 11.06%)</title><rect x="524.2" y="915.0" width="130.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.2" y="926.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (52 samples, 1.30%)</title><rect x="524.2" y="899.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (51 samples, 1.28%)</title><rect x="524.5" y="883.0" width="15.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 1.15%)</title><rect x="525.4" y="867.0" width="13.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="528.4" y="878.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="525.4" y="851.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="528.4" y="862.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="525.7" y="851.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="528.7" y="862.0"></text>
</g>
<g>
<title>epoll_wait (44 samples, 1.10%)</title><rect x="526.0" y="851.0" width="13.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="529.0" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.85%)</title><rect x="529.0" y="835.0" width="10.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="532.0" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.03%)</title><rect x="529.0" y="819.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="532.0" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.83%)</title><rect x="529.2" y="819.0" width="9.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="532.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (29 samples, 0.73%)</title><rect x="530.4" y="803.0" width="8.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="533.4" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (29 samples, 0.73%)</title><rect x="530.4" y="787.0" width="8.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="533.4" y="798.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="530.4" y="771.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="533.4" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="530.4" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="533.4" y="766.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="530.4" y="739.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="533.4" y="750.0"></text>
</g>
<g>
<title>ep_poll (26 samples, 0.65%)</title><rect x="530.7" y="771.0" width="7.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="533.7" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (21 samples, 0.53%)</title><rect x="531.3" y="755.0" width="6.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="534.3" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (18 samples, 0.45%)</title><rect x="532.2" y="739.0" width="5.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="535.2" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (14 samples, 0.35%)</title><rect x="533.4" y="723.0" width="4.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="536.4" y="734.0"></text>
</g>
<g>
<title>sock_poll (11 samples, 0.28%)</title><rect x="534.3" y="707.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="537.3" y="718.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="536.9" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="539.9" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="537.2" y="691.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="540.2" y="702.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.05%)</title><rect x="537.5" y="755.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="540.5" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.03%)</title><rect x="538.1" y="755.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="541.1" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.03%)</title><rect x="538.1" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="541.1" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="538.1" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="541.1" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="538.1" y="707.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="541.1" y="718.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.03%)</title><rect x="538.4" y="771.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="541.4" y="782.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="538.7" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="541.7" y="782.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="538.7" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="541.7" y="766.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="539.0" y="867.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="542.0" y="878.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.03%)</title><rect x="539.3" y="867.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="542.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (389 samples, 9.76%)</title><rect x="539.6" y="899.0" width="115.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="542.6" y="910.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (387 samples, 9.71%)</title><rect x="540.2" y="883.0" width="114.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.2" y="894.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (347 samples, 8.71%)</title><rect x="540.2" y="867.0" width="102.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.2" y="878.0">one/nio/http..</text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="547.0" y="851.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="550.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (305 samples, 7.65%)</title><rect x="547.3" y="851.0" width="90.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="550.3" y="862.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (305 samples, 7.65%)</title><rect x="547.3" y="835.0" width="90.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="550.3" y="846.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (299 samples, 7.50%)</title><rect x="547.3" y="819.0" width="88.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="550.3" y="830.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (196 samples, 4.92%)</title><rect x="547.6" y="803.0" width="58.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="550.6" y="814.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.05%)</title><rect x="547.9" y="787.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="547.9" y="771.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="547.9" y="755.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="550.9" y="766.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="548.2" y="739.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="551.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (192 samples, 4.82%)</title><rect x="548.5" y="787.0" width="56.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="551.5" y="798.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.20%)</title><rect x="548.5" y="771.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="551.5" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (184 samples, 4.62%)</title><rect x="550.9" y="771.0" width="54.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.9" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (184 samples, 4.62%)</title><rect x="550.9" y="755.0" width="54.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.9" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (184 samples, 4.62%)</title><rect x="550.9" y="739.0" width="54.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.9" y="750.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (183 samples, 4.59%)</title><rect x="551.2" y="723.0" width="54.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.2" y="734.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="551.2" y="707.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="554.2" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="551.2" y="691.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="554.2" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="551.2" y="675.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="554.2" y="686.0"></text>
</g>
<g>
<title>__send (182 samples, 4.57%)</title><rect x="551.5" y="707.0" width="53.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="554.5" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (165 samples, 4.14%)</title><rect x="556.5" y="691.0" width="48.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="559.5" y="702.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (165 samples, 4.14%)</title><rect x="556.5" y="675.0" width="48.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="559.5" y="686.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (163 samples, 4.09%)</title><rect x="557.1" y="659.0" width="48.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="560.1" y="670.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (163 samples, 4.09%)</title><rect x="557.1" y="643.0" width="48.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="560.1" y="654.0">__sy..</text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.03%)</title><rect x="557.4" y="627.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="560.4" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (159 samples, 3.99%)</title><rect x="557.7" y="627.0" width="47.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="560.7" y="638.0">sock..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="557.7" y="611.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="560.7" y="622.0"></text>
</g>
<g>
<title>inet6_sendmsg (154 samples, 3.86%)</title><rect x="558.0" y="611.0" width="45.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="561.0" y="622.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (153 samples, 3.84%)</title><rect x="558.3" y="595.0" width="45.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="561.3" y="606.0">tcp_..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="558.3" y="579.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="561.3" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="558.3" y="563.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="561.3" y="574.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="558.6" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="561.6" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="558.6" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="561.6" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (151 samples, 3.79%)</title><rect x="558.9" y="579.0" width="44.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="561.9" y="590.0">tcp_..</text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.03%)</title><rect x="559.4" y="563.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="562.4" y="574.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="559.7" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="562.7" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="560.0" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="563.0" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="560.3" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="563.3" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="560.3" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="563.3" y="558.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="560.6" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="563.6" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.23%)</title><rect x="560.9" y="563.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="563.9" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.18%)</title><rect x="561.2" y="547.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="564.2" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (1 samples, 0.03%)</title><rect x="561.2" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="564.2" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="561.2" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="564.2" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.13%)</title><rect x="561.5" y="531.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="564.5" y="542.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="563.0" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="566.0" y="542.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.03%)</title><rect x="563.0" y="515.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="566.0" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="563.3" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="566.3" y="558.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="563.6" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="566.6" y="574.0"></text>
</g>
<g>
<title>tcp_push (130 samples, 3.26%)</title><rect x="563.9" y="563.0" width="38.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="566.9" y="574.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (130 samples, 3.26%)</title><rect x="563.9" y="547.0" width="38.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="566.9" y="558.0">__t..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="563.9" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="566.9" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (129 samples, 3.24%)</title><rect x="564.2" y="531.0" width="38.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="567.2" y="542.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (117 samples, 2.94%)</title><rect x="565.1" y="515.0" width="34.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="568.1" y="526.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (104 samples, 2.61%)</title><rect x="567.4" y="499.0" width="30.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="570.4" y="510.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (104 samples, 2.61%)</title><rect x="567.4" y="483.0" width="30.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="570.4" y="494.0">__..</text>
</g>
<g>
<title>ip_local_out (101 samples, 2.53%)</title><rect x="567.7" y="467.0" width="29.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="570.7" y="478.0">ip..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.05%)</title><rect x="567.7" y="451.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="570.7" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="567.7" y="435.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="570.7" y="446.0"></text>
</g>
<g>
<title>netlbl_enabled (1 samples, 0.03%)</title><rect x="567.7" y="419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="570.7" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_output (1 samples, 0.03%)</title><rect x="568.0" y="435.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="571.0" y="446.0"></text>
</g>
<g>
<title>ip_output (99 samples, 2.48%)</title><rect x="568.3" y="451.0" width="29.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="571.3" y="462.0">ip..</text>
</g>
<g>
<title>ip_finish_output (97 samples, 2.43%)</title><rect x="568.3" y="435.0" width="28.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="571.3" y="446.0">ip..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="568.3" y="419.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="571.3" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (95 samples, 2.38%)</title><rect x="568.9" y="419.0" width="28.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="571.9" y="430.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (95 samples, 2.38%)</title><rect x="568.9" y="403.0" width="28.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="571.9" y="414.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (83 samples, 2.08%)</title><rect x="569.8" y="387.0" width="24.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="572.8" y="398.0">_..</text>
</g>
<g>
<title>do_softirq.part.20 (83 samples, 2.08%)</title><rect x="569.8" y="371.0" width="24.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="572.8" y="382.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (82 samples, 2.06%)</title><rect x="570.1" y="355.0" width="24.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="573.1" y="366.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (81 samples, 2.03%)</title><rect x="570.1" y="339.0" width="24.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="573.1" y="350.0">_..</text>
</g>
<g>
<title>net_rx_action (76 samples, 1.91%)</title><rect x="571.3" y="323.0" width="22.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="574.3" y="334.0">n..</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="571.9" y="307.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="574.9" y="318.0"></text>
</g>
<g>
<title>process_backlog (73 samples, 1.83%)</title><rect x="572.2" y="307.0" width="21.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="575.2" y="318.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (69 samples, 1.73%)</title><rect x="573.4" y="291.0" width="20.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="576.4" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (69 samples, 1.73%)</title><rect x="573.4" y="275.0" width="20.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="576.4" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.10%)</title><rect x="573.4" y="259.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="576.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv (65 samples, 1.63%)</title><rect x="574.5" y="259.0" width="19.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="577.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (65 samples, 1.63%)</title><rect x="574.5" y="243.0" width="19.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="577.5" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (64 samples, 1.61%)</title><rect x="574.5" y="227.0" width="19.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="577.5" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (63 samples, 1.58%)</title><rect x="574.8" y="211.0" width="18.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="577.8" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (61 samples, 1.53%)</title><rect x="575.1" y="195.0" width="18.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="578.1" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (60 samples, 1.51%)</title><rect x="575.4" y="179.0" width="17.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="578.4" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.18%)</title><rect x="576.0" y="163.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="579.0" y="174.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="578.1" y="163.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="581.1" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (11 samples, 0.28%)</title><rect x="578.4" y="163.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="581.4" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="578.7" y="147.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="581.7" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (7 samples, 0.18%)</title><rect x="579.3" y="147.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="582.3" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (7 samples, 0.18%)</title><rect x="579.3" y="131.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="582.3" y="142.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (2 samples, 0.05%)</title><rect x="579.3" y="115.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="582.3" y="126.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (2 samples, 0.05%)</title><rect x="579.9" y="115.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="582.9" y="126.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (2 samples, 0.05%)</title><rect x="580.5" y="115.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="583.5" y="126.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="580.5" y="99.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="583.5" y="110.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (1 samples, 0.03%)</title><rect x="580.8" y="99.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="583.8" y="110.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (1 samples, 0.03%)</title><rect x="581.1" y="115.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="584.1" y="126.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (1 samples, 0.03%)</title><rect x="581.3" y="147.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="584.3" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (39 samples, 0.98%)</title><rect x="581.6" y="163.0" width="11.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="584.6" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (38 samples, 0.95%)</title><rect x="581.9" y="147.0" width="11.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="584.9" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.08%)</title><rect x="582.2" y="131.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="585.2" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.05%)</title><rect x="582.5" y="115.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="585.5" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="582.5" y="99.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="585.5" y="110.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="582.5" y="83.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="585.5" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="582.8" y="67.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="585.8" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="583.1" y="131.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="586.1" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (10 samples, 0.25%)</title><rect x="583.4" y="131.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="586.4" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 0.25%)</title><rect x="583.4" y="115.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="586.4" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.25%)</title><rect x="583.4" y="99.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="586.4" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.25%)</title><rect x="583.4" y="83.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="586.4" y="94.0"></text>
</g>
<g>
<title>tcp_ack (21 samples, 0.53%)</title><rect x="586.4" y="131.0" width="6.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="589.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.23%)</title><rect x="588.5" y="115.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="591.5" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="588.5" y="99.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="591.5" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="588.5" y="83.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="591.5" y="94.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.20%)</title><rect x="588.8" y="99.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="591.8" y="110.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.18%)</title><rect x="588.8" y="83.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="591.8" y="94.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="589.6" y="67.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="592.6" y="78.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.08%)</title><rect x="589.9" y="67.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="592.9" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="589.9" y="51.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="592.9" y="62.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.05%)</title><rect x="590.2" y="51.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="593.2" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="590.2" y="35.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="593.2" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="590.8" y="83.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="593.8" y="94.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="591.1" y="115.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="594.1" y="126.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="591.4" y="115.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="594.4" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (1 samples, 0.03%)</title><rect x="591.7" y="115.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="594.7" y="126.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.05%)</title><rect x="592.0" y="115.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="595.0" y="126.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="592.6" y="131.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="595.6" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="592.9" y="131.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="595.9" y="142.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.03%)</title><rect x="593.2" y="195.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="596.2" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.03%)</title><rect x="593.5" y="227.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="596.5" y="238.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="593.8" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="596.8" y="334.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="594.1" y="339.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="597.1" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.23%)</title><rect x="594.4" y="387.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="597.4" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.20%)</title><rect x="594.4" y="371.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="597.4" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.08%)</title><rect x="595.3" y="355.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="598.3" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.08%)</title><rect x="595.3" y="339.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="598.3" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="595.3" y="323.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="598.3" y="334.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.05%)</title><rect x="595.6" y="323.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="598.6" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.05%)</title><rect x="595.6" y="307.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="598.6" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.05%)</title><rect x="595.6" y="291.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="598.6" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.05%)</title><rect x="596.2" y="355.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="599.2" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.03%)</title><rect x="596.7" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="599.7" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.05%)</title><rect x="597.0" y="435.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="600.0" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (2 samples, 0.05%)</title><rect x="597.0" y="419.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="600.0" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.05%)</title><rect x="597.0" y="403.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="600.0" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (2 samples, 0.05%)</title><rect x="597.0" y="387.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="600.0" y="398.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="597.0" y="371.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="600.0" y="382.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (1 samples, 0.03%)</title><rect x="597.3" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="600.3" y="382.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="597.3" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="600.3" y="366.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="597.6" y="467.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="600.6" y="478.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="598.2" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="601.2" y="510.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.05%)</title><rect x="598.5" y="499.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="601.5" y="510.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.03%)</title><rect x="599.1" y="499.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="602.1" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="599.4" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="602.4" y="510.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.03%)</title><rect x="599.4" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="602.4" y="494.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.03%)</title><rect x="599.7" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="602.7" y="526.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="600.0" y="515.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="603.0" y="526.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="600.3" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="603.3" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="600.6" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="603.6" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.08%)</title><rect x="600.9" y="515.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="603.9" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.08%)</title><rect x="600.9" y="499.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="603.9" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.08%)</title><rect x="600.9" y="483.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="603.9" y="494.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.08%)</title><rect x="600.9" y="467.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="603.9" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="601.5" y="451.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="604.5" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.05%)</title><rect x="601.8" y="515.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="604.8" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="602.1" y="499.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="605.1" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="602.1" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="605.1" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.10%)</title><rect x="602.4" y="563.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="605.4" y="574.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="602.4" y="547.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="605.4" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="602.7" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="605.7" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.05%)</title><rect x="603.0" y="547.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="606.0" y="558.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="603.3" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="606.3" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.10%)</title><rect x="603.6" y="611.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="606.6" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.08%)</title><rect x="603.6" y="595.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="606.6" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.08%)</title><rect x="603.6" y="579.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="606.6" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.05%)</title><rect x="603.8" y="563.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="606.8" y="574.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (1 samples, 0.03%)</title><rect x="604.4" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="607.4" y="606.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.03%)</title><rect x="604.4" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="607.4" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="604.7" y="627.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="607.7" y="638.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="604.7" y="611.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="607.7" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="604.7" y="595.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="607.7" y="606.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="604.7" y="579.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="607.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="605.3" y="787.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (16 samples, 0.40%)</title><rect x="605.6" y="803.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (16 samples, 0.40%)</title><rect x="605.6" y="787.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="608.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.23%)</title><rect x="606.5" y="771.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.23%)</title><rect x="606.5" y="755.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.5" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="608.9" y="739.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="611.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.10%)</title><rect x="609.2" y="771.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="612.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.08%)</title><rect x="609.5" y="755.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.08%)</title><rect x="609.5" y="739.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.08%)</title><rect x="609.5" y="723.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (1 samples, 0.03%)</title><rect x="610.4" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="613.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.upsert (85 samples, 2.13%)</title><rect x="610.7" y="803.0" width="25.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="613.7" y="814.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (57 samples, 1.43%)</title><rect x="610.7" y="787.0" width="16.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (57 samples, 1.43%)</title><rect x="610.7" y="771.0" width="16.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="613.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.10%)</title><rect x="610.7" y="755.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.10%)</title><rect x="610.7" y="739.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="613.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.10%)</title><rect x="610.7" y="723.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="613.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.03%)</title><rect x="611.2" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="614.2" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.03%)</title><rect x="611.2" y="691.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="611.5" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="611.5" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="614.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (3 samples, 0.08%)</title><rect x="611.8" y="755.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (3 samples, 0.08%)</title><rect x="611.8" y="739.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (3 samples, 0.08%)</title><rect x="611.8" y="723.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$91/1753024190.run (50 samples, 1.25%)</title><rect x="612.7" y="755.0" width="14.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (50 samples, 1.25%)</title><rect x="612.7" y="739.0" width="14.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="615.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (50 samples, 1.25%)</title><rect x="612.7" y="723.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="615.7" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="612.7" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="615.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (48 samples, 1.20%)</title><rect x="613.0" y="707.0" width="14.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (47 samples, 1.18%)</title><rect x="613.3" y="691.0" width="13.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="617.5" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="617.5" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (4 samples, 0.10%)</title><rect x="617.8" y="675.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.05%)</title><rect x="617.8" y="659.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.05%)</title><rect x="617.8" y="643.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.03%)</title><rect x="618.1" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.03%)</title><rect x="618.1" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.05%)</title><rect x="618.4" y="659.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.05%)</title><rect x="618.4" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="621.4" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.05%)</title><rect x="618.4" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="621.4" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.05%)</title><rect x="618.4" y="611.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="621.4" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.05%)</title><rect x="618.4" y="595.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.4" y="606.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.03%)</title><rect x="618.7" y="579.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="621.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (28 samples, 0.70%)</title><rect x="618.9" y="675.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="621.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (28 samples, 0.70%)</title><rect x="618.9" y="659.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (28 samples, 0.70%)</title><rect x="618.9" y="643.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="621.9" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.15%)</title><rect x="618.9" y="627.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="621.9" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (22 samples, 0.55%)</title><rect x="620.7" y="627.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.7" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (22 samples, 0.55%)</title><rect x="620.7" y="611.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.7" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (10 samples, 0.25%)</title><rect x="624.3" y="595.0" width="2.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="627.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (1 samples, 0.03%)</title><rect x="627.2" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="630.2" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="627.2" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.2" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="627.2" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="630.2" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="627.2" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="627.2" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="630.2" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="627.2" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="627.2" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="627.2" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="630.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapString (28 samples, 0.70%)</title><rect x="627.5" y="787.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="630.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.20%)</title><rect x="627.5" y="771.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.20%)</title><rect x="627.5" y="755.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.20%)</title><rect x="627.5" y="739.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.20%)</title><rect x="627.5" y="723.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="629.3" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.3" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="629.6" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="629.6" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.toBytes (20 samples, 0.50%)</title><rect x="629.9" y="771.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (20 samples, 0.50%)</title><rect x="629.9" y="755.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (13 samples, 0.33%)</title><rect x="629.9" y="739.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (11 samples, 0.28%)</title><rect x="629.9" y="723.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (5 samples, 0.13%)</title><rect x="631.7" y="707.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="634.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.05%)</title><rect x="633.2" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="636.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.18%)</title><rect x="633.7" y="739.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.08%)</title><rect x="633.7" y="723.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.10%)</title><rect x="634.6" y="723.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="637.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="635.5" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.15%)</title><rect x="635.8" y="819.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.8" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.15%)</title><rect x="635.8" y="803.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.8" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.13%)</title><rect x="635.8" y="787.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="637.0" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="637.3" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="637.3" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="637.3" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.20%)</title><rect x="637.6" y="851.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.6" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="637.6" y="835.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="640.6" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="637.6" y="819.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="640.6" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="637.6" y="803.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="640.6" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="637.6" y="787.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="640.6" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="637.6" y="771.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="640.6" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::tlab_alloc_reserve() const (1 samples, 0.03%)</title><rect x="637.6" y="755.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="640.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.18%)</title><rect x="637.9" y="835.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.18%)</title><rect x="637.9" y="819.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.03%)</title><rect x="640.0" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.13%)</title><rect x="640.3" y="851.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.10%)</title><rect x="640.6" y="835.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.10%)</title><rect x="640.6" y="819.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.6" y="830.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.05%)</title><rect x="641.1" y="803.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="644.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.10%)</title><rect x="641.7" y="851.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.10%)</title><rect x="641.7" y="835.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (40 samples, 1.00%)</title><rect x="642.9" y="867.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (40 samples, 1.00%)</title><rect x="642.9" y="851.0" width="11.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.9" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.10%)</title><rect x="643.2" y="835.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="646.2" y="846.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="643.2" y="819.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="646.2" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.08%)</title><rect x="643.5" y="819.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="646.5" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.03%)</title><rect x="644.1" y="803.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="647.1" y="814.0"></text>
</g>
<g>
<title>__recv (34 samples, 0.85%)</title><rect x="644.4" y="835.0" width="10.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="647.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.68%)</title><rect x="646.5" y="819.0" width="8.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="649.5" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="646.5" y="803.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="649.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.65%)</title><rect x="646.8" y="803.0" width="7.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="649.8" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (21 samples, 0.53%)</title><rect x="648.3" y="787.0" width="6.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="651.3" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (21 samples, 0.53%)</title><rect x="648.3" y="771.0" width="6.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="651.3" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (20 samples, 0.50%)</title><rect x="648.5" y="755.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="651.5" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (11 samples, 0.28%)</title><rect x="648.8" y="739.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="651.8" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 0.28%)</title><rect x="648.8" y="723.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="651.8" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.10%)</title><rect x="649.4" y="707.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="652.4" y="718.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="649.4" y="691.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="652.4" y="702.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.05%)</title><rect x="649.7" y="691.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="652.7" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.05%)</title><rect x="649.7" y="675.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="652.7" y="686.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="649.7" y="659.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="652.7" y="670.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="650.3" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="653.3" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.13%)</title><rect x="650.6" y="707.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="653.6" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.10%)</title><rect x="650.6" y="691.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="653.6" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.05%)</title><rect x="651.2" y="675.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="654.2" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.05%)</title><rect x="651.2" y="659.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="654.2" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="651.2" y="643.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="654.2" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.03%)</title><rect x="651.8" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="654.8" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.13%)</title><rect x="652.1" y="739.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="655.1" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.05%)</title><rect x="652.1" y="723.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="655.1" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.05%)</title><rect x="652.1" y="707.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="655.1" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.05%)</title><rect x="652.1" y="691.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="655.1" y="702.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (3 samples, 0.08%)</title><rect x="652.7" y="723.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="655.7" y="734.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.08%)</title><rect x="652.7" y="707.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="655.7" y="718.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (3 samples, 0.08%)</title><rect x="653.6" y="739.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="656.6" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="654.5" y="835.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="657.5" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=18776] (400 samples, 10.04%)</title><rect x="654.8" y="931.0" width="118.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="657.8" y="942.0">[NIO Selector ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (400 samples, 10.04%)</title><rect x="654.8" y="915.0" width="118.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.8" y="926.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (53 samples, 1.33%)</title><rect x="654.8" y="899.0" width="15.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="657.8" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.05%)</title><rect x="654.8" y="883.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.03%)</title><rect x="655.1" y="867.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (51 samples, 1.28%)</title><rect x="655.4" y="883.0" width="15.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 1.25%)</title><rect x="655.7" y="867.0" width="14.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="658.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="655.7" y="851.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="658.7" y="862.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="655.7" y="835.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="658.7" y="846.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="656.0" y="819.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="659.0" y="830.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="656.0" y="803.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="659.0" y="814.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.05%)</title><rect x="656.2" y="851.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="659.2" y="862.0"></text>
</g>
<g>
<title>epoll_wait (46 samples, 1.15%)</title><rect x="656.8" y="851.0" width="13.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="659.8" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.98%)</title><rect x="658.9" y="835.0" width="11.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="661.9" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.03%)</title><rect x="658.9" y="819.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="661.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.95%)</title><rect x="659.2" y="819.0" width="11.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="662.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (37 samples, 0.93%)</title><rect x="659.5" y="803.0" width="11.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="662.5" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (37 samples, 0.93%)</title><rect x="659.5" y="787.0" width="11.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="662.5" y="798.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.08%)</title><rect x="659.5" y="771.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="662.5" y="782.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.08%)</title><rect x="659.5" y="755.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="662.5" y="766.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.08%)</title><rect x="659.5" y="739.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="662.5" y="750.0"></text>
</g>
<g>
<title>ep_poll (33 samples, 0.83%)</title><rect x="660.4" y="771.0" width="9.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="663.4" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (30 samples, 0.75%)</title><rect x="660.7" y="755.0" width="8.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="663.7" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (27 samples, 0.68%)</title><rect x="661.3" y="739.0" width="8.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="664.3" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (20 samples, 0.50%)</title><rect x="663.4" y="723.0" width="5.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="666.4" y="734.0"></text>
</g>
<g>
<title>sock_poll (18 samples, 0.45%)</title><rect x="663.9" y="707.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="666.9" y="718.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.10%)</title><rect x="667.5" y="691.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="670.5" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="668.7" y="691.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="671.7" y="702.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="669.3" y="739.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="672.3" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.03%)</title><rect x="669.6" y="755.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="672.6" y="766.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="669.9" y="755.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="672.9" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.03%)</title><rect x="670.2" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="673.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (347 samples, 8.71%)</title><rect x="670.5" y="899.0" width="102.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.5" y="910.0">one/nio/net/..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="670.8" y="883.0" width="0.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="673.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="670.8" y="867.0" width="0.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="673.8" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="670.8" y="851.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="673.8" y="862.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="671.0" y="883.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="674.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (344 samples, 8.63%)</title><rect x="671.3" y="883.0" width="101.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.3" y="894.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (302 samples, 7.58%)</title><rect x="671.3" y="867.0" width="89.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.3" y="878.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (271 samples, 6.80%)</title><rect x="677.6" y="851.0" width="80.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.6" y="862.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (271 samples, 6.80%)</title><rect x="677.6" y="835.0" width="80.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.6" y="846.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (269 samples, 6.75%)</title><rect x="677.6" y="819.0" width="79.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="680.6" y="830.0">RequestHa..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="677.6" y="803.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="680.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (159 samples, 3.99%)</title><rect x="678.2" y="803.0" width="47.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="681.2" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (154 samples, 3.86%)</title><rect x="678.7" y="787.0" width="45.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.7" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.25%)</title><rect x="678.7" y="771.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (144 samples, 3.61%)</title><rect x="681.7" y="771.0" width="42.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.7" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (144 samples, 3.61%)</title><rect x="681.7" y="755.0" width="42.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.7" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="681.7" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (143 samples, 3.59%)</title><rect x="682.0" y="739.0" width="42.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.0" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (142 samples, 3.56%)</title><rect x="682.3" y="723.0" width="42.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.3" y="734.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.05%)</title><rect x="682.3" y="707.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="685.3" y="718.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="682.3" y="691.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="685.3" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="682.6" y="691.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="685.6" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.03%)</title><rect x="682.6" y="675.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="685.6" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.05%)</title><rect x="682.9" y="707.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="685.9" y="718.0"></text>
</g>
<g>
<title>__send (138 samples, 3.46%)</title><rect x="683.5" y="707.0" width="40.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="686.5" y="718.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (128 samples, 3.21%)</title><rect x="686.4" y="691.0" width="37.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="689.4" y="702.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (128 samples, 3.21%)</title><rect x="686.4" y="675.0" width="37.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="689.4" y="686.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (124 samples, 3.11%)</title><rect x="687.6" y="659.0" width="36.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="690.6" y="670.0">__x..</text>
</g>
<g>
<title>__sys_sendto (124 samples, 3.11%)</title><rect x="687.6" y="643.0" width="36.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="690.6" y="654.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (120 samples, 3.01%)</title><rect x="688.2" y="627.0" width="35.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="691.2" y="638.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (119 samples, 2.99%)</title><rect x="688.2" y="611.0" width="35.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="691.2" y="622.0">ine..</text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="688.2" y="595.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="691.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (118 samples, 2.96%)</title><rect x="688.5" y="595.0" width="34.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="691.5" y="606.0">tc..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="688.5" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="691.5" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="688.8" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="691.8" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="688.8" y="563.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="691.8" y="574.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="689.1" y="579.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="692.1" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="689.1" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="692.1" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (115 samples, 2.89%)</title><rect x="689.4" y="579.0" width="34.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="692.4" y="590.0">tc..</text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.23%)</title><rect x="689.7" y="563.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="692.7" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.20%)</title><rect x="690.0" y="547.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="693.0" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (3 samples, 0.08%)</title><rect x="690.0" y="531.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="693.0" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.05%)</title><rect x="690.3" y="515.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="693.3" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.05%)</title><rect x="690.9" y="531.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="693.9" y="542.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.08%)</title><rect x="691.5" y="531.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="694.5" y="542.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.08%)</title><rect x="691.5" y="515.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="694.5" y="526.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="692.4" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="695.4" y="574.0"></text>
</g>
<g>
<title>tcp_push (101 samples, 2.53%)</title><rect x="692.7" y="563.0" width="29.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="695.7" y="574.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (101 samples, 2.53%)</title><rect x="692.7" y="547.0" width="29.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="695.7" y="558.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (101 samples, 2.53%)</title><rect x="692.7" y="531.0" width="29.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="695.7" y="542.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (92 samples, 2.31%)</title><rect x="694.1" y="515.0" width="27.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="697.1" y="526.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (90 samples, 2.26%)</title><rect x="694.4" y="499.0" width="26.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="697.4" y="510.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (88 samples, 2.21%)</title><rect x="694.4" y="483.0" width="26.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="697.4" y="494.0">_..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.03%)</title><rect x="694.7" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="697.7" y="478.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="695.0" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="698.0" y="478.0"></text>
</g>
<g>
<title>ip_local_out (82 samples, 2.06%)</title><rect x="695.3" y="467.0" width="24.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="698.3" y="478.0">i..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.08%)</title><rect x="695.3" y="451.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="698.3" y="462.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="695.3" y="435.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="698.3" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="695.6" y="435.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="698.6" y="446.0"></text>
</g>
<g>
<title>netlbl_enabled (1 samples, 0.03%)</title><rect x="695.6" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="698.6" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_output (1 samples, 0.03%)</title><rect x="695.9" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="698.9" y="446.0"></text>
</g>
<g>
<title>ip_output (78 samples, 1.96%)</title><rect x="696.2" y="451.0" width="23.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="699.2" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output (73 samples, 1.83%)</title><rect x="696.5" y="435.0" width="21.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="699.5" y="446.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="696.5" y="419.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="699.5" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (72 samples, 1.81%)</title><rect x="696.8" y="419.0" width="21.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="699.8" y="430.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (72 samples, 1.81%)</title><rect x="696.8" y="403.0" width="21.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="699.8" y="414.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (59 samples, 1.48%)</title><rect x="696.8" y="387.0" width="17.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="699.8" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (58 samples, 1.46%)</title><rect x="697.1" y="371.0" width="17.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="700.1" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (57 samples, 1.43%)</title><rect x="697.4" y="355.0" width="16.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="700.4" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (57 samples, 1.43%)</title><rect x="697.4" y="339.0" width="16.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="700.4" y="350.0"></text>
</g>
<g>
<title>net_rx_action (55 samples, 1.38%)</title><rect x="697.7" y="323.0" width="16.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="700.7" y="334.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="698.0" y="307.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="701.0" y="318.0"></text>
</g>
<g>
<title>process_backlog (53 samples, 1.33%)</title><rect x="698.3" y="307.0" width="15.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="701.3" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (51 samples, 1.28%)</title><rect x="698.9" y="291.0" width="15.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="701.9" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="698.9" y="275.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="701.9" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (50 samples, 1.25%)</title><rect x="699.2" y="275.0" width="14.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="702.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv (50 samples, 1.25%)</title><rect x="699.2" y="259.0" width="14.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="702.2" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="699.5" y="243.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="702.5" y="254.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.05%)</title><rect x="699.8" y="243.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="702.8" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (46 samples, 1.15%)</title><rect x="700.4" y="243.0" width="13.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="703.4" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (45 samples, 1.13%)</title><rect x="700.7" y="227.0" width="13.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="703.7" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (45 samples, 1.13%)</title><rect x="700.7" y="211.0" width="13.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="703.7" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (45 samples, 1.13%)</title><rect x="700.7" y="195.0" width="13.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="703.7" y="206.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.03%)</title><rect x="701.2" y="179.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="704.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (42 samples, 1.05%)</title><rect x="701.5" y="179.0" width="12.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="704.5" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.15%)</title><rect x="702.1" y="163.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="705.1" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="703.6" y="147.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="706.6" y="158.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="703.9" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="706.9" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.13%)</title><rect x="704.2" y="163.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="707.2" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="704.2" y="147.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="707.2" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.08%)</title><rect x="704.8" y="147.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="707.8" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.05%)</title><rect x="705.1" y="131.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="708.1" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (27 samples, 0.68%)</title><rect x="705.7" y="163.0" width="8.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="708.7" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="705.7" y="147.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="708.7" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (26 samples, 0.65%)</title><rect x="706.0" y="147.0" width="7.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="709.0" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.08%)</title><rect x="706.0" y="131.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="709.0" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.08%)</title><rect x="706.0" y="115.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="709.0" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="706.3" y="99.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="709.3" y="110.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="706.6" y="83.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="709.6" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="706.6" y="67.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="709.6" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="706.9" y="131.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="709.9" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.08%)</title><rect x="707.2" y="131.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="710.2" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.08%)</title><rect x="707.2" y="115.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="710.2" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.08%)</title><rect x="707.2" y="99.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="710.2" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.08%)</title><rect x="707.2" y="83.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="710.2" y="94.0"></text>
</g>
<g>
<title>tcp_ack (14 samples, 0.35%)</title><rect x="708.1" y="131.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="711.1" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.10%)</title><rect x="708.9" y="115.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="711.9" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.05%)</title><rect x="708.9" y="99.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="711.9" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="708.9" y="83.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="711.9" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="709.2" y="67.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="712.2" y="78.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.05%)</title><rect x="709.5" y="99.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="712.5" y="110.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="709.5" y="83.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="712.5" y="94.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="710.1" y="115.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="713.1" y="126.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="710.4" y="115.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="713.4" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (3 samples, 0.08%)</title><rect x="710.7" y="115.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="713.7" y="126.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="711.6" y="115.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="714.6" y="126.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.03%)</title><rect x="711.9" y="115.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="714.9" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="712.2" y="131.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="715.2" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.05%)</title><rect x="712.5" y="131.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="715.5" y="142.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.03%)</title><rect x="713.1" y="131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="716.1" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="713.4" y="131.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="716.4" y="142.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.03%)</title><rect x="713.7" y="163.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="716.7" y="174.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="714.0" y="323.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="717.0" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (13 samples, 0.33%)</title><rect x="714.3" y="387.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="717.3" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (13 samples, 0.33%)</title><rect x="714.3" y="371.0" width="3.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="717.3" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.20%)</title><rect x="714.6" y="355.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="717.6" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.15%)</title><rect x="714.9" y="339.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="717.9" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.05%)</title><rect x="714.9" y="323.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="717.9" y="334.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.05%)</title><rect x="715.5" y="323.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="718.5" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.05%)</title><rect x="715.5" y="307.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="718.5" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.05%)</title><rect x="715.5" y="291.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="718.5" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.05%)</title><rect x="716.0" y="323.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="719.0" y="334.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.03%)</title><rect x="716.3" y="307.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="719.3" y="318.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="716.6" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="719.6" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="716.9" y="355.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="719.9" y="366.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.03%)</title><rect x="717.2" y="355.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="720.2" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.05%)</title><rect x="717.5" y="355.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="720.5" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="717.8" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="720.8" y="350.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.03%)</title><rect x="717.8" y="323.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="720.8" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.10%)</title><rect x="718.1" y="435.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="721.1" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.10%)</title><rect x="718.1" y="419.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="721.1" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (4 samples, 0.10%)</title><rect x="718.1" y="403.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="721.1" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (4 samples, 0.10%)</title><rect x="718.1" y="387.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="721.1" y="398.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (1 samples, 0.03%)</title><rect x="718.7" y="371.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="721.7" y="382.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (1 samples, 0.03%)</title><rect x="719.0" y="371.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="722.0" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="719.3" y="451.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="722.3" y="462.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="719.6" y="467.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="722.6" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="719.9" y="467.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="722.9" y="478.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.03%)</title><rect x="720.5" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="723.5" y="494.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.03%)</title><rect x="720.8" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="723.8" y="494.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="721.1" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="724.1" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="721.4" y="515.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="724.4" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.08%)</title><rect x="721.7" y="515.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="724.7" y="526.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.03%)</title><rect x="721.7" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="724.7" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.05%)</title><rect x="722.0" y="499.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="725.0" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="722.0" y="483.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="725.0" y="494.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="722.0" y="467.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="725.0" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="722.0" y="451.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="725.0" y="462.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="722.6" y="563.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="725.6" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.05%)</title><rect x="722.9" y="563.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="725.9" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="722.9" y="547.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="725.9" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.03%)</title><rect x="723.2" y="547.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="726.2" y="558.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="723.2" y="531.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="726.2" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="723.4" y="611.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="726.4" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="723.4" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="726.4" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="723.7" y="627.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="726.7" y="638.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="723.7" y="611.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="726.7" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="723.7" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="726.7" y="606.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="723.7" y="579.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="726.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.08%)</title><rect x="724.3" y="787.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="727.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="724.6" y="771.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="724.6" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="727.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (8 samples, 0.20%)</title><rect x="725.2" y="803.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="728.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.20%)</title><rect x="725.2" y="787.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.13%)</title><rect x="725.5" y="771.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="728.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.13%)</title><rect x="725.5" y="755.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.05%)</title><rect x="727.0" y="771.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="727.0" y="755.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="730.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="727.0" y="739.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="730.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="727.0" y="723.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="730.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.upsert (100 samples, 2.51%)</title><rect x="727.6" y="803.0" width="29.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.6" y="814.0">ru..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.08%)</title><rect x="727.6" y="787.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.08%)</title><rect x="727.6" y="771.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (3 samples, 0.08%)</title><rect x="727.6" y="755.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (3 samples, 0.08%)</title><rect x="727.6" y="739.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.6" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.08%)</title><rect x="727.6" y="723.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="730.6" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.05%)</title><rect x="727.6" y="707.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="730.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="728.2" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="731.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (56 samples, 1.40%)</title><rect x="728.5" y="787.0" width="16.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (55 samples, 1.38%)</title><rect x="728.8" y="771.0" width="16.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.08%)</title><rect x="728.8" y="755.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.05%)</title><rect x="729.1" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.05%)</title><rect x="729.1" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="729.4" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.03%)</title><rect x="729.7" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.03%)</title><rect x="729.7" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.03%)</title><rect x="729.7" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="732.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$91/1753024190.run (51 samples, 1.28%)</title><rect x="730.0" y="755.0" width="15.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (51 samples, 1.28%)</title><rect x="730.0" y="739.0" width="15.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (51 samples, 1.28%)</title><rect x="730.0" y="723.0" width="15.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.0" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.05%)</title><rect x="730.0" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (47 samples, 1.18%)</title><rect x="730.6" y="707.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (46 samples, 1.15%)</title><rect x="730.8" y="691.0" width="13.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.8" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.08%)</title><rect x="736.5" y="675.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="739.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.compareAndSet (3 samples, 0.08%)</title><rect x="736.5" y="659.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.03%)</title><rect x="737.4" y="675.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.03%)</title><rect x="737.4" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (3 samples, 0.08%)</title><rect x="737.7" y="675.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="740.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.08%)</title><rect x="737.7" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.08%)</title><rect x="737.7" y="643.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.08%)</title><rect x="737.7" y="627.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.7" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.08%)</title><rect x="737.7" y="611.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="740.7" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.08%)</title><rect x="737.7" y="595.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="740.7" y="606.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.03%)</title><rect x="738.2" y="579.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="741.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (20 samples, 0.50%)</title><rect x="738.5" y="675.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (17 samples, 0.43%)</title><rect x="739.4" y="659.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="742.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (17 samples, 0.43%)</title><rect x="739.4" y="643.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="742.4" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.08%)</title><rect x="739.4" y="627.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.4" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (14 samples, 0.35%)</title><rect x="740.3" y="627.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="743.3" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (14 samples, 0.35%)</title><rect x="740.3" y="611.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.3" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (5 samples, 0.13%)</title><rect x="743.0" y="595.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="746.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (2 samples, 0.05%)</title><rect x="744.5" y="707.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.5" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.05%)</title><rect x="744.5" y="691.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="747.5" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.05%)</title><rect x="744.5" y="675.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="747.5" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="744.5" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.5" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="744.5" y="643.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.5" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="744.5" y="627.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="747.5" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="744.5" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="747.5" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="744.5" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.03%)</title><rect x="744.5" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="747.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="744.8" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.8" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="744.8" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="747.8" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="744.8" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapArray (2 samples, 0.05%)</title><rect x="745.1" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="748.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="745.1" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="748.1" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="745.1" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="748.1" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="745.1" y="739.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="745.1" y="723.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="748.1" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="745.1" y="707.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="748.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="745.1" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.03%)</title><rect x="745.4" y="707.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapString (39 samples, 0.98%)</title><rect x="745.6" y="787.0" width="11.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.33%)</title><rect x="745.6" y="771.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.33%)</title><rect x="745.6" y="755.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="748.6" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.33%)</title><rect x="745.6" y="739.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="748.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.33%)</title><rect x="745.6" y="723.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.10%)</title><rect x="747.4" y="707.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.4" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="748.6" y="707.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="749.2" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.toBytes (26 samples, 0.65%)</title><rect x="749.5" y="771.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (26 samples, 0.65%)</title><rect x="749.5" y="755.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (13 samples, 0.33%)</title><rect x="749.5" y="739.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (11 samples, 0.28%)</title><rect x="749.5" y="723.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="752.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (5 samples, 0.13%)</title><rect x="751.0" y="707.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.03%)</title><rect x="752.5" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="755.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.05%)</title><rect x="752.8" y="723.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.33%)</title><rect x="753.3" y="739.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.13%)</title><rect x="753.3" y="723.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.03%)</title><rect x="754.5" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.20%)</title><rect x="754.8" y="723.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="756.3" y="707.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="756.9" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.05%)</title><rect x="757.2" y="819.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.05%)</title><rect x="757.2" y="803.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.2" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.05%)</title><rect x="757.2" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="760.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.20%)</title><rect x="757.8" y="851.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="757.8" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="760.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="757.8" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="757.8" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="757.8" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="760.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="757.8" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.10%)</title><rect x="758.1" y="835.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.1" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.08%)</title><rect x="758.4" y="819.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="761.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.08%)</title><rect x="759.3" y="835.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="762.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="760.2" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="763.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="760.5" y="835.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (42 samples, 1.05%)</title><rect x="760.7" y="867.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (42 samples, 1.05%)</title><rect x="760.7" y="851.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.7" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.13%)</title><rect x="760.7" y="835.0" width="1.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="763.7" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="760.7" y="819.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="763.7" y="830.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="761.3" y="819.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="764.3" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="761.9" y="819.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="764.9" y="830.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="762.2" y="835.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="765.2" y="846.0"></text>
</g>
<g>
<title>__recv (36 samples, 0.90%)</title><rect x="762.5" y="835.0" width="10.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="765.5" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.75%)</title><rect x="764.3" y="819.0" width="8.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="767.3" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="764.3" y="803.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="767.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.73%)</title><rect x="764.6" y="803.0" width="8.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="767.6" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (22 samples, 0.55%)</title><rect x="766.7" y="787.0" width="6.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="769.7" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (19 samples, 0.48%)</title><rect x="766.7" y="771.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="769.7" y="782.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="767.0" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="770.0" y="766.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.03%)</title><rect x="767.0" y="739.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="770.0" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (17 samples, 0.43%)</title><rect x="767.3" y="755.0" width="5.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="770.3" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (15 samples, 0.38%)</title><rect x="767.3" y="739.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="770.3" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (14 samples, 0.35%)</title><rect x="767.6" y="723.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="770.6" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.05%)</title><rect x="767.9" y="707.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="770.9" y="718.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.05%)</title><rect x="767.9" y="691.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="770.9" y="702.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="767.9" y="675.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="770.9" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="768.1" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="771.1" y="686.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="768.1" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="771.1" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="768.4" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="771.4" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="768.7" y="707.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="771.7" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="768.7" y="691.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="771.7" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.18%)</title><rect x="769.0" y="707.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="772.0" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.18%)</title><rect x="769.0" y="691.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="772.0" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.13%)</title><rect x="769.6" y="675.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="772.6" y="686.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="769.6" y="659.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="772.6" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="770.2" y="659.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="773.2" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.05%)</title><rect x="770.5" y="659.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="773.5" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="770.5" y="643.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="773.5" y="654.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="771.1" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="774.1" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="771.4" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="774.4" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="771.4" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="774.4" y="702.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="771.4" y="675.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="774.4" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.05%)</title><rect x="771.7" y="739.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="774.7" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.03%)</title><rect x="771.7" y="723.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="774.7" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="771.7" y="707.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="774.7" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="771.7" y="691.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="774.7" y="702.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (1 samples, 0.03%)</title><rect x="772.0" y="723.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="775.0" y="734.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.03%)</title><rect x="772.0" y="707.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="775.0" y="718.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="772.3" y="771.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="775.3" y="782.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.05%)</title><rect x="772.6" y="771.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="775.6" y="782.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=18777] (395 samples, 9.91%)</title><rect x="773.2" y="931.0" width="116.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="776.2" y="942.0">[NIO Selector ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (395 samples, 9.91%)</title><rect x="773.2" y="915.0" width="116.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="776.2" y="926.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (46 samples, 1.15%)</title><rect x="773.8" y="899.0" width="13.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.8" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (46 samples, 1.15%)</title><rect x="773.8" y="883.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 1.10%)</title><rect x="774.1" y="867.0" width="13.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="777.1" y="878.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="774.1" y="851.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="777.1" y="862.0"></text>
</g>
<g>
<title>epoll_wait (43 samples, 1.08%)</title><rect x="774.4" y="851.0" width="12.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="777.4" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.90%)</title><rect x="776.4" y="835.0" width="10.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="779.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.90%)</title><rect x="776.4" y="819.0" width="10.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="779.4" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (35 samples, 0.88%)</title><rect x="776.7" y="803.0" width="10.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="779.7" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (35 samples, 0.88%)</title><rect x="776.7" y="787.0" width="10.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="779.7" y="798.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="776.7" y="771.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="779.7" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="776.7" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="779.7" y="766.0"></text>
</g>
<g>
<title>ep_poll (34 samples, 0.85%)</title><rect x="777.0" y="771.0" width="10.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="780.0" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (29 samples, 0.73%)</title><rect x="777.9" y="755.0" width="8.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="780.9" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (19 samples, 0.48%)</title><rect x="780.9" y="739.0" width="5.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="783.9" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (13 samples, 0.33%)</title><rect x="781.8" y="723.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="784.8" y="734.0"></text>
</g>
<g>
<title>sock_poll (12 samples, 0.30%)</title><rect x="782.1" y="707.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="785.1" y="718.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.15%)</title><rect x="783.2" y="691.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="786.2" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="785.0" y="691.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="788.0" y="702.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.08%)</title><rect x="785.6" y="723.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="788.6" y="734.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="786.5" y="755.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="789.5" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.03%)</title><rect x="786.8" y="755.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="789.8" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.03%)</title><rect x="786.8" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="789.8" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="786.8" y="723.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="789.8" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="786.8" y="707.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="789.8" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="786.8" y="691.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="789.8" y="702.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.03%)</title><rect x="787.1" y="867.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="790.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (347 samples, 8.71%)</title><rect x="787.4" y="899.0" width="102.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="790.4" y="910.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (344 samples, 8.63%)</title><rect x="788.0" y="883.0" width="101.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.0" y="894.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (308 samples, 7.73%)</title><rect x="788.0" y="867.0" width="91.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="791.0" y="878.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (284 samples, 7.12%)</title><rect x="790.6" y="851.0" width="84.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="793.6" y="862.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (284 samples, 7.12%)</title><rect x="790.6" y="835.0" width="84.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="793.6" y="846.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (277 samples, 6.95%)</title><rect x="790.6" y="819.0" width="82.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="793.6" y="830.0">RequestHa..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="790.6" y="803.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="793.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (159 samples, 3.99%)</title><rect x="790.9" y="803.0" width="47.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="793.9" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (155 samples, 3.89%)</title><rect x="791.5" y="787.0" width="45.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.5" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.25%)</title><rect x="791.8" y="771.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="794.8" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="794.2" y="755.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="797.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (144 samples, 3.61%)</title><rect x="794.8" y="771.0" width="42.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="797.8" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (144 samples, 3.61%)</title><rect x="794.8" y="755.0" width="42.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="797.8" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (141 samples, 3.54%)</title><rect x="795.7" y="739.0" width="41.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.7" y="750.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (141 samples, 3.54%)</title><rect x="795.7" y="723.0" width="41.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.7" y="734.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.05%)</title><rect x="796.3" y="707.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="799.3" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="796.6" y="691.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="799.6" y="702.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="796.9" y="707.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="799.9" y="718.0"></text>
</g>
<g>
<title>__send (136 samples, 3.41%)</title><rect x="797.2" y="707.0" width="40.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="800.2" y="718.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (124 samples, 3.11%)</title><rect x="800.7" y="691.0" width="36.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="803.7" y="702.0">ent..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.03%)</title><rect x="800.7" y="675.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="803.7" y="686.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="801.0" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="804.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (122 samples, 3.06%)</title><rect x="801.3" y="675.0" width="36.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="804.3" y="686.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (121 samples, 3.04%)</title><rect x="801.6" y="659.0" width="35.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="804.6" y="670.0">__x..</text>
</g>
<g>
<title>__sys_sendto (121 samples, 3.04%)</title><rect x="801.6" y="643.0" width="35.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="804.6" y="654.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (120 samples, 3.01%)</title><rect x="801.6" y="627.0" width="35.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="804.6" y="638.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (114 samples, 2.86%)</title><rect x="801.6" y="611.0" width="33.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="804.6" y="622.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (113 samples, 2.83%)</title><rect x="801.9" y="595.0" width="33.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="804.9" y="606.0">tc..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="801.9" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="804.9" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="802.2" y="579.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="805.2" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (111 samples, 2.78%)</title><rect x="802.5" y="579.0" width="32.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="805.5" y="590.0">tc..</text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.28%)</title><rect x="802.5" y="563.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="805.5" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.25%)</title><rect x="802.5" y="547.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="805.5" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (2 samples, 0.05%)</title><rect x="802.5" y="531.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="805.5" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.05%)</title><rect x="802.5" y="515.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="805.5" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="802.8" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="805.8" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.18%)</title><rect x="803.1" y="531.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="806.1" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.05%)</title><rect x="804.6" y="515.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="807.6" y="526.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="805.2" y="531.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="808.2" y="542.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.03%)</title><rect x="805.2" y="515.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="808.2" y="526.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="805.4" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="808.4" y="558.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="805.7" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="808.7" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.03%)</title><rect x="806.0" y="563.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="809.0" y="574.0"></text>
</g>
<g>
<title>tcp_push (96 samples, 2.41%)</title><rect x="806.3" y="563.0" width="28.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="809.3" y="574.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (95 samples, 2.38%)</title><rect x="806.3" y="547.0" width="28.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="809.3" y="558.0">__..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="806.3" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="809.3" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.03%)</title><rect x="806.6" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="809.6" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (93 samples, 2.33%)</title><rect x="806.9" y="531.0" width="27.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="809.9" y="542.0">t..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="807.5" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="810.5" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (78 samples, 1.96%)</title><rect x="807.8" y="515.0" width="23.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="810.8" y="526.0">_..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="809.6" y="499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="812.6" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (69 samples, 1.73%)</title><rect x="809.9" y="499.0" width="20.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="812.9" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (68 samples, 1.71%)</title><rect x="810.2" y="483.0" width="20.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="813.2" y="494.0"></text>
</g>
<g>
<title>ip_local_out (67 samples, 1.68%)</title><rect x="810.2" y="467.0" width="19.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="813.2" y="478.0"></text>
</g>
<g>
<title>ip_output (65 samples, 1.63%)</title><rect x="810.5" y="451.0" width="19.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="813.5" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (60 samples, 1.51%)</title><rect x="811.1" y="435.0" width="17.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="814.1" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (60 samples, 1.51%)</title><rect x="811.1" y="419.0" width="17.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="814.1" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (60 samples, 1.51%)</title><rect x="811.1" y="403.0" width="17.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="814.1" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (50 samples, 1.25%)</title><rect x="811.4" y="387.0" width="14.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="814.4" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (50 samples, 1.25%)</title><rect x="811.4" y="371.0" width="14.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="814.4" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (50 samples, 1.25%)</title><rect x="811.4" y="355.0" width="14.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="814.4" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (50 samples, 1.25%)</title><rect x="811.4" y="339.0" width="14.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="814.4" y="350.0"></text>
</g>
<g>
<title>net_rx_action (49 samples, 1.23%)</title><rect x="811.7" y="323.0" width="14.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="814.7" y="334.0"></text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.05%)</title><rect x="811.7" y="307.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="814.7" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="812.3" y="307.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="815.3" y="318.0"></text>
</g>
<g>
<title>process_backlog (46 samples, 1.15%)</title><rect x="812.6" y="307.0" width="13.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="815.6" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (46 samples, 1.15%)</title><rect x="812.6" y="291.0" width="13.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="815.6" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (46 samples, 1.15%)</title><rect x="812.6" y="275.0" width="13.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="815.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv (44 samples, 1.10%)</title><rect x="812.8" y="259.0" width="13.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="815.8" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="813.1" y="243.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="816.1" y="254.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.05%)</title><rect x="813.4" y="243.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="816.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (39 samples, 0.98%)</title><rect x="814.0" y="243.0" width="11.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="817.0" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (38 samples, 0.95%)</title><rect x="814.3" y="227.0" width="11.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="817.3" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (37 samples, 0.93%)</title><rect x="814.3" y="211.0" width="11.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="817.3" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (36 samples, 0.90%)</title><rect x="814.3" y="195.0" width="10.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="817.3" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.03%)</title><rect x="814.3" y="179.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="817.3" y="190.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.03%)</title><rect x="814.6" y="179.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="817.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (34 samples, 0.85%)</title><rect x="814.9" y="179.0" width="10.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="817.9" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.08%)</title><rect x="815.5" y="163.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="818.5" y="174.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="816.4" y="163.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="819.4" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.15%)</title><rect x="817.0" y="163.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="820.0" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="817.0" y="147.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="820.0" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (5 samples, 0.13%)</title><rect x="817.3" y="147.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="820.3" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (4 samples, 0.10%)</title><rect x="817.6" y="131.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="820.6" y="142.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (1 samples, 0.03%)</title><rect x="818.2" y="115.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="821.2" y="126.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (1 samples, 0.03%)</title><rect x="818.5" y="115.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="821.5" y="126.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (1 samples, 0.03%)</title><rect x="818.5" y="99.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="821.5" y="110.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.03%)</title><rect x="818.8" y="163.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="821.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (20 samples, 0.50%)</title><rect x="819.1" y="163.0" width="5.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="822.1" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (20 samples, 0.50%)</title><rect x="819.1" y="147.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="822.1" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.03%)</title><rect x="819.4" y="131.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="822.4" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.03%)</title><rect x="819.4" y="115.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="822.4" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="819.4" y="99.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="822.4" y="110.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="819.4" y="83.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="822.4" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="819.4" y="67.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="822.4" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.13%)</title><rect x="819.7" y="131.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="822.7" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.13%)</title><rect x="819.7" y="115.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="822.7" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.13%)</title><rect x="819.7" y="99.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="822.7" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.13%)</title><rect x="819.7" y="83.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="822.7" y="94.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.25%)</title><rect x="821.1" y="131.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="824.1" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.10%)</title><rect x="822.3" y="115.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="825.3" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="822.3" y="99.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="825.3" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="822.3" y="83.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="825.3" y="94.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.08%)</title><rect x="822.6" y="99.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="825.6" y="110.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.08%)</title><rect x="822.6" y="83.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="825.6" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.05%)</title><rect x="822.9" y="67.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="825.9" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.05%)</title><rect x="822.9" y="51.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="825.9" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="822.9" y="35.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="825.9" y="46.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.03%)</title><rect x="823.5" y="115.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="826.5" y="126.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.03%)</title><rect x="823.8" y="115.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="826.8" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="824.1" y="131.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="827.1" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="824.4" y="131.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="827.4" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="824.7" y="131.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="827.7" y="142.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.03%)</title><rect x="825.0" y="195.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="828.0" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="825.3" y="211.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="828.3" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.03%)</title><rect x="825.6" y="243.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="828.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="825.9" y="259.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="828.9" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (8 samples, 0.20%)</title><rect x="826.2" y="387.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="829.2" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.20%)</title><rect x="826.2" y="371.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="829.2" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.13%)</title><rect x="826.5" y="355.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="829.5" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.10%)</title><rect x="826.5" y="339.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="829.5" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="826.8" y="323.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="829.8" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="826.8" y="307.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="829.8" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.03%)</title><rect x="826.8" y="291.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="829.8" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.05%)</title><rect x="827.1" y="323.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="830.1" y="334.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.03%)</title><rect x="827.4" y="307.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="830.4" y="318.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="827.7" y="339.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="830.7" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.05%)</title><rect x="827.9" y="355.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="830.9" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.05%)</title><rect x="827.9" y="339.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="830.9" y="350.0"></text>
</g>
<g>
<title>do_softirq.part.20 (1 samples, 0.03%)</title><rect x="828.5" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="831.5" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.05%)</title><rect x="828.8" y="435.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="831.8" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (2 samples, 0.05%)</title><rect x="828.8" y="419.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="831.8" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.05%)</title><rect x="828.8" y="403.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="831.8" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (2 samples, 0.05%)</title><rect x="828.8" y="387.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="831.8" y="398.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (1 samples, 0.03%)</title><rect x="829.1" y="371.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="832.1" y="382.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (1 samples, 0.03%)</title><rect x="829.4" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="832.4" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="829.7" y="451.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="832.7" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="830.0" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="833.0" y="478.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="830.3" y="499.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="833.3" y="510.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="830.3" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="833.3" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="830.3" y="467.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="833.3" y="478.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.03%)</title><rect x="830.6" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="833.6" y="510.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="830.9" y="515.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="833.9" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="831.2" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="834.2" y="526.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="831.5" y="515.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="834.5" y="526.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="832.1" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="835.1" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.08%)</title><rect x="832.4" y="515.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="835.4" y="526.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.03%)</title><rect x="832.4" y="499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="835.4" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.05%)</title><rect x="832.7" y="499.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="835.7" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="832.7" y="483.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="835.7" y="494.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="832.7" y="467.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="835.7" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="832.7" y="451.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="835.7" y="462.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.03%)</title><rect x="833.3" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="836.3" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="833.6" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="836.6" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="833.9" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="836.9" y="526.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="833.9" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="836.9" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="834.2" y="515.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="837.2" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.03%)</title><rect x="834.5" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="837.5" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.05%)</title><rect x="834.8" y="563.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="837.8" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="834.8" y="547.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="837.8" y="558.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.03%)</title><rect x="835.3" y="611.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="838.3" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.10%)</title><rect x="835.6" y="611.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="838.6" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="835.9" y="595.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="838.9" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="835.9" y="579.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="838.9" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="835.9" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="838.9" y="574.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (1 samples, 0.03%)</title><rect x="836.2" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="839.2" y="606.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.03%)</title><rect x="836.2" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="839.2" y="590.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (1 samples, 0.03%)</title><rect x="836.5" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="839.5" y="606.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg_permission (1 samples, 0.03%)</title><rect x="836.5" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="839.5" y="590.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (1 samples, 0.03%)</title><rect x="836.8" y="611.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="839.8" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="837.1" y="627.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="840.1" y="638.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="837.1" y="611.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="840.1" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="837.1" y="595.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="840.1" y="606.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="837.1" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="840.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="837.4" y="787.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.18%)</title><rect x="838.0" y="803.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.18%)</title><rect x="838.0" y="787.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="841.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.10%)</title><rect x="838.3" y="771.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="841.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.10%)</title><rect x="838.3" y="755.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="841.3" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="839.5" y="771.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="842.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="839.8" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="842.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="839.8" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="839.8" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="839.8" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (1 samples, 0.03%)</title><rect x="840.1" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="843.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.upsert (109 samples, 2.73%)</title><rect x="840.4" y="803.0" width="32.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.4" y="814.0">ru..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="840.4" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="840.4" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 0.03%)</title><rect x="840.4" y="755.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="843.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 0.03%)</title><rect x="840.4" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="843.4" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="840.4" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="840.4" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="843.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (62 samples, 1.56%)</title><rect x="840.7" y="787.0" width="18.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (61 samples, 1.53%)</title><rect x="841.0" y="771.0" width="18.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="844.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (8 samples, 0.20%)</title><rect x="841.0" y="755.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="844.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (8 samples, 0.20%)</title><rect x="841.0" y="739.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (7 samples, 0.18%)</title><rect x="841.3" y="723.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="844.3" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="841.9" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.9" y="718.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="841.9" y="691.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="844.9" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.05%)</title><rect x="842.2" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.2" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.05%)</title><rect x="842.2" y="691.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="845.2" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1 samples, 0.03%)</title><rect x="842.2" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="845.2" y="686.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (1 samples, 0.03%)</title><rect x="842.2" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.2" y="670.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.03%)</title><rect x="842.2" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="845.2" y="654.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.03%)</title><rect x="842.2" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="845.2" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.03%)</title><rect x="842.5" y="675.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="845.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="842.7" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="842.7" y="691.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.03%)</title><rect x="843.0" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.0" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (1 samples, 0.03%)</title><rect x="843.0" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="846.0" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (1 samples, 0.03%)</title><rect x="843.0" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$91/1753024190.run (53 samples, 1.33%)</title><rect x="843.3" y="755.0" width="15.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="846.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (53 samples, 1.33%)</title><rect x="843.3" y="739.0" width="15.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (53 samples, 1.33%)</title><rect x="843.3" y="723.0" width="15.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (52 samples, 1.30%)</title><rect x="843.3" y="707.0" width="15.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.3" y="718.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.03%)</title><rect x="843.6" y="691.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="846.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (49 samples, 1.23%)</title><rect x="843.9" y="691.0" width="14.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="849.3" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="852.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="849.3" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="852.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.03%)</title><rect x="849.6" y="675.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="852.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="849.6" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="852.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="849.6" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="852.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="849.6" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="852.6" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="849.6" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="852.6" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="849.6" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="852.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (29 samples, 0.73%)</title><rect x="849.9" y="675.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="852.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (28 samples, 0.70%)</title><rect x="850.2" y="659.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (28 samples, 0.70%)</title><rect x="850.2" y="643.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.2" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.20%)</title><rect x="850.2" y="627.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="853.2" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (20 samples, 0.50%)</title><rect x="852.5" y="627.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="855.5" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (20 samples, 0.50%)</title><rect x="852.5" y="611.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.5" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (8 samples, 0.20%)</title><rect x="856.1" y="595.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="859.1" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="858.4" y="691.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="861.4" y="702.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="858.4" y="675.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="861.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (1 samples, 0.03%)</title><rect x="858.7" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.7" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="858.7" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.7" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="858.7" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.7" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="858.7" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="858.7" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="861.7" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="858.7" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="861.7" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="858.7" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="861.7" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="858.7" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapArray (3 samples, 0.08%)</title><rect x="859.0" y="787.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="862.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.08%)</title><rect x="859.0" y="771.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="862.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.08%)</title><rect x="859.0" y="755.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="862.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="859.0" y="739.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="862.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="859.0" y="723.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="862.0" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="859.3" y="707.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="862.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="859.3" y="691.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="862.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="859.3" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="862.3" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="859.3" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="862.3" y="670.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="859.6" y="691.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="862.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapString (43 samples, 1.08%)</title><rect x="859.9" y="787.0" width="12.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="862.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.38%)</title><rect x="859.9" y="771.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="862.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.38%)</title><rect x="859.9" y="755.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="862.9" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (15 samples, 0.38%)</title><rect x="859.9" y="739.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="862.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (15 samples, 0.38%)</title><rect x="859.9" y="723.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="862.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.08%)</title><rect x="861.7" y="707.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.7" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.15%)</title><rect x="862.6" y="707.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="865.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.05%)</title><rect x="863.2" y="691.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="866.2" y="702.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="863.8" y="691.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="866.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.toBytes (28 samples, 0.70%)</title><rect x="864.4" y="771.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="867.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (28 samples, 0.70%)</title><rect x="864.4" y="755.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="867.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (14 samples, 0.35%)</title><rect x="864.4" y="739.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (13 samples, 0.33%)</title><rect x="864.4" y="723.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="867.0" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="870.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.08%)</title><rect x="867.3" y="707.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="870.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="868.2" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="871.2" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="868.2" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="871.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (14 samples, 0.35%)</title><rect x="868.5" y="739.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="871.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (11 samples, 0.28%)</title><rect x="868.5" y="723.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="871.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (6 samples, 0.15%)</title><rect x="870.0" y="707.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.08%)</title><rect x="871.8" y="723.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="872.4" y="707.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.18%)</title><rect x="872.6" y="819.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.18%)</title><rect x="872.6" y="803.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.18%)</title><rect x="872.6" y="787.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="875.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.20%)</title><rect x="874.7" y="851.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="877.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="875.0" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="878.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="875.0" y="819.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="875.0" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="878.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="875.0" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.10%)</title><rect x="875.3" y="835.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="878.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.10%)</title><rect x="875.3" y="819.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="878.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.05%)</title><rect x="876.5" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="879.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="877.1" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="880.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="877.1" y="835.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="880.1" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="877.1" y="819.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="880.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.13%)</title><rect x="877.7" y="851.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="880.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.13%)</title><rect x="877.7" y="835.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="880.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="878.9" y="819.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="881.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="878.9" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="881.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.03%)</title><rect x="878.9" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="881.9" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="878.9" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="881.9" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="878.9" y="755.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="881.9" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="878.9" y="739.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="881.9" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="878.9" y="723.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="881.9" y="734.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="878.9" y="707.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="881.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (36 samples, 0.90%)</title><rect x="879.2" y="867.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="882.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (36 samples, 0.90%)</title><rect x="879.2" y="851.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="882.2" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.15%)</title><rect x="879.5" y="835.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="882.5" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.03%)</title><rect x="879.5" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="882.5" y="830.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="879.8" y="819.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="882.8" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.08%)</title><rect x="880.3" y="819.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="883.3" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="880.6" y="803.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="883.6" y="814.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="881.2" y="835.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="884.2" y="846.0"></text>
</g>
<g>
<title>__recv (28 samples, 0.70%)</title><rect x="881.5" y="835.0" width="8.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="884.5" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.63%)</title><rect x="882.4" y="819.0" width="7.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="885.4" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="882.4" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="885.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.60%)</title><rect x="882.7" y="803.0" width="7.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="885.7" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.03%)</title><rect x="883.3" y="787.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="886.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (21 samples, 0.53%)</title><rect x="883.6" y="787.0" width="6.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="886.6" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (21 samples, 0.53%)</title><rect x="883.6" y="771.0" width="6.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="886.6" y="782.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="883.9" y="755.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="886.9" y="766.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.03%)</title><rect x="883.9" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="886.9" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (16 samples, 0.40%)</title><rect x="884.2" y="755.0" width="4.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="887.2" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.03%)</title><rect x="884.2" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="887.2" y="750.0"></text>
</g>
<g>
<title>inet6_recvmsg (12 samples, 0.30%)</title><rect x="884.5" y="739.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="887.5" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.30%)</title><rect x="884.5" y="723.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="887.5" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.13%)</title><rect x="884.8" y="707.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="887.8" y="718.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.13%)</title><rect x="884.8" y="691.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="887.8" y="702.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="885.1" y="675.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="888.1" y="686.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="885.4" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="888.4" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.05%)</title><rect x="885.7" y="675.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="888.7" y="686.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="885.7" y="659.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="888.7" y="670.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="886.0" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="889.0" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.10%)</title><rect x="886.3" y="707.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="889.3" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.10%)</title><rect x="886.3" y="691.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="889.3" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.03%)</title><rect x="886.6" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="889.6" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.05%)</title><rect x="886.9" y="675.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="889.9" y="686.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="886.9" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="889.9" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.03%)</title><rect x="887.2" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="890.2" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="887.2" y="643.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="890.2" y="654.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="887.5" y="707.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="890.5" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="887.7" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="890.7" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.05%)</title><rect x="888.0" y="739.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="891.0" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.03%)</title><rect x="888.0" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="891.0" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="888.0" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="891.0" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="888.0" y="691.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="891.0" y="702.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (1 samples, 0.03%)</title><rect x="888.3" y="723.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="891.3" y="734.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.03%)</title><rect x="888.3" y="707.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="891.3" y="718.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (1 samples, 0.03%)</title><rect x="888.6" y="739.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="891.6" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.08%)</title><rect x="888.9" y="755.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="891.9" y="766.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="888.9" y="739.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="891.9" y="750.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="888.9" y="723.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="891.9" y="734.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="888.9" y="707.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="891.9" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="889.5" y="739.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="892.5" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="889.8" y="883.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="892.8" y="894.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="889.8" y="867.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="892.8" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="889.8" y="851.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="892.8" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=18778] (360 samples, 9.03%)</title><rect x="890.1" y="931.0" width="106.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="893.1" y="942.0">[NIO Selector..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="890.1" y="915.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="893.1" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="890.1" y="899.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="893.1" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="890.1" y="883.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="893.1" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.03%)</title><rect x="890.1" y="867.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="893.1" y="878.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="890.1" y="851.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="893.1" y="862.0"></text>
</g>
<g>
<title>Monitor::lock() (1 samples, 0.03%)</title><rect x="890.1" y="835.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="893.1" y="846.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="890.1" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="893.1" y="830.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="890.1" y="803.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="893.1" y="814.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (359 samples, 9.01%)</title><rect x="890.4" y="915.0" width="106.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="893.4" y="926.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (53 samples, 1.33%)</title><rect x="890.7" y="899.0" width="15.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="893.7" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (52 samples, 1.30%)</title><rect x="891.0" y="883.0" width="15.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="894.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 1.23%)</title><rect x="891.6" y="867.0" width="14.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="894.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="891.6" y="851.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="894.6" y="862.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="891.6" y="835.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="894.6" y="846.0"></text>
</g>
<g>
<title>epoll_wait (48 samples, 1.20%)</title><rect x="891.9" y="851.0" width="14.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="894.9" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.88%)</title><rect x="895.7" y="835.0" width="10.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="898.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 0.88%)</title><rect x="895.7" y="819.0" width="10.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="898.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (33 samples, 0.83%)</title><rect x="896.0" y="803.0" width="9.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="899.0" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (33 samples, 0.83%)</title><rect x="896.0" y="787.0" width="9.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="899.0" y="798.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.08%)</title><rect x="896.0" y="771.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="899.0" y="782.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.08%)</title><rect x="896.0" y="755.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="899.0" y="766.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.08%)</title><rect x="896.0" y="739.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="899.0" y="750.0"></text>
</g>
<g>
<title>ep_poll (29 samples, 0.73%)</title><rect x="896.9" y="771.0" width="8.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="899.9" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (24 samples, 0.60%)</title><rect x="897.5" y="755.0" width="7.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="900.5" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.03%)</title><rect x="899.6" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="902.6" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (16 samples, 0.40%)</title><rect x="899.9" y="739.0" width="4.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="902.9" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (14 samples, 0.35%)</title><rect x="900.2" y="723.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="903.2" y="734.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rcx (1 samples, 0.03%)</title><rect x="900.2" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="903.2" y="718.0"></text>
</g>
<g>
<title>sock_poll (13 samples, 0.33%)</title><rect x="900.5" y="707.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="903.5" y="718.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.13%)</title><rect x="902.3" y="691.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="905.3" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="903.7" y="691.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="906.7" y="702.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="904.3" y="723.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="907.3" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.03%)</title><rect x="904.6" y="755.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="907.6" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.05%)</title><rect x="904.9" y="755.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="907.9" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.05%)</title><rect x="904.9" y="739.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="907.9" y="750.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="904.9" y="723.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="907.9" y="734.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="905.5" y="771.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="908.5" y="782.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="905.5" y="755.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="908.5" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.03%)</title><rect x="905.8" y="803.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="908.8" y="814.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="906.1" y="867.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="909.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (305 samples, 7.65%)</title><rect x="906.4" y="899.0" width="90.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.4" y="910.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (302 samples, 7.58%)</title><rect x="907.3" y="883.0" width="89.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="910.3" y="894.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (273 samples, 6.85%)</title><rect x="907.3" y="867.0" width="80.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="910.3" y="878.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (238 samples, 5.97%)</title><rect x="908.5" y="851.0" width="70.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.5" y="862.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (238 samples, 5.97%)</title><rect x="908.5" y="835.0" width="70.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="911.5" y="846.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (236 samples, 5.92%)</title><rect x="908.5" y="819.0" width="69.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="911.5" y="830.0">Request..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (130 samples, 3.26%)</title><rect x="908.8" y="803.0" width="38.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.8" y="814.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.05%)</title><rect x="909.1" y="787.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="912.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="909.1" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="912.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="909.1" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="912.1" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="909.4" y="739.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="912.4" y="750.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="909.4" y="723.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="912.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (125 samples, 3.14%)</title><rect x="909.7" y="787.0" width="37.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="912.7" y="798.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.18%)</title><rect x="909.7" y="771.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="912.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (118 samples, 2.96%)</title><rect x="911.7" y="771.0" width="35.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.7" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (118 samples, 2.96%)</title><rect x="911.7" y="755.0" width="35.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.7" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (118 samples, 2.96%)</title><rect x="911.7" y="739.0" width="35.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="914.7" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (118 samples, 2.96%)</title><rect x="911.7" y="723.0" width="35.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="914.7" y="734.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.10%)</title><rect x="912.0" y="707.0" width="1.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="915.0" y="718.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="912.0" y="691.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="915.0" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="912.3" y="691.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="915.3" y="702.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="912.9" y="691.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="915.9" y="702.0"></text>
</g>
<g>
<title>__send (113 samples, 2.83%)</title><rect x="913.2" y="707.0" width="33.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="916.2" y="718.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (105 samples, 2.63%)</title><rect x="915.6" y="691.0" width="31.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="918.6" y="702.0">en..</text>
</g>
<g>
<title>do_syscall_64 (105 samples, 2.63%)</title><rect x="915.6" y="675.0" width="31.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="918.6" y="686.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (102 samples, 2.56%)</title><rect x="916.5" y="659.0" width="30.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="919.5" y="670.0">__..</text>
</g>
<g>
<title>__sys_sendto (102 samples, 2.56%)</title><rect x="916.5" y="643.0" width="30.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="919.5" y="654.0">__..</text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="916.5" y="627.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="919.5" y="638.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="916.5" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="919.5" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (101 samples, 2.53%)</title><rect x="916.8" y="627.0" width="29.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="919.8" y="638.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (99 samples, 2.48%)</title><rect x="916.8" y="611.0" width="29.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="919.8" y="622.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (99 samples, 2.48%)</title><rect x="916.8" y="595.0" width="29.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="919.8" y="606.0">tc..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="916.8" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="919.8" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="916.8" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="919.8" y="574.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="917.1" y="579.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="920.1" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="917.1" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="920.1" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="917.4" y="563.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="920.4" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="917.4" y="547.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="920.4" y="558.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.03%)</title><rect x="917.6" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="920.6" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (92 samples, 2.31%)</title><rect x="917.9" y="579.0" width="27.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="920.9" y="590.0">t..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="918.8" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="921.8" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="918.8" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="921.8" y="558.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.03%)</title><rect x="919.1" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="922.1" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.03%)</title><rect x="919.1" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="922.1" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.05%)</title><rect x="919.4" y="563.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="922.4" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.05%)</title><rect x="919.4" y="547.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="922.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (1 samples, 0.03%)</title><rect x="919.4" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="922.4" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="919.4" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="922.4" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="919.7" y="531.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="922.7" y="542.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="920.0" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="923.0" y="574.0"></text>
</g>
<g>
<title>tcp_push (84 samples, 2.11%)</title><rect x="920.3" y="563.0" width="24.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="923.3" y="574.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (84 samples, 2.11%)</title><rect x="920.3" y="547.0" width="24.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="923.3" y="558.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (84 samples, 2.11%)</title><rect x="920.3" y="531.0" width="24.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="923.3" y="542.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (75 samples, 1.88%)</title><rect x="920.9" y="515.0" width="22.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="923.9" y="526.0">_..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="921.2" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="924.2" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (73 samples, 1.83%)</title><rect x="921.5" y="499.0" width="21.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="924.5" y="510.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (73 samples, 1.83%)</title><rect x="921.5" y="483.0" width="21.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="924.5" y="494.0">_..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.05%)</title><rect x="922.4" y="467.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="925.4" y="478.0"></text>
</g>
<g>
<title>ip_local_out (66 samples, 1.66%)</title><rect x="923.0" y="467.0" width="19.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="926.0" y="478.0"></text>
</g>
<g>
<title>ip_output (65 samples, 1.63%)</title><rect x="923.0" y="451.0" width="19.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="926.0" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (59 samples, 1.48%)</title><rect x="923.3" y="435.0" width="17.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="926.3" y="446.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="923.3" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="926.3" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (57 samples, 1.43%)</title><rect x="923.6" y="419.0" width="16.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="926.6" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (57 samples, 1.43%)</title><rect x="923.6" y="403.0" width="16.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="926.6" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.03%)</title><rect x="924.2" y="387.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="927.2" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (50 samples, 1.25%)</title><rect x="924.5" y="387.0" width="14.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="927.5" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (50 samples, 1.25%)</title><rect x="924.5" y="371.0" width="14.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="927.5" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (47 samples, 1.18%)</title><rect x="925.3" y="355.0" width="14.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="928.3" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (47 samples, 1.18%)</title><rect x="925.3" y="339.0" width="14.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="928.3" y="350.0"></text>
</g>
<g>
<title>net_rx_action (44 samples, 1.10%)</title><rect x="926.2" y="323.0" width="13.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="929.2" y="334.0"></text>
</g>
<g>
<title>process_backlog (44 samples, 1.10%)</title><rect x="926.2" y="307.0" width="13.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="929.2" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (43 samples, 1.08%)</title><rect x="926.5" y="291.0" width="12.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="929.5" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (43 samples, 1.08%)</title><rect x="926.5" y="275.0" width="12.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="929.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv (41 samples, 1.03%)</title><rect x="926.5" y="259.0" width="12.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="929.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (41 samples, 1.03%)</title><rect x="926.5" y="243.0" width="12.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="929.5" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (41 samples, 1.03%)</title><rect x="926.5" y="227.0" width="12.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="929.5" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (40 samples, 1.00%)</title><rect x="926.5" y="211.0" width="11.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="929.5" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (40 samples, 1.00%)</title><rect x="926.5" y="195.0" width="11.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="929.5" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="926.5" y="179.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="929.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (39 samples, 0.98%)</title><rect x="926.8" y="179.0" width="11.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="929.8" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="926.8" y="163.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="929.8" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 0.20%)</title><rect x="927.1" y="163.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="930.1" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="927.7" y="147.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="930.7" y="158.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.03%)</title><rect x="928.3" y="147.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="931.3" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.08%)</title><rect x="928.6" y="147.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="931.6" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.05%)</title><rect x="928.9" y="131.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="931.9" y="142.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (2 samples, 0.05%)</title><rect x="928.9" y="115.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="931.9" y="126.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (1 samples, 0.03%)</title><rect x="928.9" y="99.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="931.9" y="110.0"></text>
</g>
<g>
<title>selinux_xfrm_sock_rcv_skb (1 samples, 0.03%)</title><rect x="929.2" y="99.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="932.2" y="110.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="929.2" y="83.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="932.2" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (30 samples, 0.75%)</title><rect x="929.5" y="163.0" width="8.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="932.5" y="174.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="929.5" y="147.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="932.5" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (29 samples, 0.73%)</title><rect x="929.8" y="147.0" width="8.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="932.8" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.03%)</title><rect x="929.8" y="131.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="932.8" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.03%)</title><rect x="929.8" y="115.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="932.8" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="929.8" y="99.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="932.8" y="110.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="929.8" y="83.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="932.8" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="929.8" y="67.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="932.8" y="78.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="930.1" y="131.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="933.1" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.13%)</title><rect x="930.4" y="131.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="933.4" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.13%)</title><rect x="930.4" y="115.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="933.4" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.13%)</title><rect x="930.4" y="99.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="933.4" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.13%)</title><rect x="930.4" y="83.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="933.4" y="94.0"></text>
</g>
<g>
<title>tcp_ack (17 samples, 0.43%)</title><rect x="931.9" y="131.0" width="5.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="934.9" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.20%)</title><rect x="933.0" y="115.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="936.0" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.13%)</title><rect x="933.0" y="99.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="936.0" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.10%)</title><rect x="933.3" y="83.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="936.3" y="94.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="933.9" y="67.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="936.9" y="78.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.08%)</title><rect x="934.5" y="99.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="937.5" y="110.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.08%)</title><rect x="934.5" y="83.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="937.5" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.05%)</title><rect x="934.8" y="67.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="937.8" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.05%)</title><rect x="934.8" y="51.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="937.8" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="935.1" y="35.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="938.1" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="935.4" y="115.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="938.4" y="126.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="935.7" y="115.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="938.7" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (1 samples, 0.03%)</title><rect x="936.0" y="115.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="939.0" y="126.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.05%)</title><rect x="936.3" y="115.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="939.3" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.05%)</title><rect x="936.9" y="131.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="939.9" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="937.5" y="131.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="940.5" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.03%)</title><rect x="937.8" y="131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="940.8" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="938.1" y="131.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="941.1" y="142.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="938.4" y="211.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="941.4" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.05%)</title><rect x="938.7" y="259.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="941.7" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.10%)</title><rect x="939.3" y="387.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="942.3" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.10%)</title><rect x="939.3" y="371.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="942.3" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.08%)</title><rect x="939.3" y="355.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="942.3" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.05%)</title><rect x="939.3" y="339.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="942.3" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.05%)</title><rect x="939.3" y="323.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="942.3" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.05%)</title><rect x="939.3" y="307.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="942.3" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.05%)</title><rect x="939.3" y="291.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="942.3" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="939.8" y="339.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="942.8" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="940.1" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="943.1" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.03%)</title><rect x="940.1" y="339.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="943.1" y="350.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="940.4" y="419.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="943.4" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.13%)</title><rect x="940.7" y="435.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="943.7" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (5 samples, 0.13%)</title><rect x="940.7" y="419.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="943.7" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (5 samples, 0.13%)</title><rect x="940.7" y="403.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="943.7" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (5 samples, 0.13%)</title><rect x="940.7" y="387.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="943.7" y="398.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (2 samples, 0.05%)</title><rect x="941.0" y="371.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="944.0" y="382.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (2 samples, 0.05%)</title><rect x="941.6" y="371.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="944.6" y="382.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.05%)</title><rect x="941.6" y="355.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="944.6" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="942.2" y="451.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="945.2" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="942.5" y="467.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="945.5" y="478.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="943.1" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="946.1" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.05%)</title><rect x="943.4" y="515.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="946.4" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.05%)</title><rect x="943.4" y="499.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="946.4" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="943.7" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="946.7" y="494.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.03%)</title><rect x="943.7" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="946.7" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="944.0" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="947.0" y="526.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="944.0" y="499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="947.0" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (3 samples, 0.08%)</title><rect x="944.3" y="515.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="947.3" y="526.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="945.2" y="579.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="948.2" y="590.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.03%)</title><rect x="945.8" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="948.8" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="946.1" y="611.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="949.1" y="622.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg_permission (1 samples, 0.03%)</title><rect x="946.1" y="595.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="949.1" y="606.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (1 samples, 0.03%)</title><rect x="946.4" y="611.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="949.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="946.7" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="949.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (12 samples, 0.30%)</title><rect x="947.3" y="803.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="950.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.30%)</title><rect x="947.3" y="787.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="950.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.23%)</title><rect x="947.3" y="771.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="950.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.23%)</title><rect x="947.3" y="755.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="950.3" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="949.3" y="739.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="952.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.08%)</title><rect x="949.9" y="771.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="952.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.08%)</title><rect x="949.9" y="755.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="952.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.08%)</title><rect x="949.9" y="739.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="952.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.08%)</title><rect x="949.9" y="723.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="952.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.upsert (93 samples, 2.33%)</title><rect x="950.8" y="803.0" width="27.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="953.8" y="814.0">r..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.13%)</title><rect x="950.8" y="787.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.13%)</title><rect x="950.8" y="771.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (5 samples, 0.13%)</title><rect x="950.8" y="755.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="953.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (5 samples, 0.13%)</title><rect x="950.8" y="739.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="953.8" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.13%)</title><rect x="950.8" y="723.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="953.8" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.05%)</title><rect x="951.1" y="707.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="954.1" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.05%)</title><rect x="951.7" y="707.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="954.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (48 samples, 1.20%)</title><rect x="952.3" y="787.0" width="14.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="955.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (45 samples, 1.13%)</title><rect x="953.2" y="771.0" width="13.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="956.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.08%)</title><rect x="953.5" y="755.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="956.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.08%)</title><rect x="953.5" y="739.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="956.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.08%)</title><rect x="953.5" y="723.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="956.5" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.03%)</title><rect x="954.1" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="957.1" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.03%)</title><rect x="954.1" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="957.1" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1 samples, 0.03%)</title><rect x="954.1" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="957.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.03%)</title><rect x="954.4" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="957.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.03%)</title><rect x="954.4" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="957.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.03%)</title><rect x="954.4" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="957.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$91/1753024190.run (40 samples, 1.00%)</title><rect x="954.7" y="755.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="957.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (40 samples, 1.00%)</title><rect x="954.7" y="739.0" width="11.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="957.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (40 samples, 1.00%)</title><rect x="954.7" y="723.0" width="11.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="957.7" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="954.7" y="707.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="957.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (38 samples, 0.95%)</title><rect x="954.9" y="707.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="957.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (37 samples, 0.93%)</title><rect x="954.9" y="691.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="957.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (18 samples, 0.45%)</title><rect x="960.6" y="675.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="963.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.40%)</title><rect x="961.2" y="659.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="964.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.40%)</title><rect x="961.2" y="643.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="964.2" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.10%)</title><rect x="961.2" y="627.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="964.2" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (12 samples, 0.30%)</title><rect x="962.3" y="627.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.3" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (12 samples, 0.30%)</title><rect x="962.3" y="611.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="965.3" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (5 samples, 0.13%)</title><rect x="964.4" y="595.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="967.4" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="965.9" y="691.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="968.9" y="702.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="965.9" y="675.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="968.9" y="686.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="965.9" y="659.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="968.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (1 samples, 0.03%)</title><rect x="966.2" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="969.2" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="966.2" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="969.2" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="966.2" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="969.2" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="966.2" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="969.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="966.2" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.2" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="966.2" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="969.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="966.2" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="969.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="966.2" y="595.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapArray (4 samples, 0.10%)</title><rect x="966.5" y="787.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.10%)</title><rect x="966.5" y="771.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="969.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.10%)</title><rect x="966.5" y="755.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="966.5" y="739.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="966.5" y="723.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="967.4" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="970.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="967.4" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="970.4" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="967.4" y="675.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="970.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.wrapString (36 samples, 0.90%)</title><rect x="967.7" y="787.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="970.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.28%)</title><rect x="967.7" y="771.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="970.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.28%)</title><rect x="967.7" y="755.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="970.7" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.28%)</title><rect x="967.7" y="739.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="970.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.28%)</title><rect x="967.7" y="723.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="970.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.08%)</title><rect x="969.2" y="707.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="972.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="970.0" y="707.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.05%)</title><rect x="970.0" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="973.0" y="702.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="970.6" y="691.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="973.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/BasicService.toBytes (25 samples, 0.63%)</title><rect x="970.9" y="771.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (25 samples, 0.63%)</title><rect x="970.9" y="755.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="973.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (10 samples, 0.25%)</title><rect x="970.9" y="739.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="973.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (9 samples, 0.23%)</title><rect x="970.9" y="723.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="973.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.08%)</title><rect x="971.8" y="707.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="974.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.08%)</title><rect x="972.7" y="707.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="975.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="973.6" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="976.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (15 samples, 0.38%)</title><rect x="973.9" y="739.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="976.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.13%)</title><rect x="973.9" y="723.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="976.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (4 samples, 0.10%)</title><rect x="974.2" y="707.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="977.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 0.25%)</title><rect x="975.4" y="723.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="978.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.13%)</title><rect x="976.9" y="707.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="979.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.05%)</title><rect x="978.3" y="819.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.3" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.05%)</title><rect x="978.3" y="803.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.05%)</title><rect x="978.3" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (15 samples, 0.38%)</title><rect x="978.9" y="851.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.35%)</title><rect x="979.2" y="835.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="982.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.35%)</title><rect x="979.2" y="819.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="982.2" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="983.1" y="803.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="986.1" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="983.1" y="787.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="986.1" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="983.1" y="771.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="986.1" y="782.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="983.1" y="755.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="986.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.03%)</title><rect x="983.4" y="851.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.03%)</title><rect x="983.7" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="986.7" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="983.7" y="835.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="986.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="983.7" y="819.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="986.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="983.7" y="803.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="986.7" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="983.7" y="787.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="986.7" y="798.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="983.7" y="771.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="986.7" y="782.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="983.7" y="755.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="986.7" y="766.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="983.7" y="739.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="986.7" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="983.7" y="723.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="986.7" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="983.7" y="707.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="986.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.10%)</title><rect x="984.0" y="851.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="987.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.08%)</title><rect x="984.3" y="835.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="987.3" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.08%)</title><rect x="984.3" y="819.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="987.3" y="830.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="984.3" y="803.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="987.3" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="984.6" y="803.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="987.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.25%)</title><rect x="985.1" y="851.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="988.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="985.7" y="835.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="988.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.18%)</title><rect x="986.0" y="835.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="989.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (29 samples, 0.73%)</title><rect x="988.1" y="867.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="991.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (29 samples, 0.73%)</title><rect x="988.1" y="851.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="991.1" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.05%)</title><rect x="988.1" y="835.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="991.1" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.05%)</title><rect x="988.1" y="819.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="991.1" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="988.1" y="803.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="991.1" y="814.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="988.7" y="835.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="991.7" y="846.0"></text>
</g>
<g>
<title>__recv (26 samples, 0.65%)</title><rect x="989.0" y="835.0" width="7.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="992.0" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.28%)</title><rect x="993.4" y="819.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="996.4" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="993.4" y="803.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="996.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.25%)</title><rect x="993.7" y="803.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="996.7" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (8 samples, 0.20%)</title><rect x="994.3" y="787.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="997.3" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (7 samples, 0.18%)</title><rect x="994.3" y="771.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="997.3" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.15%)</title><rect x="994.3" y="755.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="997.3" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (6 samples, 0.15%)</title><rect x="994.3" y="739.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="997.3" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.03%)</title><rect x="994.3" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="997.3" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.13%)</title><rect x="994.6" y="723.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="997.6" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.05%)</title><rect x="994.9" y="707.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="997.9" y="718.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.05%)</title><rect x="994.9" y="691.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="997.9" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.05%)</title><rect x="994.9" y="675.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="997.9" y="686.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="994.9" y="659.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="997.9" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.03%)</title><rect x="995.5" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="998.5" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.03%)</title><rect x="995.5" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="998.5" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.03%)</title><rect x="995.5" y="675.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="998.5" y="686.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="995.5" y="659.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="998.5" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="995.8" y="707.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="998.8" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="995.8" y="691.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="998.8" y="702.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="995.8" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="998.8" y="686.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="995.8" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="998.8" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="996.1" y="755.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="999.1" y="766.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="996.1" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="999.1" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="996.1" y="723.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="999.1" y="734.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="996.1" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="999.1" y="718.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="996.4" y="771.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="999.4" y="782.0"></text>
</g>
<g>
<title>[VM Thread tid=18750] (6 samples, 0.15%)</title><rect x="996.7" y="931.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="999.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="996.7" y="915.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="999.7" y="926.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (1 samples, 0.03%)</title><rect x="996.7" y="899.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="999.7" y="910.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.13%)</title><rect x="997.0" y="915.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1000.0" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.13%)</title><rect x="997.0" y="899.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1000.0" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.13%)</title><rect x="997.0" y="883.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1000.0" y="894.0"></text>
</g>
<g>
<title>VMThread::run() (5 samples, 0.13%)</title><rect x="997.0" y="867.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1000.0" y="878.0"></text>
</g>
<g>
<title>VMThread::loop() (5 samples, 0.13%)</title><rect x="997.0" y="851.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1000.0" y="862.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.63] (3 samples, 0.08%)</title><rect x="997.0" y="835.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1000.0" y="846.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.08%)</title><rect x="997.0" y="819.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1000.0" y="830.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (3 samples, 0.08%)</title><rect x="997.0" y="803.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1000.0" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (3 samples, 0.08%)</title><rect x="997.0" y="787.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1000.0" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::evacuate_collection_set(G1ParScanThreadStateSet*) (1 samples, 0.03%)</title><rect x="997.0" y="771.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1000.0" y="782.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (1 samples, 0.03%)</title><rect x="997.0" y="755.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1000.0" y="766.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.03%)</title><rect x="997.0" y="739.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1000.0" y="750.0"></text>
</g>
<g>
<title>__new_sem_post (1 samples, 0.03%)</title><rect x="997.0" y="723.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1000.0" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (1 samples, 0.03%)</title><rect x="997.3" y="771.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1000.3" y="782.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (1 samples, 0.03%)</title><rect x="997.3" y="755.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1000.3" y="766.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.03%)</title><rect x="997.3" y="739.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1000.3" y="750.0"></text>
</g>
<g>
<title>__new_sem_post (1 samples, 0.03%)</title><rect x="997.3" y="723.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1000.3" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="997.3" y="707.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1000.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="997.3" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1000.3" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="997.3" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1000.3" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="997.3" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1000.3" y="670.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="997.3" y="643.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1000.3" y="654.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="997.3" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1000.3" y="638.0"></text>
</g>
<g>
<title>G1CollectionSet::finalize_old_part(double) (1 samples, 0.03%)</title><rect x="997.6" y="771.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1000.6" y="782.0"></text>
</g>
<g>
<title>void QuickSort::inner_sort&lt;true, unsigned int, int (*)(unsigned int, unsigned int)&gt;(unsigned int*, unsigned long, int (*)(unsigned int, unsigned int)) (1 samples, 0.03%)</title><rect x="997.6" y="755.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1000.6" y="766.0"></text>
</g>
<g>
<title>sched_yield (2 samples, 0.05%)</title><rect x="997.9" y="835.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1000.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="998.2" y="819.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1001.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.03%)</title><rect x="998.2" y="803.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1001.2" y="814.0"></text>
</g>
<g>
<title>[pool-1-thread-1 tid=18844] (174 samples, 4.37%)</title><rect x="998.5" y="931.0" width="51.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1001.5" y="942.0">[pool..</text>
</g>
<g>
<title>java/lang/Thread.run (174 samples, 4.37%)</title><rect x="998.5" y="915.0" width="51.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1001.5" y="926.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (174 samples, 4.37%)</title><rect x="998.5" y="899.0" width="51.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1001.5" y="910.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (174 samples, 4.37%)</title><rect x="998.5" y="883.0" width="51.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1001.5" y="894.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$93/950694683.run (174 samples, 4.37%)</title><rect x="998.5" y="867.0" width="51.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1001.5" y="878.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$flush$9 (174 samples, 4.37%)</title><rect x="998.5" y="851.0" width="51.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1001.5" y="862.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.serialize (174 samples, 4.37%)</title><rect x="998.5" y="835.0" width="51.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1001.5" y="846.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.serialize (174 samples, 4.37%)</title><rect x="998.5" y="819.0" width="51.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1001.5" y="830.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="998.5" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.5" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="998.5" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="998.5" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1001.5" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="998.5" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="998.5" y="739.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1001.5" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="998.8" y="803.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.8" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="998.8" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1001.8" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="998.8" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1001.8" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="998.8" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1001.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (1 samples, 0.03%)</title><rect x="999.1" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1002.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (1 samples, 0.03%)</title><rect x="999.4" y="803.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1002.4" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="999.4" y="787.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1002.4" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="999.4" y="771.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.4" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="999.4" y="755.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1002.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="999.4" y="739.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (170 samples, 4.26%)</title><rect x="999.6" y="803.0" width="50.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1002.6" y="814.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.05%)</title><rect x="999.6" y="787.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1002.6" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.05%)</title><rect x="999.6" y="771.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1002.6" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="999.6" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1002.6" y="766.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="999.6" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1002.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="999.6" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1002.6" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.03%)</title><rect x="999.6" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1002.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="999.9" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1002.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (166 samples, 4.16%)</title><rect x="1000.2" y="787.0" width="49.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1003.2" y="798.0">sun/n..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (5 samples, 0.13%)</title><rect x="1000.2" y="771.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1003.2" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (4 samples, 0.10%)</title><rect x="1000.5" y="755.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1003.5" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.03%)</title><rect x="1000.5" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1003.5" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (1 samples, 0.03%)</title><rect x="1000.8" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1003.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.03%)</title><rect x="1001.1" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1004.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.03%)</title><rect x="1001.1" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1004.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.03%)</title><rect x="1001.1" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1004.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.03%)</title><rect x="1001.1" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1004.1" y="702.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1001.4" y="739.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1004.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (156 samples, 3.91%)</title><rect x="1001.7" y="771.0" width="46.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1004.7" y="782.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (156 samples, 3.91%)</title><rect x="1001.7" y="755.0" width="46.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1004.7" y="766.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (156 samples, 3.91%)</title><rect x="1001.7" y="739.0" width="46.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1004.7" y="750.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.03%)</title><rect x="1002.0" y="723.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1005.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (154 samples, 3.86%)</title><rect x="1002.3" y="723.0" width="45.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1005.3" y="734.0">[unk..</text>
</g>
<g>
<title>__libc_write (153 samples, 3.84%)</title><rect x="1002.3" y="707.0" width="45.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1005.3" y="718.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (127 samples, 3.19%)</title><rect x="1010.0" y="691.0" width="37.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1013.0" y="702.0">ent..</text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="1010.0" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1013.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (126 samples, 3.16%)</title><rect x="1010.3" y="675.0" width="37.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1013.3" y="686.0">do_..</text>
</g>
<g>
<title>__x64_sys_write (110 samples, 2.76%)</title><rect x="1015.0" y="659.0" width="32.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1018.0" y="670.0">__..</text>
</g>
<g>
<title>ksys_write (109 samples, 2.73%)</title><rect x="1015.0" y="643.0" width="32.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1018.0" y="654.0">ks..</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="1015.9" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1018.9" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="1015.9" y="611.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1018.9" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="1015.9" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1018.9" y="606.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="1016.2" y="627.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1019.2" y="638.0"></text>
</g>
<g>
<title>vfs_write (104 samples, 2.61%)</title><rect x="1016.5" y="627.0" width="30.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1019.5" y="638.0">vf..</text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.03%)</title><rect x="1017.1" y="611.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1020.1" y="622.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="1017.4" y="611.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1020.4" y="622.0"></text>
</g>
<g>
<title>__vfs_write (93 samples, 2.33%)</title><rect x="1017.7" y="611.0" width="27.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1020.7" y="622.0">_..</text>
</g>
<g>
<title>new_sync_write (93 samples, 2.33%)</title><rect x="1017.7" y="595.0" width="27.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1020.7" y="606.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (91 samples, 2.28%)</title><rect x="1018.3" y="579.0" width="26.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1021.3" y="590.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (84 samples, 2.11%)</title><rect x="1018.9" y="563.0" width="24.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1021.9" y="574.0">_..</text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.05%)</title><rect x="1019.8" y="547.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1022.8" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.03%)</title><rect x="1020.4" y="547.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1023.4" y="558.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.05%)</title><rect x="1020.7" y="547.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1023.7" y="558.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.05%)</title><rect x="1020.7" y="531.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1023.7" y="542.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="1021.0" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1024.0" y="526.0"></text>
</g>
<g>
<title>generic_perform_write (76 samples, 1.91%)</title><rect x="1021.3" y="547.0" width="22.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1024.3" y="558.0">g..</text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (2 samples, 0.05%)</title><rect x="1021.6" y="531.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1024.6" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (22 samples, 0.55%)</title><rect x="1022.1" y="531.0" width="6.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1025.1" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (10 samples, 0.25%)</title><rect x="1022.7" y="515.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1025.7" y="526.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.03%)</title><rect x="1022.7" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1025.7" y="510.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="1022.7" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1025.7" y="494.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="1022.7" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1025.7" y="478.0"></text>
</g>
<g>
<title>jbd2__journal_start (9 samples, 0.23%)</title><rect x="1023.0" y="499.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1026.0" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="1023.3" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1026.3" y="494.0"></text>
</g>
<g>
<title>start_this_handle (7 samples, 0.18%)</title><rect x="1023.6" y="483.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1026.6" y="494.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.03%)</title><rect x="1025.4" y="467.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1028.4" y="478.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="1025.7" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1028.7" y="526.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="1025.7" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1028.7" y="510.0"></text>
</g>
<g>
<title>ext4_block_write_begin (3 samples, 0.08%)</title><rect x="1026.0" y="515.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1029.0" y="526.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.03%)</title><rect x="1026.9" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1029.9" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.08%)</title><rect x="1027.2" y="515.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1030.2" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.08%)</title><rect x="1027.2" y="499.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1030.2" y="510.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.08%)</title><rect x="1027.2" y="483.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1030.2" y="494.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.05%)</title><rect x="1027.5" y="467.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1030.5" y="478.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.03%)</title><rect x="1028.1" y="515.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1031.1" y="526.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.03%)</title><rect x="1028.4" y="515.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1031.4" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_end (42 samples, 1.05%)</title><rect x="1028.7" y="531.0" width="12.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1031.7" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_stop (8 samples, 0.20%)</title><rect x="1029.0" y="515.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1032.0" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_stop (8 samples, 0.20%)</title><rect x="1029.0" y="499.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1032.0" y="510.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.05%)</title><rect x="1030.4" y="483.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1033.4" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.05%)</title><rect x="1030.4" y="467.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1033.4" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="1030.4" y="451.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1033.4" y="462.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="1031.0" y="483.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1034.0" y="494.0"></text>
</g>
<g>
<title>generic_write_end (33 samples, 0.83%)</title><rect x="1031.3" y="515.0" width="9.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1034.3" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (29 samples, 0.73%)</title><rect x="1031.6" y="499.0" width="8.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1034.6" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (27 samples, 0.68%)</title><rect x="1032.2" y="483.0" width="8.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1035.2" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.05%)</title><rect x="1032.2" y="467.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1035.2" y="478.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.03%)</title><rect x="1032.8" y="467.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1035.8" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (24 samples, 0.60%)</title><rect x="1033.1" y="467.0" width="7.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1036.1" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (18 samples, 0.45%)</title><rect x="1033.1" y="451.0" width="5.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1036.1" y="462.0"></text>
</g>
<g>
<title>__brelse (1 samples, 0.03%)</title><rect x="1034.3" y="435.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1037.3" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (13 samples, 0.33%)</title><rect x="1034.6" y="435.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1037.6" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (12 samples, 0.30%)</title><rect x="1034.9" y="419.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1037.9" y="430.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="1035.5" y="403.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1038.5" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.03%)</title><rect x="1035.8" y="403.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1038.8" y="414.0"></text>
</g>
<g>
<title>crypto_shash_update (8 samples, 0.20%)</title><rect x="1036.1" y="403.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1039.1" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (6 samples, 0.15%)</title><rect x="1036.7" y="387.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1039.7" y="398.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (6 samples, 0.15%)</title><rect x="1038.4" y="451.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1041.4" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (6 samples, 0.15%)</title><rect x="1038.4" y="435.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1041.4" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (3 samples, 0.08%)</title><rect x="1039.0" y="419.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1042.0" y="430.0"></text>
</g>
<g>
<title>__find_get_block (3 samples, 0.08%)</title><rect x="1039.0" y="403.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1042.0" y="414.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.03%)</title><rect x="1039.9" y="419.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1042.9" y="430.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.05%)</title><rect x="1040.2" y="499.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1043.2" y="510.0"></text>
</g>
<g>
<title>__block_commit_write.isra.41 (2 samples, 0.05%)</title><rect x="1040.2" y="483.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1043.2" y="494.0"></text>
</g>
<g>
<title>mark_buffer_dirty (1 samples, 0.03%)</title><rect x="1040.5" y="467.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1043.5" y="478.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.03%)</title><rect x="1040.8" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1043.8" y="510.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.03%)</title><rect x="1041.1" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1044.1" y="542.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (3 samples, 0.08%)</title><rect x="1041.4" y="531.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1044.4" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="1041.4" y="515.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1044.4" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="1042.0" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1045.0" y="526.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (4 samples, 0.10%)</title><rect x="1042.3" y="531.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1045.3" y="542.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.03%)</title><rect x="1043.5" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1046.5" y="542.0"></text>
</g>
<g>
<title>down_write_trylock (2 samples, 0.05%)</title><rect x="1043.8" y="563.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1046.8" y="574.0"></text>
</g>
<g>
<title>ext4_write_checks (1 samples, 0.03%)</title><rect x="1044.4" y="563.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1047.4" y="574.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.03%)</title><rect x="1044.4" y="547.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1047.4" y="558.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.54 (1 samples, 0.03%)</title><rect x="1044.4" y="531.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1047.4" y="542.0"></text>
</g>
<g>
<title>up_write (2 samples, 0.05%)</title><rect x="1044.6" y="563.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1047.6" y="574.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="1045.2" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1048.2" y="622.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.03%)</title><rect x="1045.5" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1048.5" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.13%)</title><rect x="1045.8" y="611.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1048.8" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="1045.8" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1048.8" y="606.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.08%)</title><rect x="1046.1" y="595.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1049.1" y="606.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="1046.4" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1049.4" y="590.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="1046.4" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1049.4" y="574.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.03%)</title><rect x="1046.4" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1049.4" y="558.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="1046.7" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1049.7" y="590.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.03%)</title><rect x="1047.0" y="595.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1050.0" y="606.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.03%)</title><rect x="1047.3" y="643.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1050.3" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="1047.6" y="707.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1050.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.05%)</title><rect x="1047.9" y="771.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1050.9" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.05%)</title><rect x="1047.9" y="755.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1050.9" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.03%)</title><rect x="1047.9" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1050.9" y="750.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="1048.2" y="739.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1051.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.08%)</title><rect x="1048.5" y="771.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1051.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (2 samples, 0.05%)</title><rect x="1048.8" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1051.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.05%)</title><rect x="1049.4" y="787.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1052.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="1049.7" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1052.7" y="782.0"></text>
</g>
<g>
<title>[pool-1-thread-2 tid=18845] (115 samples, 2.89%)</title><rect x="1050.0" y="931.0" width="34.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1053.0" y="942.0">[p..</text>
</g>
<g>
<title>java/lang/Thread.run (115 samples, 2.89%)</title><rect x="1050.0" y="915.0" width="34.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1053.0" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (115 samples, 2.89%)</title><rect x="1050.0" y="899.0" width="34.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1053.0" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (115 samples, 2.89%)</title><rect x="1050.0" y="883.0" width="34.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.0" y="894.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$93/950694683.run (115 samples, 2.89%)</title><rect x="1050.0" y="867.0" width="34.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1053.0" y="878.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$flush$9 (115 samples, 2.89%)</title><rect x="1050.0" y="851.0" width="34.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.0" y="862.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.serialize (115 samples, 2.89%)</title><rect x="1050.0" y="835.0" width="34.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1053.0" y="846.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.serialize (115 samples, 2.89%)</title><rect x="1050.0" y="819.0" width="34.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1053.0" y="830.0">ru..</text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.03%)</title><rect x="1050.0" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1053.0" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.03%)</title><rect x="1050.0" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1053.0" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.03%)</title><rect x="1050.0" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1053.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.03%)</title><rect x="1050.0" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1053.0" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/269091042.getAsBoolean (1 samples, 0.03%)</title><rect x="1050.0" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1053.0" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.03%)</title><rect x="1050.0" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1053.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.03%)</title><rect x="1050.0" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1053.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.03%)</title><rect x="1050.0" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1053.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/2061789199.accept (1 samples, 0.03%)</title><rect x="1050.0" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1053.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.accept (1 samples, 0.03%)</title><rect x="1050.0" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1053.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (1 samples, 0.03%)</title><rect x="1050.3" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1053.3" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="1050.3" y="787.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1053.3" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1050.3" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1053.3" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (113 samples, 2.83%)</title><rect x="1050.6" y="803.0" width="33.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1053.6" y="814.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.15%)</title><rect x="1050.6" y="787.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1053.6" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.15%)</title><rect x="1050.6" y="771.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1053.6" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.13%)</title><rect x="1050.6" y="755.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1053.6" y="766.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.13%)</title><rect x="1050.6" y="739.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1053.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.13%)</title><rect x="1050.6" y="723.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1053.6" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.05%)</title><rect x="1051.2" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1054.2" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.03%)</title><rect x="1051.8" y="707.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1054.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="1052.0" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1055.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (103 samples, 2.58%)</title><rect x="1052.3" y="787.0" width="30.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1055.3" y="798.0">su..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.03%)</title><rect x="1052.3" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1055.3" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.03%)</title><rect x="1052.3" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1055.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (101 samples, 2.53%)</title><rect x="1052.6" y="771.0" width="29.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1055.6" y="782.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (101 samples, 2.53%)</title><rect x="1052.6" y="755.0" width="29.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1055.6" y="766.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (101 samples, 2.53%)</title><rect x="1052.6" y="739.0" width="29.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1055.6" y="750.0">su..</text>
</g>
<g>
<title>[unknown] (97 samples, 2.43%)</title><rect x="1053.2" y="723.0" width="28.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1056.2" y="734.0">[u..</text>
</g>
<g>
<title>__libc_write (96 samples, 2.41%)</title><rect x="1053.2" y="707.0" width="28.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1056.2" y="718.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (77 samples, 1.93%)</title><rect x="1058.9" y="691.0" width="22.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1061.9" y="702.0">e..</text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.05%)</title><rect x="1058.9" y="675.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1061.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (75 samples, 1.88%)</title><rect x="1059.4" y="675.0" width="22.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1062.4" y="686.0">d..</text>
</g>
<g>
<title>__x64_sys_write (72 samples, 1.81%)</title><rect x="1060.3" y="659.0" width="21.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1063.3" y="670.0">_..</text>
</g>
<g>
<title>ksys_write (72 samples, 1.81%)</title><rect x="1060.3" y="643.0" width="21.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1063.3" y="654.0">k..</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="1060.3" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1063.3" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="1060.3" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1063.3" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="1060.3" y="595.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1063.3" y="606.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="1060.6" y="627.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1063.6" y="638.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="1060.6" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1063.6" y="622.0"></text>
</g>
<g>
<title>vfs_write (70 samples, 1.76%)</title><rect x="1060.9" y="627.0" width="20.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1063.9" y="638.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="1061.2" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1064.2" y="622.0"></text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.05%)</title><rect x="1061.5" y="611.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1064.5" y="622.0"></text>
</g>
<g>
<title>__vfs_write (64 samples, 1.61%)</title><rect x="1062.1" y="611.0" width="19.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1065.1" y="622.0"></text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.03%)</title><rect x="1062.1" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1065.1" y="606.0"></text>
</g>
<g>
<title>new_sync_write (63 samples, 1.58%)</title><rect x="1062.4" y="595.0" width="18.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1065.4" y="606.0"></text>
</g>
<g>
<title>ext4_file_write_iter (63 samples, 1.58%)</title><rect x="1062.4" y="579.0" width="18.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1065.4" y="590.0"></text>
</g>
<g>
<title>__generic_file_write_iter (60 samples, 1.51%)</title><rect x="1062.7" y="563.0" width="17.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1065.7" y="574.0"></text>
</g>
<g>
<title>file_update_time (5 samples, 0.13%)</title><rect x="1062.7" y="547.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1065.7" y="558.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.08%)</title><rect x="1063.0" y="531.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1066.0" y="542.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (3 samples, 0.08%)</title><rect x="1063.0" y="515.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1066.0" y="526.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="1063.9" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1066.9" y="542.0"></text>
</g>
<g>
<title>generic_perform_write (55 samples, 1.38%)</title><rect x="1064.2" y="547.0" width="16.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1067.2" y="558.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (1 samples, 0.03%)</title><rect x="1065.1" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1068.1" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (6 samples, 0.15%)</title><rect x="1065.4" y="531.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1068.4" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 0.08%)</title><rect x="1065.7" y="515.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1068.7" y="526.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.03%)</title><rect x="1065.7" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1068.7" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.05%)</title><rect x="1066.0" y="499.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1069.0" y="510.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.05%)</title><rect x="1066.0" y="483.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1069.0" y="494.0"></text>
</g>
<g>
<title>add_transaction_credits (2 samples, 0.05%)</title><rect x="1066.0" y="467.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1069.0" y="478.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.05%)</title><rect x="1066.6" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1069.6" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.05%)</title><rect x="1066.6" y="499.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1069.6" y="510.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.05%)</title><rect x="1066.6" y="483.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1069.6" y="494.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.03%)</title><rect x="1066.8" y="467.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1069.8" y="478.0"></text>
</g>
<g>
<title>ext4_da_write_end (40 samples, 1.00%)</title><rect x="1067.1" y="531.0" width="11.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1070.1" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_stop (7 samples, 0.18%)</title><rect x="1067.4" y="515.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1070.4" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_stop (6 samples, 0.15%)</title><rect x="1067.4" y="499.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1070.4" y="510.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.13%)</title><rect x="1067.7" y="483.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1070.7" y="494.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="1069.2" y="499.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1072.2" y="510.0"></text>
</g>
<g>
<title>generic_write_end (32 samples, 0.80%)</title><rect x="1069.5" y="515.0" width="9.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1072.5" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (25 samples, 0.63%)</title><rect x="1069.8" y="499.0" width="7.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1072.8" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (25 samples, 0.63%)</title><rect x="1069.8" y="483.0" width="7.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1072.8" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.03%)</title><rect x="1069.8" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1072.8" y="478.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.03%)</title><rect x="1069.8" y="451.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1072.8" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (24 samples, 0.60%)</title><rect x="1070.1" y="467.0" width="7.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1073.1" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (19 samples, 0.48%)</title><rect x="1070.1" y="451.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1073.1" y="462.0"></text>
</g>
<g>
<title>__brelse (1 samples, 0.03%)</title><rect x="1072.5" y="435.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1075.5" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (10 samples, 0.25%)</title><rect x="1072.8" y="435.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1075.8" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (10 samples, 0.25%)</title><rect x="1072.8" y="419.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1075.8" y="430.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.10%)</title><rect x="1073.1" y="403.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1076.1" y="414.0"></text>
</g>
<g>
<title>crypto_shash_update (5 samples, 0.13%)</title><rect x="1074.2" y="403.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1077.2" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.05%)</title><rect x="1075.1" y="387.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1078.1" y="398.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (5 samples, 0.13%)</title><rect x="1075.7" y="451.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1078.7" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (4 samples, 0.10%)</title><rect x="1076.0" y="435.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1079.0" y="446.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.03%)</title><rect x="1076.6" y="419.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1079.6" y="430.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.03%)</title><rect x="1076.9" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1079.9" y="430.0"></text>
</g>
<g>
<title>block_write_end (4 samples, 0.10%)</title><rect x="1077.2" y="499.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1080.2" y="510.0"></text>
</g>
<g>
<title>__block_commit_write.isra.41 (4 samples, 0.10%)</title><rect x="1077.2" y="483.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1080.2" y="494.0"></text>
</g>
<g>
<title>mark_buffer_dirty (2 samples, 0.05%)</title><rect x="1077.8" y="467.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1080.8" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.05%)</title><rect x="1078.4" y="499.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1081.4" y="510.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.03%)</title><rect x="1079.0" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1082.0" y="542.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (4 samples, 0.10%)</title><rect x="1079.3" y="531.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1082.3" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="1079.6" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1082.6" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.05%)</title><rect x="1079.9" y="515.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1082.9" y="526.0"></text>
</g>
<g>
<title>ext4_write_checks (2 samples, 0.05%)</title><rect x="1080.5" y="563.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1083.5" y="574.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.03%)</title><rect x="1080.8" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1083.8" y="558.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.54 (1 samples, 0.03%)</title><rect x="1080.8" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1083.8" y="542.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.05%)</title><rect x="1081.1" y="611.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1084.1" y="622.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.05%)</title><rect x="1081.1" y="595.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1084.1" y="606.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.03%)</title><rect x="1081.4" y="579.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1084.4" y="590.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.03%)</title><rect x="1081.4" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1084.4" y="574.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="1081.4" y="547.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1084.4" y="558.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="1081.7" y="707.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1084.7" y="718.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.05%)</title><rect x="1081.9" y="723.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1084.9" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="1082.5" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.03%)</title><rect x="1082.5" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1085.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.10%)</title><rect x="1082.8" y="787.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1085.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="1083.7" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1086.7" y="782.0"></text>
</g>
<g>
<title>[pool-1-thread-3 tid=18869] (180 samples, 4.52%)</title><rect x="1084.0" y="931.0" width="53.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1087.0" y="942.0">[pool..</text>
</g>
<g>
<title>java/lang/Thread.run (180 samples, 4.52%)</title><rect x="1084.0" y="915.0" width="53.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1087.0" y="926.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (180 samples, 4.52%)</title><rect x="1084.0" y="899.0" width="53.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1087.0" y="910.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (180 samples, 4.52%)</title><rect x="1084.0" y="883.0" width="53.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.0" y="894.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$93/950694683.run (180 samples, 4.52%)</title><rect x="1084.0" y="867.0" width="53.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1087.0" y="878.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$flush$9 (180 samples, 4.52%)</title><rect x="1084.0" y="851.0" width="53.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.0" y="862.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.serialize (180 samples, 4.52%)</title><rect x="1084.0" y="835.0" width="53.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.0" y="846.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.serialize (180 samples, 4.52%)</title><rect x="1084.0" y="819.0" width="53.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.0" y="830.0">ru/ma..</text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.05%)</title><rect x="1084.3" y="803.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1087.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.05%)</title><rect x="1084.3" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1087.3" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.05%)</title><rect x="1084.3" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1087.3" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.05%)</title><rect x="1084.3" y="755.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1087.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/269091042.getAsBoolean (1 samples, 0.03%)</title><rect x="1084.6" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.03%)</title><rect x="1084.6" y="723.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1087.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.03%)</title><rect x="1084.6" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1087.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="1084.6" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1087.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="1084.6" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1087.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.03%)</title><rect x="1084.6" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1087.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.03%)</title><rect x="1084.6" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (177 samples, 4.44%)</title><rect x="1084.9" y="803.0" width="52.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.9" y="814.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.15%)</title><rect x="1084.9" y="787.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.9" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.15%)</title><rect x="1084.9" y="771.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1087.9" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="1084.9" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1087.9" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="1085.2" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1088.2" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.10%)</title><rect x="1085.5" y="755.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1088.5" y="766.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.08%)</title><rect x="1085.8" y="739.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1088.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.08%)</title><rect x="1085.8" y="723.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1088.8" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.03%)</title><rect x="1086.1" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1089.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="1086.4" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1089.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (169 samples, 4.24%)</title><rect x="1086.7" y="787.0" width="50.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1089.7" y="798.0">sun/n..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.05%)</title><rect x="1087.0" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1090.0" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.03%)</title><rect x="1087.3" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1090.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.03%)</title><rect x="1087.3" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.03%)</title><rect x="1087.3" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.03%)</title><rect x="1087.3" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1090.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.03%)</title><rect x="1087.3" y="691.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1090.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (163 samples, 4.09%)</title><rect x="1087.6" y="771.0" width="48.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1090.6" y="782.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (163 samples, 4.09%)</title><rect x="1087.6" y="755.0" width="48.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1090.6" y="766.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (163 samples, 4.09%)</title><rect x="1087.6" y="739.0" width="48.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.6" y="750.0">sun/..</text>
</g>
<g>
<title>[unknown] (162 samples, 4.06%)</title><rect x="1087.9" y="723.0" width="47.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1090.9" y="734.0">[unk..</text>
</g>
<g>
<title>__libc_write (156 samples, 3.91%)</title><rect x="1087.9" y="707.0" width="46.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1090.9" y="718.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (123 samples, 3.09%)</title><rect x="1097.6" y="691.0" width="36.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1100.6" y="702.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (123 samples, 3.09%)</title><rect x="1097.6" y="675.0" width="36.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1100.6" y="686.0">do_..</text>
</g>
<g>
<title>__x64_sys_write (112 samples, 2.81%)</title><rect x="1100.9" y="659.0" width="33.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1103.9" y="670.0">__..</text>
</g>
<g>
<title>ksys_write (112 samples, 2.81%)</title><rect x="1100.9" y="643.0" width="33.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1103.9" y="654.0">ks..</text>
</g>
<g>
<title>__f_unlock_pos (2 samples, 0.05%)</title><rect x="1101.2" y="627.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1104.2" y="638.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.05%)</title><rect x="1101.2" y="611.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1104.2" y="622.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.08%)</title><rect x="1101.8" y="627.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1104.8" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="1101.8" y="611.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1104.8" y="622.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="1102.1" y="611.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1105.1" y="622.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="1102.4" y="595.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1105.4" y="606.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="1102.7" y="627.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1105.7" y="638.0"></text>
</g>
<g>
<title>vfs_write (105 samples, 2.63%)</title><rect x="1103.0" y="627.0" width="31.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1106.0" y="638.0">vf..</text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.03%)</title><rect x="1103.3" y="611.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1106.3" y="622.0"></text>
</g>
<g>
<title>__vfs_write (94 samples, 2.36%)</title><rect x="1103.6" y="611.0" width="27.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1106.6" y="622.0">_..</text>
</g>
<g>
<title>new_sync_write (94 samples, 2.36%)</title><rect x="1103.6" y="595.0" width="27.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1106.6" y="606.0">n..</text>
</g>
<g>
<title>down_write_trylock (1 samples, 0.03%)</title><rect x="1103.9" y="579.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1106.9" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (92 samples, 2.31%)</title><rect x="1104.1" y="579.0" width="27.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1107.1" y="590.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (87 samples, 2.18%)</title><rect x="1104.1" y="563.0" width="25.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1107.1" y="574.0">_..</text>
</g>
<g>
<title>ext4_da_write_end (4 samples, 0.10%)</title><rect x="1104.1" y="547.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1107.1" y="558.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.08%)</title><rect x="1105.3" y="547.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1108.3" y="558.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="1105.6" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1108.6" y="542.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="1105.6" y="515.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1108.6" y="526.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.03%)</title><rect x="1105.9" y="531.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1108.9" y="542.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.03%)</title><rect x="1105.9" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1108.9" y="526.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.03%)</title><rect x="1105.9" y="499.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1108.9" y="510.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.03%)</title><rect x="1105.9" y="483.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1108.9" y="494.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.03%)</title><rect x="1105.9" y="467.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1108.9" y="478.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.03%)</title><rect x="1105.9" y="451.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1108.9" y="462.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (1 samples, 0.03%)</title><rect x="1105.9" y="435.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1108.9" y="446.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.03%)</title><rect x="1105.9" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1108.9" y="430.0"></text>
</g>
<g>
<title>generic_perform_write (79 samples, 1.98%)</title><rect x="1106.2" y="547.0" width="23.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1109.2" y="558.0">g..</text>
</g>
<g>
<title>_cond_resched (2 samples, 0.05%)</title><rect x="1106.8" y="531.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1109.8" y="542.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="1107.1" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1110.1" y="526.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (2 samples, 0.05%)</title><rect x="1107.4" y="531.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1110.4" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (18 samples, 0.45%)</title><rect x="1108.0" y="531.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1111.0" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (9 samples, 0.23%)</title><rect x="1108.0" y="515.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1111.0" y="526.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.03%)</title><rect x="1108.0" y="499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1111.0" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (8 samples, 0.20%)</title><rect x="1108.3" y="499.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1111.3" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="1108.6" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1111.6" y="494.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.03%)</title><rect x="1108.9" y="483.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1111.9" y="494.0"></text>
</g>
<g>
<title>start_this_handle (5 samples, 0.13%)</title><rect x="1109.2" y="483.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1112.2" y="494.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.03%)</title><rect x="1110.4" y="467.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1113.4" y="478.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.03%)</title><rect x="1110.7" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1113.7" y="526.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.03%)</title><rect x="1111.0" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1114.0" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (5 samples, 0.13%)</title><rect x="1111.3" y="515.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1114.3" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.13%)</title><rect x="1111.3" y="499.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1114.3" y="510.0"></text>
</g>
<g>
<title>__page_cache_alloc (1 samples, 0.03%)</title><rect x="1111.6" y="483.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1114.6" y="494.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.03%)</title><rect x="1111.6" y="467.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1114.6" y="478.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.03%)</title><rect x="1111.6" y="451.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1114.6" y="462.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="1111.6" y="435.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1114.6" y="446.0"></text>
</g>
<g>
<title>prep_new_page (1 samples, 0.03%)</title><rect x="1111.6" y="419.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1114.6" y="430.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (1 samples, 0.03%)</title><rect x="1111.8" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1114.8" y="494.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.03%)</title><rect x="1111.8" y="467.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1114.8" y="478.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.05%)</title><rect x="1112.1" y="483.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1115.1" y="494.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.05%)</title><rect x="1112.1" y="467.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1115.1" y="478.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.03%)</title><rect x="1112.4" y="451.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1115.4" y="462.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.03%)</title><rect x="1112.7" y="515.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1115.7" y="526.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.03%)</title><rect x="1113.0" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1116.0" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_end (51 samples, 1.28%)</title><rect x="1113.3" y="531.0" width="15.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1116.3" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_stop (5 samples, 0.13%)</title><rect x="1113.9" y="515.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1116.9" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_stop (5 samples, 0.13%)</title><rect x="1113.9" y="499.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1116.9" y="510.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.05%)</title><rect x="1114.5" y="483.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1117.5" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.05%)</title><rect x="1114.5" y="467.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1117.5" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="1114.5" y="451.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1117.5" y="462.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="1115.1" y="483.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1118.1" y="494.0"></text>
</g>
<g>
<title>generic_write_end (44 samples, 1.10%)</title><rect x="1115.4" y="515.0" width="13.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1118.4" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (37 samples, 0.93%)</title><rect x="1116.0" y="499.0" width="10.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1119.0" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (37 samples, 0.93%)</title><rect x="1116.0" y="483.0" width="10.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1119.0" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (4 samples, 0.10%)</title><rect x="1116.0" y="467.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1119.0" y="478.0"></text>
</g>
<g>
<title>ext4_journal_check_start (2 samples, 0.05%)</title><rect x="1116.0" y="451.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1119.0" y="462.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="1116.3" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1119.3" y="446.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.05%)</title><rect x="1116.6" y="451.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1119.6" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (33 samples, 0.83%)</title><rect x="1117.2" y="467.0" width="9.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1120.2" y="478.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.05%)</title><rect x="1117.5" y="451.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1120.5" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (25 samples, 0.63%)</title><rect x="1118.1" y="451.0" width="7.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1121.1" y="462.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.03%)</title><rect x="1120.7" y="435.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1123.7" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (14 samples, 0.35%)</title><rect x="1121.0" y="435.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1124.0" y="446.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.05%)</title><rect x="1121.0" y="419.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1124.0" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (12 samples, 0.30%)</title><rect x="1121.6" y="419.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1124.6" y="430.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="1122.2" y="403.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1125.2" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (3 samples, 0.08%)</title><rect x="1122.8" y="403.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1125.8" y="414.0"></text>
</g>
<g>
<title>crypto_shash_update (5 samples, 0.13%)</title><rect x="1123.7" y="403.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1126.7" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (5 samples, 0.13%)</title><rect x="1123.7" y="387.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1126.7" y="398.0"></text>
</g>
<g>
<title>from_kgid (1 samples, 0.03%)</title><rect x="1125.2" y="435.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1128.2" y="446.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.03%)</title><rect x="1125.2" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1128.2" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (5 samples, 0.13%)</title><rect x="1125.5" y="451.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1128.5" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (4 samples, 0.10%)</title><rect x="1125.5" y="435.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1128.5" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (3 samples, 0.08%)</title><rect x="1125.8" y="419.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1128.8" y="430.0"></text>
</g>
<g>
<title>__find_get_block (3 samples, 0.08%)</title><rect x="1125.8" y="403.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1128.8" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.03%)</title><rect x="1126.6" y="435.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1129.6" y="446.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.03%)</title><rect x="1126.6" y="419.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1129.6" y="430.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.03%)</title><rect x="1126.6" y="403.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1129.6" y="414.0"></text>
</g>
<g>
<title>block_write_end (4 samples, 0.10%)</title><rect x="1126.9" y="499.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1129.9" y="510.0"></text>
</g>
<g>
<title>__block_commit_write.isra.41 (4 samples, 0.10%)</title><rect x="1126.9" y="483.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1129.9" y="494.0"></text>
</g>
<g>
<title>mark_buffer_dirty (2 samples, 0.05%)</title><rect x="1127.5" y="467.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1130.5" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.03%)</title><rect x="1128.1" y="499.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1131.1" y="510.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (3 samples, 0.08%)</title><rect x="1128.4" y="531.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1131.4" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="1128.7" y="515.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1131.7" y="526.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.03%)</title><rect x="1129.3" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1132.3" y="542.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.03%)</title><rect x="1129.6" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1132.6" y="558.0"></text>
</g>
<g>
<title>ext4_write_checks (2 samples, 0.05%)</title><rect x="1129.9" y="563.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1132.9" y="574.0"></text>
</g>
<g>
<title>generic_write_checks (2 samples, 0.05%)</title><rect x="1129.9" y="547.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1132.9" y="558.0"></text>
</g>
<g>
<title>up_write (3 samples, 0.08%)</title><rect x="1130.5" y="563.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1133.5" y="574.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="1131.4" y="611.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1134.4" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.15%)</title><rect x="1131.7" y="611.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1134.7" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="1131.7" y="595.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1134.7" y="606.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.13%)</title><rect x="1132.0" y="595.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1135.0" y="606.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="1132.0" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1135.0" y="590.0"></text>
</g>
<g>
<title>selinux_file_permission (4 samples, 0.10%)</title><rect x="1132.3" y="579.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1135.3" y="590.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.03%)</title><rect x="1133.2" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1136.2" y="574.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="1133.2" y="547.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1136.2" y="558.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="1133.2" y="531.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1136.2" y="542.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.05%)</title><rect x="1133.5" y="611.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1136.5" y="622.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.10%)</title><rect x="1134.0" y="707.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1137.0" y="718.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.05%)</title><rect x="1135.2" y="707.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1138.2" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.08%)</title><rect x="1135.8" y="771.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1138.8" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="1136.1" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.1" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.03%)</title><rect x="1136.1" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.03%)</title><rect x="1136.4" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1139.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.05%)</title><rect x="1136.7" y="787.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1139.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="1137.0" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1140.0" y="782.0"></text>
</g>
<g>
<title>[pool-1-thread-4 tid=18870] (178 samples, 4.47%)</title><rect x="1137.3" y="931.0" width="52.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1140.3" y="942.0">[pool..</text>
</g>
<g>
<title>java/lang/Thread.run (178 samples, 4.47%)</title><rect x="1137.3" y="915.0" width="52.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1140.3" y="926.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (178 samples, 4.47%)</title><rect x="1137.3" y="899.0" width="52.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1140.3" y="910.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (178 samples, 4.47%)</title><rect x="1137.3" y="883.0" width="52.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1140.3" y="894.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$93/950694683.run (178 samples, 4.47%)</title><rect x="1137.3" y="867.0" width="52.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.3" y="878.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$flush$9 (178 samples, 4.47%)</title><rect x="1137.3" y="851.0" width="52.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1140.3" y="862.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.serialize (178 samples, 4.47%)</title><rect x="1137.3" y="835.0" width="52.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.3" y="846.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.serialize (178 samples, 4.47%)</title><rect x="1137.3" y="819.0" width="52.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.3" y="830.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="1137.3" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1140.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (2 samples, 0.05%)</title><rect x="1137.6" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1140.6" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.05%)</title><rect x="1137.6" y="787.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.6" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1137.9" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1140.9" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1137.9" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1137.9" y="739.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.9" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1137.9" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1140.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="1137.9" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="1137.9" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.9" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (175 samples, 4.39%)</title><rect x="1138.2" y="803.0" width="51.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.2" y="814.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.05%)</title><rect x="1138.5" y="787.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1141.5" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.05%)</title><rect x="1138.5" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="1138.5" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.5" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="1138.8" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.8" y="766.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="1138.8" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1141.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="1138.8" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1141.8" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.03%)</title><rect x="1138.8" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1141.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (166 samples, 4.16%)</title><rect x="1139.1" y="787.0" width="49.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1142.1" y="798.0">sun/n..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.03%)</title><rect x="1139.7" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1142.7" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.03%)</title><rect x="1139.7" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1142.7" y="766.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.03%)</title><rect x="1139.7" y="739.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="1139.7" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1142.7" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="1139.7" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1142.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (159 samples, 3.99%)</title><rect x="1140.0" y="771.0" width="47.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1143.0" y="782.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (159 samples, 3.99%)</title><rect x="1140.0" y="755.0" width="47.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1143.0" y="766.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (159 samples, 3.99%)</title><rect x="1140.0" y="739.0" width="47.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1143.0" y="750.0">sun/..</text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (1 samples, 0.03%)</title><rect x="1140.9" y="723.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1143.9" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (1 samples, 0.03%)</title><rect x="1140.9" y="707.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1143.9" y="718.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.03%)</title><rect x="1140.9" y="691.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1143.9" y="702.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.03%)</title><rect x="1140.9" y="675.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1143.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (155 samples, 3.89%)</title><rect x="1141.2" y="723.0" width="45.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1144.2" y="734.0">[unk..</text>
</g>
<g>
<title>__libc_write (154 samples, 3.86%)</title><rect x="1141.2" y="707.0" width="45.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1144.2" y="718.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (125 samples, 3.14%)</title><rect x="1149.7" y="691.0" width="37.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1152.7" y="702.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (125 samples, 3.14%)</title><rect x="1149.7" y="675.0" width="37.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1152.7" y="686.0">do_..</text>
</g>
<g>
<title>__x64_sys_write (117 samples, 2.94%)</title><rect x="1152.1" y="659.0" width="34.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1155.1" y="670.0">__..</text>
</g>
<g>
<title>ksys_write (117 samples, 2.94%)</title><rect x="1152.1" y="643.0" width="34.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1155.1" y="654.0">ks..</text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.08%)</title><rect x="1152.1" y="627.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1155.1" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.08%)</title><rect x="1152.1" y="611.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1155.1" y="622.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.08%)</title><rect x="1152.1" y="595.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1155.1" y="606.0"></text>
</g>
<g>
<title>vfs_write (114 samples, 2.86%)</title><rect x="1153.0" y="627.0" width="33.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1156.0" y="638.0">vf..</text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.05%)</title><rect x="1153.3" y="611.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1156.3" y="622.0"></text>
</g>
<g>
<title>__vfs_write (102 samples, 2.56%)</title><rect x="1153.9" y="611.0" width="30.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1156.9" y="622.0">__..</text>
</g>
<g>
<title>ext4_file_write_iter (3 samples, 0.08%)</title><rect x="1153.9" y="595.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1156.9" y="606.0"></text>
</g>
<g>
<title>new_sync_write (99 samples, 2.48%)</title><rect x="1154.8" y="595.0" width="29.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1157.8" y="606.0">ne..</text>
</g>
<g>
<title>ext4_file_write_iter (97 samples, 2.43%)</title><rect x="1155.4" y="579.0" width="28.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1158.4" y="590.0">ex..</text>
</g>
<g>
<title>__generic_file_write_iter (90 samples, 2.26%)</title><rect x="1156.0" y="563.0" width="26.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1159.0" y="574.0">_..</text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.03%)</title><rect x="1156.5" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1159.5" y="558.0"></text>
</g>
<g>
<title>generic_perform_write (87 samples, 2.18%)</title><rect x="1156.8" y="547.0" width="25.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1159.8" y="558.0">g..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="1157.1" y="531.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1160.1" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (28 samples, 0.70%)</title><rect x="1157.4" y="531.0" width="8.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1160.4" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (9 samples, 0.23%)</title><rect x="1158.3" y="515.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1161.3" y="526.0"></text>
</g>
<g>
<title>ext4_journal_check_start (2 samples, 0.05%)</title><rect x="1158.3" y="499.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1161.3" y="510.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="1158.6" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1161.6" y="494.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="1158.6" y="467.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1161.6" y="478.0"></text>
</g>
<g>
<title>jbd2__journal_start (7 samples, 0.18%)</title><rect x="1158.9" y="499.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1161.9" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.05%)</title><rect x="1158.9" y="483.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1161.9" y="494.0"></text>
</g>
<g>
<title>start_this_handle (5 samples, 0.13%)</title><rect x="1159.5" y="483.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1162.5" y="494.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="1161.0" y="515.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1164.0" y="526.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.03%)</title><rect x="1161.3" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1164.3" y="526.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.03%)</title><rect x="1161.6" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1164.6" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (11 samples, 0.28%)</title><rect x="1161.9" y="515.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1164.9" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (10 samples, 0.25%)</title><rect x="1161.9" y="499.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1164.9" y="510.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="1162.5" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1165.5" y="494.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="1162.5" y="467.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1165.5" y="478.0"></text>
</g>
<g>
<title>find_get_entry (7 samples, 0.18%)</title><rect x="1162.8" y="483.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1165.8" y="494.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.10%)</title><rect x="1163.4" y="467.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1166.4" y="478.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.03%)</title><rect x="1164.2" y="451.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1167.2" y="462.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.03%)</title><rect x="1164.5" y="467.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1167.5" y="478.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.03%)</title><rect x="1164.8" y="499.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1167.8" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.03%)</title><rect x="1165.1" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1168.1" y="526.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.03%)</title><rect x="1165.4" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1168.4" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_end (51 samples, 1.28%)</title><rect x="1165.7" y="531.0" width="15.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1168.7" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.08%)</title><rect x="1166.0" y="515.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1169.0" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.08%)</title><rect x="1166.0" y="499.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1169.0" y="510.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.03%)</title><rect x="1166.0" y="483.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1169.0" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="1166.0" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1169.0" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1166.0" y="451.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1169.0" y="462.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="1166.3" y="483.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1169.3" y="494.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.03%)</title><rect x="1166.9" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1169.9" y="526.0"></text>
</g>
<g>
<title>generic_write_end (46 samples, 1.15%)</title><rect x="1167.2" y="515.0" width="13.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1170.2" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (40 samples, 1.00%)</title><rect x="1167.5" y="499.0" width="11.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1170.5" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (38 samples, 0.95%)</title><rect x="1168.1" y="483.0" width="11.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1171.1" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.03%)</title><rect x="1168.4" y="467.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1171.4" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (36 samples, 0.90%)</title><rect x="1168.7" y="467.0" width="10.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1171.7" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (25 samples, 0.63%)</title><rect x="1168.7" y="451.0" width="7.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1171.7" y="462.0"></text>
</g>
<g>
<title>__brelse (1 samples, 0.03%)</title><rect x="1170.2" y="435.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1173.2" y="446.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (2 samples, 0.05%)</title><rect x="1170.5" y="435.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1173.5" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (15 samples, 0.38%)</title><rect x="1171.1" y="435.0" width="4.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1174.1" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (13 samples, 0.33%)</title><rect x="1171.6" y="419.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1174.6" y="430.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="1171.6" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1174.6" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (6 samples, 0.15%)</title><rect x="1171.9" y="403.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1174.9" y="414.0"></text>
</g>
<g>
<title>crypto_shash_update (6 samples, 0.15%)</title><rect x="1173.7" y="403.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1176.7" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (6 samples, 0.15%)</title><rect x="1173.7" y="387.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1176.7" y="398.0"></text>
</g>
<g>
<title>from_kgid (1 samples, 0.03%)</title><rect x="1175.5" y="435.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1178.5" y="446.0"></text>
</g>
<g>
<title>from_kprojid (1 samples, 0.03%)</title><rect x="1175.8" y="435.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1178.8" y="446.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (11 samples, 0.28%)</title><rect x="1176.1" y="451.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1179.1" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (10 samples, 0.25%)</title><rect x="1176.1" y="435.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1179.1" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (5 samples, 0.13%)</title><rect x="1177.3" y="419.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1180.3" y="430.0"></text>
</g>
<g>
<title>__find_get_block (3 samples, 0.08%)</title><rect x="1177.9" y="403.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1180.9" y="414.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.03%)</title><rect x="1178.5" y="387.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1181.5" y="398.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.03%)</title><rect x="1178.8" y="419.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1181.8" y="430.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.03%)</title><rect x="1179.0" y="435.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1182.0" y="446.0"></text>
</g>
<g>
<title>block_write_end (3 samples, 0.08%)</title><rect x="1179.3" y="499.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1182.3" y="510.0"></text>
</g>
<g>
<title>__block_commit_write.isra.41 (2 samples, 0.05%)</title><rect x="1179.6" y="483.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1182.6" y="494.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.05%)</title><rect x="1180.2" y="499.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1183.2" y="510.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.05%)</title><rect x="1180.8" y="531.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1183.8" y="542.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (3 samples, 0.08%)</title><rect x="1181.4" y="531.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1184.4" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="1181.7" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1184.7" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="1182.0" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1185.0" y="526.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.03%)</title><rect x="1182.3" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1185.3" y="542.0"></text>
</g>
<g>
<title>down_write_trylock (1 samples, 0.03%)</title><rect x="1182.6" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1185.6" y="574.0"></text>
</g>
<g>
<title>ext4_write_checks (3 samples, 0.08%)</title><rect x="1182.9" y="563.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1185.9" y="574.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.54 (1 samples, 0.03%)</title><rect x="1182.9" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1185.9" y="558.0"></text>
</g>
<g>
<title>generic_write_checks (2 samples, 0.05%)</title><rect x="1183.2" y="547.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1186.2" y="558.0"></text>
</g>
<g>
<title>up_write (1 samples, 0.03%)</title><rect x="1183.8" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1186.8" y="574.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="1184.1" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1187.1" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.20%)</title><rect x="1184.4" y="611.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1187.4" y="622.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="1184.4" y="595.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1187.4" y="606.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="1184.7" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1187.7" y="606.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.13%)</title><rect x="1185.0" y="595.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1188.0" y="606.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="1185.3" y="579.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1188.3" y="590.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="1185.3" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1188.3" y="574.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="1185.6" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1188.6" y="590.0"></text>
</g>
<g>
<title>selinux_file_permission (2 samples, 0.05%)</title><rect x="1185.9" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1188.9" y="590.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.03%)</title><rect x="1186.2" y="563.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1189.2" y="574.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.03%)</title><rect x="1186.4" y="595.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1189.4" y="606.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="1186.7" y="707.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1189.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.10%)</title><rect x="1187.0" y="771.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1190.0" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.05%)</title><rect x="1187.0" y="755.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (2 samples, 0.05%)</title><rect x="1187.6" y="755.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.15%)</title><rect x="1188.2" y="787.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="1189.7" y="771.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.7" y="782.0"></text>
</g>
</g>
</svg>
