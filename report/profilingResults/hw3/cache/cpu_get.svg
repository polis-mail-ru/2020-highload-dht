<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (804 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.25%)</title><rect x="10.0" y="947.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.25%)</title><rect x="10.0" y="931.0" width="2.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>JavaThread::in_retryable_allocation() const (1 samples, 0.12%)</title><rect x="10.0" y="915.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="10.0" y="899.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="10.0" y="883.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="10.0" y="867.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="10.0" y="851.0" width="1.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.12%)</title><rect x="10.0" y="835.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="11.5" y="915.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="14.5" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.12%)</title><rect x="12.9" y="947.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="15.9" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.12%)</title><rect x="12.9" y="931.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="15.9" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.12%)</title><rect x="12.9" y="915.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="15.9" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.12%)</title><rect x="12.9" y="899.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="15.9" y="910.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.12%)</title><rect x="12.9" y="883.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="15.9" y="894.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.12%)</title><rect x="12.9" y="867.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="15.9" y="878.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.12%)</title><rect x="12.9" y="851.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="15.9" y="862.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.12%)</title><rect x="12.9" y="835.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="15.9" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.run (492 samples, 61.19%)</title><rect x="14.4" y="947.0" width="722.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.4" y="958.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (492 samples, 61.19%)</title><rect x="14.4" y="931.0" width="722.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.4" y="942.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (492 samples, 61.19%)</title><rect x="14.4" y="915.0" width="722.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.4" y="926.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.25%)</title><rect x="17.3" y="899.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.25%)</title><rect x="17.3" y="883.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.25%)</title><rect x="17.3" y="867.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.25%)</title><rect x="17.3" y="851.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.3" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$100/633091798.run (1 samples, 0.12%)</title><rect x="18.8" y="835.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (215 samples, 26.74%)</title><rect x="20.3" y="899.0" width="315.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.3" y="910.0">java/util/concurrent/ThreadPoolExecutor.get..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (214 samples, 26.62%)</title><rect x="21.7" y="883.0" width="314.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.7" y="894.0">java/util/concurrent/ArrayBlockingQueue.take</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (178 samples, 22.14%)</title><rect x="21.7" y="867.0" width="261.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.7" y="878.0">java/util/concurrent/locks/Abstract..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.25%)</title><rect x="27.6" y="851.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.12%)</title><rect x="30.5" y="851.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (14 samples, 1.74%)</title><rect x="32.0" y="851.0" width="20.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.50%)</title><rect x="32.0" y="835.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 1.24%)</title><rect x="37.9" y="835.0" width="14.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 1.12%)</title><rect x="37.9" y="819.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.87%)</title><rect x="37.9" y="803.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.87%)</title><rect x="37.9" y="787.0" width="10.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="40.9" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.87%)</title><rect x="37.9" y="771.0" width="10.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="40.9" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.50%)</title><rect x="42.3" y="755.0" width="5.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="45.3" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.50%)</title><rect x="42.3" y="739.0" width="5.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="45.3" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.50%)</title><rect x="42.3" y="723.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="45.3" y="734.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.50%)</title><rect x="42.3" y="707.0" width="5.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="45.3" y="718.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.50%)</title><rect x="42.3" y="691.0" width="5.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="45.3" y="702.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.12%)</title><rect x="42.3" y="675.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="45.3" y="686.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.37%)</title><rect x="43.8" y="675.0" width="4.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="46.8" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.37%)</title><rect x="43.8" y="659.0" width="4.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="46.8" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.37%)</title><rect x="43.8" y="643.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="46.8" y="654.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.25%)</title><rect x="48.2" y="803.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="51.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.12%)</title><rect x="51.1" y="819.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (155 samples, 19.28%)</title><rect x="52.6" y="851.0" width="227.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.6" y="862.0">java/util/concurrent/locks/Loc..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (154 samples, 19.15%)</title><rect x="54.0" y="835.0" width="226.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.0" y="846.0">jdk/internal/misc/Unsafe.park</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.12%)</title><rect x="59.9" y="819.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="62.9" y="830.0"></text>
</g>
<g>
<title>Unsafe_Park (91 samples, 11.32%)</title><rect x="61.4" y="819.0" width="133.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="64.4" y="830.0">Unsafe_Park</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.37%)</title><rect x="64.3" y="803.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="67.3" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.12%)</title><rect x="67.2" y="787.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="70.2" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.12%)</title><rect x="67.2" y="771.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="70.2" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.12%)</title><rect x="67.2" y="755.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="70.2" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.12%)</title><rect x="67.2" y="739.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="70.2" y="750.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.12%)</title><rect x="67.2" y="723.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="70.2" y="734.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.12%)</title><rect x="67.2" y="707.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="70.2" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.12%)</title><rect x="67.2" y="691.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="70.2" y="702.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.12%)</title><rect x="68.7" y="803.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="71.7" y="814.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (24 samples, 2.99%)</title><rect x="70.2" y="803.0" width="35.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="73.2" y="814.0">Par..</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.50%)</title><rect x="92.2" y="787.0" width="5.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="95.2" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.12%)</title><rect x="93.7" y="771.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="96.7" y="782.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.25%)</title><rect x="95.1" y="771.0" width="3.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="98.1" y="782.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.25%)</title><rect x="98.1" y="787.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="101.1" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.37%)</title><rect x="101.0" y="787.0" width="4.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="104.0" y="798.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.12%)</title><rect x="105.4" y="803.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="108.4" y="814.0"></text>
</g>
<g>
<title>__lll_unlock_wake (48 samples, 5.97%)</title><rect x="106.9" y="803.0" width="70.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="109.9" y="814.0">__lll_un..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 3.23%)</title><rect x="139.2" y="787.0" width="38.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="142.2" y="798.0">ent..</text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.25%)</title><rect x="139.2" y="771.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="142.2" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 2.99%)</title><rect x="142.1" y="771.0" width="35.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="145.1" y="782.0">do_..</text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 1.37%)</title><rect x="161.2" y="755.0" width="16.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="164.2" y="766.0"></text>
</g>
<g>
<title>do_futex (8 samples, 1.00%)</title><rect x="161.2" y="739.0" width="11.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="164.2" y="750.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.87%)</title><rect x="162.6" y="723.0" width="10.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="165.6" y="734.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.37%)</title><rect x="168.5" y="707.0" width="4.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="171.5" y="718.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (1 samples, 0.12%)</title><rect x="171.4" y="691.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="174.4" y="702.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.37%)</title><rect x="172.9" y="739.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="175.9" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.25%)</title><rect x="177.3" y="803.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="180.3" y="814.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.25%)</title><rect x="180.2" y="803.0" width="3.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="183.2" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (5 samples, 0.62%)</title><rect x="183.2" y="803.0" width="7.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="186.2" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (3 samples, 0.37%)</title><rect x="190.5" y="803.0" width="4.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="193.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 6.97%)</title><rect x="194.9" y="819.0" width="82.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="197.9" y="830.0">[unknown]</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.12%)</title><rect x="194.9" y="803.0" width="1.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="197.9" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (6 samples, 0.75%)</title><rect x="196.4" y="803.0" width="8.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="199.4" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.12%)</title><rect x="205.2" y="803.0" width="1.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="208.2" y="814.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (48 samples, 5.97%)</title><rect x="206.7" y="803.0" width="70.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="209.7" y="814.0">pthread_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 3.73%)</title><rect x="233.1" y="787.0" width="44.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="236.1" y="798.0">entr..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.12%)</title><rect x="233.1" y="771.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="236.1" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 3.61%)</title><rect x="234.6" y="771.0" width="42.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="237.6" y="782.0">do_s..</text>
</g>
<g>
<title>__x64_sys_futex (26 samples, 3.23%)</title><rect x="239.0" y="755.0" width="38.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="242.0" y="766.0">__x..</text>
</g>
<g>
<title>do_futex (26 samples, 3.23%)</title><rect x="239.0" y="739.0" width="38.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="242.0" y="750.0">do_..</text>
</g>
<g>
<title>drop_futex_key_refs.isra.15 (1 samples, 0.12%)</title><rect x="240.4" y="723.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="243.4" y="734.0"></text>
</g>
<g>
<title>futex_wait (23 samples, 2.86%)</title><rect x="241.9" y="723.0" width="33.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="244.9" y="734.0">fu..</text>
</g>
<g>
<title>drop_futex_key_refs.isra.15 (1 samples, 0.12%)</title><rect x="241.9" y="707.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="244.9" y="718.0"></text>
</g>
<g>
<title>futex_wait_queue_me (19 samples, 2.36%)</title><rect x="243.4" y="707.0" width="27.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="246.4" y="718.0">f..</text>
</g>
<g>
<title>plist_add (1 samples, 0.12%)</title><rect x="243.4" y="691.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="246.4" y="702.0"></text>
</g>
<g>
<title>schedule (18 samples, 2.24%)</title><rect x="244.8" y="691.0" width="26.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="247.8" y="702.0">s..</text>
</g>
<g>
<title>__sched_text_start (17 samples, 2.11%)</title><rect x="246.3" y="675.0" width="24.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="249.3" y="686.0">_..</text>
</g>
<g>
<title>finish_task_switch (17 samples, 2.11%)</title><rect x="246.3" y="659.0" width="24.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="249.3" y="670.0">f..</text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.37%)</title><rect x="271.2" y="707.0" width="4.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="274.2" y="718.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.12%)</title><rect x="274.2" y="691.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="277.2" y="702.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (1 samples, 0.12%)</title><rect x="274.2" y="675.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="277.2" y="686.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.12%)</title><rect x="275.6" y="723.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="278.6" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.25%)</title><rect x="277.1" y="819.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="280.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.12%)</title><rect x="280.0" y="851.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.12%)</title><rect x="281.5" y="851.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (7 samples, 0.87%)</title><rect x="283.0" y="867.0" width="10.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="286.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (7 samples, 0.87%)</title><rect x="283.0" y="851.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (7 samples, 0.87%)</title><rect x="283.0" y="835.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="286.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (7 samples, 0.87%)</title><rect x="283.0" y="819.0" width="10.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.87%)</title><rect x="283.0" y="803.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.87%)</title><rect x="283.0" y="787.0" width="10.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.0" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.75%)</title><rect x="283.0" y="771.0" width="8.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="286.0" y="782.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.25%)</title><rect x="285.9" y="755.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="288.9" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.25%)</title><rect x="285.9" y="739.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="288.9" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.25%)</title><rect x="285.9" y="723.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="288.9" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.12%)</title><rect x="287.4" y="707.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="290.4" y="718.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.12%)</title><rect x="287.4" y="691.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="290.4" y="702.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.12%)</title><rect x="288.9" y="755.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="291.9" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.12%)</title><rect x="290.3" y="755.0" width="1.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="293.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="291.8" y="771.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="294.8" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.12%)</title><rect x="291.8" y="755.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="294.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.12%)</title><rect x="291.8" y="739.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="294.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.12%)</title><rect x="291.8" y="723.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="294.8" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.12%)</title><rect x="291.8" y="707.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="294.8" y="718.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.12%)</title><rect x="291.8" y="691.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="294.8" y="702.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.12%)</title><rect x="291.8" y="675.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="294.8" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.12%)</title><rect x="291.8" y="659.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="294.8" y="670.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.12%)</title><rect x="291.8" y="643.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="294.8" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.12%)</title><rect x="291.8" y="627.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="294.8" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.12%)</title><rect x="291.8" y="611.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="294.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (29 samples, 3.61%)</title><rect x="293.3" y="867.0" width="42.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.3" y="878.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (29 samples, 3.61%)</title><rect x="293.3" y="851.0" width="42.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="296.3" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (29 samples, 3.61%)</title><rect x="293.3" y="835.0" width="42.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="296.3" y="846.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (25 samples, 3.11%)</title><rect x="299.1" y="819.0" width="36.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="302.1" y="830.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (25 samples, 3.11%)</title><rect x="299.1" y="803.0" width="36.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.1" y="814.0">jdk..</text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.12%)</title><rect x="299.1" y="787.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="302.1" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 1.37%)</title><rect x="300.6" y="787.0" width="16.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="303.6" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.12%)</title><rect x="302.1" y="771.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="305.1" y="782.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.12%)</title><rect x="303.5" y="771.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="306.5" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.37%)</title><rect x="305.0" y="771.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="308.0" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.50%)</title><rect x="309.4" y="771.0" width="5.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="312.4" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.12%)</title><rect x="313.8" y="755.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="316.8" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.12%)</title><rect x="315.3" y="771.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="318.3" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 1.62%)</title><rect x="316.7" y="787.0" width="19.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="319.7" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 1.24%)</title><rect x="321.1" y="771.0" width="14.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="324.1" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 1.24%)</title><rect x="321.1" y="755.0" width="14.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="324.1" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 1.24%)</title><rect x="321.1" y="739.0" width="14.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="324.1" y="750.0"></text>
</g>
<g>
<title>do_futex (10 samples, 1.24%)</title><rect x="321.1" y="723.0" width="14.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="324.1" y="734.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 1.24%)</title><rect x="321.1" y="707.0" width="14.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="324.1" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.12%)</title><rect x="324.1" y="691.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="327.1" y="702.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.12%)</title><rect x="325.5" y="691.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="328.5" y="702.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.75%)</title><rect x="327.0" y="691.0" width="8.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="330.0" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.75%)</title><rect x="327.0" y="675.0" width="8.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="330.0" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.75%)</title><rect x="327.0" y="659.0" width="8.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="330.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$100/633091798.run (273 samples, 33.96%)</title><rect x="335.8" y="899.0" width="400.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.8" y="910.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$100/..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (273 samples, 33.96%)</title><rect x="335.8" y="883.0" width="400.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.8" y="894.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$proce..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (273 samples, 33.96%)</title><rect x="335.8" y="867.0" width="400.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.8" y="878.0">ru/mail/polis/service/zvladn7/AsyncService.process</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/1783644670.process (271 samples, 33.71%)</title><rect x="335.8" y="851.0" width="397.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.8" y="862.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$get$2 (271 samples, 33.71%)</title><rect x="335.8" y="835.0" width="397.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.8" y="846.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$get$2</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleGet (270 samples, 33.58%)</title><rect x="337.3" y="819.0" width="396.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.3" y="830.0">ru/mail/polis/service/zvladn7/AsyncService.handleGet</text>
</g>
<g>
<title>com/google/common/cache/LocalCache$LocalManualCache.getIfPresent (8 samples, 1.00%)</title><rect x="338.8" y="803.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="341.8" y="814.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.getIfPresent (8 samples, 1.00%)</title><rect x="338.8" y="787.0" width="11.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="341.8" y="798.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.get (8 samples, 1.00%)</title><rect x="338.8" y="771.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.8" y="782.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.getLiveEntry (4 samples, 0.50%)</title><rect x="338.8" y="755.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="341.8" y="766.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.getEntry (4 samples, 0.50%)</title><rect x="338.8" y="739.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="341.8" y="750.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.postReadCleanup (3 samples, 0.37%)</title><rect x="344.6" y="755.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="347.6" y="766.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.cleanUp (3 samples, 0.37%)</title><rect x="344.6" y="739.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.6" y="750.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.runLockedCleanup (3 samples, 0.37%)</title><rect x="344.6" y="723.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.6" y="734.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.expireEntries (2 samples, 0.25%)</title><rect x="344.6" y="707.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="347.6" y="718.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.drainRecencyQueue (2 samples, 0.25%)</title><rect x="344.6" y="691.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="347.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$AccessQueue.contains (2 samples, 0.25%)</title><rect x="344.6" y="675.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.12%)</title><rect x="347.6" y="707.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.6" y="718.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.expireEntries (1 samples, 0.12%)</title><rect x="347.6" y="691.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.recordRead (1 samples, 0.12%)</title><rect x="349.0" y="755.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="352.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (1 samples, 0.12%)</title><rect x="349.0" y="739.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (1 samples, 0.12%)</title><rect x="349.0" y="723.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (258 samples, 32.09%)</title><rect x="350.5" y="803.0" width="378.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="353.5" y="814.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.25%)</title><rect x="357.8" y="787.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="360.8" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.25%)</title><rect x="357.8" y="771.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="360.8" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.25%)</title><rect x="357.8" y="755.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="360.8" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.68] (2 samples, 0.25%)</title><rect x="357.8" y="739.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="360.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.50%)</title><rect x="360.8" y="787.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="363.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.50%)</title><rect x="360.8" y="771.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="363.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.50%)</title><rect x="360.8" y="755.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="362.2" y="739.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="365.2" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.12%)</title><rect x="362.2" y="723.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="365.2" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.25%)</title><rect x="363.7" y="739.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="366.7" y="750.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.25%)</title><rect x="363.7" y="723.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="366.7" y="734.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.25%)</title><rect x="363.7" y="707.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="366.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (244 samples, 30.35%)</title><rect x="366.6" y="787.0" width="358.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.6" y="798.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 1.62%)</title><rect x="366.6" y="771.0" width="19.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="369.6" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="384.3" y="755.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="387.3" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (231 samples, 28.73%)</title><rect x="385.7" y="771.0" width="339.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.7" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (231 samples, 28.73%)</title><rect x="385.7" y="755.0" width="339.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.7" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.12%)</title><rect x="387.2" y="739.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (229 samples, 28.48%)</title><rect x="388.7" y="739.0" width="336.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="391.7" y="750.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (228 samples, 28.36%)</title><rect x="390.1" y="723.0" width="334.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.1" y="734.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (8 samples, 1.00%)</title><rect x="391.6" y="707.0" width="11.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="394.6" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.25%)</title><rect x="394.5" y="691.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="397.5" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.12%)</title><rect x="397.5" y="691.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="400.5" y="702.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="398.9" y="691.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="401.9" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.25%)</title><rect x="400.4" y="691.0" width="2.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="403.4" y="702.0"></text>
</g>
<g>
<title>__send (217 samples, 26.99%)</title><rect x="403.3" y="707.0" width="318.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="406.3" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (207 samples, 25.75%)</title><rect x="418.0" y="691.0" width="303.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="421.0" y="702.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.12%)</title><rect x="418.0" y="675.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="421.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (206 samples, 25.62%)</title><rect x="419.5" y="675.0" width="302.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="422.5" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.12%)</title><rect x="422.4" y="659.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="425.4" y="670.0"></text>
</g>
<g>
<title>__x64_sys_sendto (203 samples, 25.25%)</title><rect x="423.9" y="659.0" width="297.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="426.9" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (202 samples, 25.12%)</title><rect x="425.3" y="643.0" width="296.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="428.3" y="654.0">__sys_sendto</text>
</g>
<g>
<title>fput (1 samples, 0.12%)</title><rect x="426.8" y="627.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="429.8" y="638.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.12%)</title><rect x="426.8" y="611.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="429.8" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (194 samples, 24.13%)</title><rect x="428.3" y="627.0" width="284.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="431.3" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (183 samples, 22.76%)</title><rect x="432.7" y="611.0" width="268.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="435.7" y="622.0">inet6_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.12%)</title><rect x="434.2" y="595.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="437.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (181 samples, 22.51%)</title><rect x="435.6" y="595.0" width="265.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="438.6" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.12%)</title><rect x="438.6" y="579.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="441.6" y="590.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.12%)</title><rect x="440.0" y="579.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="443.0" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.37%)</title><rect x="441.5" y="579.0" width="4.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="444.5" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (172 samples, 21.39%)</title><rect x="445.9" y="579.0" width="252.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="448.9" y="590.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.25%)</title><rect x="451.8" y="563.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="454.8" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.12%)</title><rect x="454.7" y="563.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="457.7" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.12%)</title><rect x="454.7" y="547.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="457.7" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.87%)</title><rect x="456.2" y="563.0" width="10.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="459.2" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.75%)</title><rect x="457.6" y="547.0" width="8.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="460.6" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (4 samples, 0.50%)</title><rect x="457.6" y="531.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="460.6" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.50%)</title><rect x="457.6" y="515.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="460.6" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.12%)</title><rect x="462.0" y="499.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="465.0" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.12%)</title><rect x="463.5" y="531.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="466.5" y="542.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.12%)</title><rect x="465.0" y="531.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="468.0" y="542.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.12%)</title><rect x="465.0" y="515.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="468.0" y="526.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.12%)</title><rect x="466.4" y="563.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="469.4" y="574.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.12%)</title><rect x="466.4" y="547.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="469.4" y="558.0"></text>
</g>
<g>
<title>tcp_push (155 samples, 19.28%)</title><rect x="467.9" y="563.0" width="227.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="470.9" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (155 samples, 19.28%)</title><rect x="467.9" y="547.0" width="227.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="470.9" y="558.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.12%)</title><rect x="467.9" y="531.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="470.9" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (154 samples, 19.15%)</title><rect x="469.4" y="531.0" width="226.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="472.4" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (143 samples, 17.79%)</title><rect x="472.3" y="515.0" width="209.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="475.3" y="526.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.12%)</title><rect x="482.6" y="499.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="485.6" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (134 samples, 16.67%)</title><rect x="484.1" y="499.0" width="196.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="487.1" y="510.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (133 samples, 16.54%)</title><rect x="485.5" y="483.0" width="195.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="488.5" y="494.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (130 samples, 16.17%)</title><rect x="485.5" y="467.0" width="190.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="488.5" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.12%)</title><rect x="485.5" y="451.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="488.5" y="462.0"></text>
</g>
<g>
<title>selinux_ipv4_output (1 samples, 0.12%)</title><rect x="485.5" y="435.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="488.5" y="446.0"></text>
</g>
<g>
<title>ip_output (126 samples, 15.67%)</title><rect x="487.0" y="451.0" width="184.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="490.0" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (119 samples, 14.80%)</title><rect x="489.9" y="435.0" width="174.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="492.9" y="446.0">ip_finish_output</text>
</g>
<g>
<title>__ip_finish_output (117 samples, 14.55%)</title><rect x="491.4" y="419.0" width="171.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="494.4" y="430.0">__ip_finish_output</text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.12%)</title><rect x="492.9" y="403.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="495.9" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (114 samples, 14.18%)</title><rect x="494.3" y="403.0" width="167.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="497.3" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (99 samples, 12.31%)</title><rect x="500.2" y="387.0" width="145.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="503.2" y="398.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.20 (97 samples, 12.06%)</title><rect x="503.1" y="371.0" width="142.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="506.1" y="382.0">do_softirq.part.20</text>
</g>
<g>
<title>do_softirq_own_stack (96 samples, 11.94%)</title><rect x="504.6" y="355.0" width="140.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="507.6" y="366.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (95 samples, 11.82%)</title><rect x="504.6" y="339.0" width="139.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="507.6" y="350.0">__softirqentry_te..</text>
</g>
<g>
<title>net_rx_action (93 samples, 11.57%)</title><rect x="506.1" y="323.0" width="136.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="509.1" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (92 samples, 11.44%)</title><rect x="507.5" y="307.0" width="135.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="510.5" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (91 samples, 11.32%)</title><rect x="509.0" y="291.0" width="133.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="512.0" y="302.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (89 samples, 11.07%)</title><rect x="509.0" y="275.0" width="130.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="512.0" y="286.0">__netif_receive_..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.50%)</title><rect x="509.0" y="259.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="512.0" y="270.0"></text>
</g>
<g>
<title>ip_rcv (85 samples, 10.57%)</title><rect x="514.9" y="259.0" width="124.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="517.9" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.12%)</title><rect x="516.3" y="243.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="519.3" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (83 samples, 10.32%)</title><rect x="517.8" y="243.0" width="121.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="520.8" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (82 samples, 10.20%)</title><rect x="519.3" y="227.0" width="120.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="522.3" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (82 samples, 10.20%)</title><rect x="519.3" y="211.0" width="120.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="522.3" y="222.0">ip_local_delive..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (81 samples, 10.07%)</title><rect x="520.7" y="195.0" width="118.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="523.7" y="206.0">ip_protocol_de..</text>
</g>
<g>
<title>sock_put (1 samples, 0.12%)</title><rect x="520.7" y="179.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="523.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.12%)</title><rect x="522.2" y="179.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="525.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (79 samples, 9.83%)</title><rect x="523.7" y="179.0" width="115.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="526.7" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.12%)</title><rect x="523.7" y="163.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="526.7" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.25%)</title><rect x="525.1" y="163.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="528.1" y="174.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.12%)</title><rect x="528.1" y="163.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="531.1" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 1.00%)</title><rect x="529.6" y="163.0" width="11.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="532.6" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.50%)</title><rect x="529.6" y="147.0" width="5.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="532.6" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.50%)</title><rect x="535.4" y="147.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="538.4" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.37%)</title><rect x="536.9" y="131.0" width="4.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="539.9" y="142.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (1 samples, 0.12%)</title><rect x="539.8" y="115.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="542.8" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (66 samples, 8.21%)</title><rect x="541.3" y="163.0" width="96.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="544.3" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.12%)</title><rect x="541.3" y="147.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="544.3" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.12%)</title><rect x="542.8" y="147.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="545.8" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (64 samples, 7.96%)</title><rect x="544.2" y="147.0" width="94.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="547.2" y="158.0">tcp_rcv_est..</text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.62%)</title><rect x="547.2" y="131.0" width="7.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="550.2" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.62%)</title><rect x="547.2" y="115.0" width="7.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="550.2" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.12%)</title><rect x="548.6" y="99.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="551.6" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.37%)</title><rect x="550.1" y="99.0" width="4.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="553.1" y="110.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.37%)</title><rect x="550.1" y="83.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="553.1" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.37%)</title><rect x="550.1" y="67.0" width="4.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="553.1" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.12%)</title><rect x="554.5" y="131.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="557.5" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (34 samples, 4.23%)</title><rect x="556.0" y="131.0" width="49.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="559.0" y="142.0">sock_..</text>
</g>
<g>
<title>__wake_up_sync_key (34 samples, 4.23%)</title><rect x="556.0" y="115.0" width="49.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="559.0" y="126.0">__wak..</text>
</g>
<g>
<title>__wake_up_common_lock (34 samples, 4.23%)</title><rect x="556.0" y="99.0" width="49.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="559.0" y="110.0">__wak..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (34 samples, 4.23%)</title><rect x="556.0" y="83.0" width="49.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="559.0" y="94.0">_raw_..</text>
</g>
<g>
<title>tcp_ack (17 samples, 2.11%)</title><rect x="605.9" y="131.0" width="24.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="608.9" y="142.0">t..</text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.87%)</title><rect x="610.3" y="115.0" width="10.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="613.3" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.25%)</title><rect x="610.3" y="99.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="613.3" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.25%)</title><rect x="610.3" y="83.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="613.3" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.12%)</title><rect x="611.7" y="67.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="614.7" y="78.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.62%)</title><rect x="613.2" y="99.0" width="7.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="616.2" y="110.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.62%)</title><rect x="613.2" y="83.0" width="7.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="616.2" y="94.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.12%)</title><rect x="616.1" y="67.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="619.1" y="78.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.25%)</title><rect x="617.6" y="67.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="620.6" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.25%)</title><rect x="617.6" y="51.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="620.6" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.12%)</title><rect x="619.1" y="35.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="622.1" y="46.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.12%)</title><rect x="620.5" y="115.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="623.5" y="126.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.12%)</title><rect x="622.0" y="115.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="625.0" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.12%)</title><rect x="623.5" y="115.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="626.5" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (2 samples, 0.25%)</title><rect x="625.0" y="115.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="628.0" y="126.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.12%)</title><rect x="627.9" y="115.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="630.9" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.12%)</title><rect x="629.4" y="115.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="632.4" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.25%)</title><rect x="630.8" y="131.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="633.8" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.37%)</title><rect x="633.8" y="131.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="636.8" y="142.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.25%)</title><rect x="633.8" y="115.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="636.8" y="126.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.12%)</title><rect x="636.7" y="115.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="639.7" y="126.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.12%)</title><rect x="638.2" y="163.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="641.2" y="174.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.25%)</title><rect x="639.6" y="275.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="642.6" y="286.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.12%)</title><rect x="642.6" y="323.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="645.6" y="334.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.12%)</title><rect x="644.0" y="339.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="647.0" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (11 samples, 1.37%)</title><rect x="645.5" y="387.0" width="16.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="648.5" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (11 samples, 1.37%)</title><rect x="645.5" y="371.0" width="16.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="648.5" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.87%)</title><rect x="649.9" y="355.0" width="10.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="652.9" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.37%)</title><rect x="652.8" y="339.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="655.8" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.25%)</title><rect x="654.3" y="323.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="657.3" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.25%)</title><rect x="654.3" y="307.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="657.3" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.25%)</title><rect x="654.3" y="291.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="657.3" y="302.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.12%)</title><rect x="657.2" y="339.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="660.2" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.12%)</title><rect x="658.7" y="339.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="661.7" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.12%)</title><rect x="660.2" y="355.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="663.2" y="366.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.12%)</title><rect x="661.6" y="403.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="664.6" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.12%)</title><rect x="663.1" y="419.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="666.1" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.62%)</title><rect x="664.6" y="435.0" width="7.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="667.6" y="446.0"></text>
</g>
<g>
<title>selinux_ip_postroute (1 samples, 0.12%)</title><rect x="666.0" y="419.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="669.0" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (3 samples, 0.37%)</title><rect x="667.5" y="419.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="670.5" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (3 samples, 0.37%)</title><rect x="667.5" y="403.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="670.5" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (3 samples, 0.37%)</title><rect x="667.5" y="387.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="670.5" y="398.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (1 samples, 0.12%)</title><rect x="667.5" y="371.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="670.5" y="382.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (2 samples, 0.25%)</title><rect x="669.0" y="371.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="672.0" y="382.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.25%)</title><rect x="669.0" y="355.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="672.0" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.37%)</title><rect x="671.9" y="451.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="674.9" y="462.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.12%)</title><rect x="676.3" y="467.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="679.3" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.25%)</title><rect x="677.8" y="467.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="680.8" y="478.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.12%)</title><rect x="680.7" y="499.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="683.7" y="510.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.12%)</title><rect x="680.7" y="483.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="683.7" y="494.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.12%)</title><rect x="682.2" y="515.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="685.2" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.62%)</title><rect x="683.7" y="515.0" width="7.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="686.7" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.37%)</title><rect x="686.6" y="499.0" width="4.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="689.6" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.12%)</title><rect x="688.1" y="483.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="691.1" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.12%)</title><rect x="689.5" y="483.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="692.5" y="494.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.12%)</title><rect x="689.5" y="467.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="692.5" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.12%)</title><rect x="689.5" y="451.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="692.5" y="462.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.12%)</title><rect x="691.0" y="515.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="694.0" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.12%)</title><rect x="692.5" y="515.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="695.5" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.12%)</title><rect x="693.9" y="515.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="696.9" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.25%)</title><rect x="695.4" y="563.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="698.4" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.25%)</title><rect x="695.4" y="547.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="698.4" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.12%)</title><rect x="698.3" y="579.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="701.3" y="590.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.12%)</title><rect x="699.8" y="579.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="702.8" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.75%)</title><rect x="701.3" y="611.0" width="8.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="704.3" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.12%)</title><rect x="702.7" y="595.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="705.7" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.12%)</title><rect x="702.7" y="579.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="705.7" y="590.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (4 samples, 0.50%)</title><rect x="704.2" y="595.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="707.2" y="606.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.50%)</title><rect x="704.2" y="579.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="707.2" y="590.0"></text>
</g>
<g>
<title>tomoyo_socket_sendmsg (2 samples, 0.25%)</title><rect x="710.1" y="611.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="713.1" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.75%)</title><rect x="713.0" y="627.0" width="8.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="716.0" y="638.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.50%)</title><rect x="713.0" y="611.0" width="5.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="716.0" y="622.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.50%)</title><rect x="713.0" y="595.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="716.0" y="606.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.50%)</title><rect x="713.0" y="579.0" width="5.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="716.0" y="590.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.25%)</title><rect x="718.9" y="611.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="721.9" y="622.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="721.8" y="707.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="724.8" y="718.0"></text>
</g>
<g>
<title>send@plt (1 samples, 0.12%)</title><rect x="723.3" y="707.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="726.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.37%)</title><rect x="724.8" y="787.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.25%)</title><rect x="726.2" y="771.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="729.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.25%)</title><rect x="726.2" y="755.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (3 samples, 0.37%)</title><rect x="729.2" y="803.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.2" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.25%)</title><rect x="730.6" y="787.0" width="3.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="733.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$94/1529390653.process (2 samples, 0.25%)</title><rect x="733.6" y="851.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.6" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleGet (2 samples, 0.25%)</title><rect x="733.6" y="835.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.6" y="846.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (309 samples, 38.43%)</title><rect x="736.5" y="947.0" width="453.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.5" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (122 samples, 15.17%)</title><rect x="743.8" y="931.0" width="179.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.8" y="942.0">one/nio/net/NativeSelec..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (122 samples, 15.17%)</title><rect x="743.8" y="915.0" width="179.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="746.8" y="926.0">one/nio/net/NativeSelec..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.12%)</title><rect x="748.2" y="899.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="751.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 14.05%)</title><rect x="749.7" y="899.0" width="165.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="752.7" y="910.0">[unknown]</text>
</g>
<g>
<title>[unknown] (6 samples, 0.75%)</title><rect x="749.7" y="883.0" width="8.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="752.7" y="894.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.75%)</title><rect x="749.7" y="867.0" width="8.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="752.7" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.12%)</title><rect x="754.1" y="851.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="757.1" y="862.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.25%)</title><rect x="755.6" y="851.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="758.6" y="862.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.25%)</title><rect x="755.6" y="835.0" width="2.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="758.6" y="846.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.37%)</title><rect x="758.5" y="883.0" width="4.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="761.5" y="894.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="762.9" y="883.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="765.9" y="894.0"></text>
</g>
<g>
<title>epoll_wait (103 samples, 12.81%)</title><rect x="764.4" y="883.0" width="151.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="767.4" y="894.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (70 samples, 8.71%)</title><rect x="812.8" y="867.0" width="102.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="815.8" y="878.0">entry_SYSCAL..</text>
</g>
<g>
<title>do_syscall_64 (70 samples, 8.71%)</title><rect x="812.8" y="851.0" width="102.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="815.8" y="862.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_epoll_wait (68 samples, 8.46%)</title><rect x="815.7" y="835.0" width="99.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="818.7" y="846.0">__x64_sys_ep..</text>
</g>
<g>
<title>do_epoll_wait (68 samples, 8.46%)</title><rect x="815.7" y="819.0" width="99.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="818.7" y="830.0">do_epoll_wait</text>
</g>
<g>
<title>__fdget (2 samples, 0.25%)</title><rect x="818.7" y="803.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="821.7" y="814.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.25%)</title><rect x="818.7" y="787.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="821.7" y="798.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.25%)</title><rect x="818.7" y="771.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="821.7" y="782.0"></text>
</g>
<g>
<title>ep_poll (62 samples, 7.71%)</title><rect x="821.6" y="803.0" width="91.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="824.6" y="814.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (31 samples, 3.86%)</title><rect x="834.8" y="787.0" width="45.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="837.8" y="798.0">ep_s..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.12%)</title><rect x="849.5" y="771.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="852.5" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (18 samples, 2.24%)</title><rect x="851.0" y="771.0" width="26.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="854.0" y="782.0">e..</text>
</g>
<g>
<title>ep_item_poll.isra.16 (14 samples, 1.74%)</title><rect x="855.4" y="755.0" width="20.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="858.4" y="766.0"></text>
</g>
<g>
<title>sock_poll (11 samples, 1.37%)</title><rect x="858.3" y="739.0" width="16.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="861.3" y="750.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.37%)</title><rect x="867.1" y="723.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="870.1" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.25%)</title><rect x="871.5" y="723.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="874.5" y="734.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.12%)</title><rect x="874.5" y="739.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="877.5" y="750.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.12%)</title><rect x="875.9" y="755.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="878.9" y="766.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.25%)</title><rect x="877.4" y="771.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="880.4" y="782.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.25%)</title><rect x="880.3" y="787.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="883.3" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (20 samples, 2.49%)</title><rect x="883.3" y="787.0" width="29.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="886.3" y="798.0">sc..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (20 samples, 2.49%)</title><rect x="883.3" y="771.0" width="29.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="886.3" y="782.0">sc..</text>
</g>
<g>
<title>schedule (19 samples, 2.36%)</title><rect x="884.7" y="755.0" width="27.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="887.7" y="766.0">s..</text>
</g>
<g>
<title>__sched_text_start (19 samples, 2.36%)</title><rect x="884.7" y="739.0" width="27.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="887.7" y="750.0">_..</text>
</g>
<g>
<title>finish_task_switch (18 samples, 2.24%)</title><rect x="886.2" y="723.0" width="26.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="889.2" y="734.0">f..</text>
</g>
<g>
<title>fput (2 samples, 0.25%)</title><rect x="912.6" y="803.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="915.6" y="814.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.25%)</title><rect x="912.6" y="787.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="915.6" y="798.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.37%)</title><rect x="915.5" y="899.0" width="4.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="918.5" y="910.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.25%)</title><rect x="920.0" y="899.0" width="2.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="923.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (179 samples, 22.26%)</title><rect x="922.9" y="931.0" width="262.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.9" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (167 samples, 20.77%)</title><rect x="939.0" y="915.0" width="245.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="942.0" y="926.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (101 samples, 12.56%)</title><rect x="939.0" y="899.0" width="148.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="942.0" y="910.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (81 samples, 10.07%)</title><rect x="944.9" y="883.0" width="118.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="947.9" y="894.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (81 samples, 10.07%)</title><rect x="944.9" y="867.0" width="118.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="947.9" y="878.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (73 samples, 9.08%)</title><rect x="949.3" y="851.0" width="107.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="952.3" y="862.0">RequestHandle..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.87%)</title><rect x="956.6" y="835.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="959.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.87%)</title><rect x="956.6" y="819.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="959.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="959.6" y="803.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="962.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.12%)</title><rect x="959.6" y="787.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="962.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.25%)</title><rect x="961.0" y="803.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="964.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.25%)</title><rect x="961.0" y="787.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="964.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.25%)</title><rect x="961.0" y="771.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="964.0" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="964.0" y="803.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="967.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.12%)</title><rect x="965.4" y="803.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="965.4" y="787.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="968.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="965.4" y="771.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="968.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.12%)</title><rect x="965.4" y="755.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.get (61 samples, 7.59%)</title><rect x="966.9" y="835.0" width="89.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.9" y="846.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (61 samples, 7.59%)</title><rect x="966.9" y="819.0" width="89.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.9" y="830.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (61 samples, 7.59%)</title><rect x="966.9" y="803.0" width="89.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="969.9" y="814.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (61 samples, 7.59%)</title><rect x="966.9" y="787.0" width="89.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="969.9" y="798.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.25%)</title><rect x="966.9" y="771.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="969.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.25%)</title><rect x="966.9" y="755.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="969.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.25%)</title><rect x="966.9" y="739.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.25%)</title><rect x="966.9" y="723.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.12%)</title><rect x="968.4" y="707.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="971.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.62%)</title><rect x="969.9" y="771.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="972.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.62%)</title><rect x="969.9" y="755.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="972.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.50%)</title><rect x="971.3" y="739.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="974.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.50%)</title><rect x="971.3" y="723.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="974.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.50%)</title><rect x="971.3" y="707.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="974.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.37%)</title><rect x="972.8" y="691.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="975.8" y="702.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.12%)</title><rect x="972.8" y="675.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="975.8" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="972.8" y="659.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="975.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.25%)</title><rect x="974.3" y="675.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="977.3" y="686.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.25%)</title><rect x="974.3" y="659.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="977.3" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.12%)</title><rect x="975.7" y="643.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="978.7" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.12%)</title><rect x="975.7" y="627.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="978.7" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.12%)</title><rect x="975.7" y="611.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="978.7" y="622.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.12%)</title><rect x="975.7" y="595.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="978.7" y="606.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.12%)</title><rect x="975.7" y="579.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="978.7" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.12%)</title><rect x="975.7" y="563.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="978.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (52 samples, 6.47%)</title><rect x="977.2" y="771.0" width="76.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="980.2" y="782.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (52 samples, 6.47%)</title><rect x="977.2" y="755.0" width="76.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="980.2" y="766.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (52 samples, 6.47%)</title><rect x="977.2" y="739.0" width="76.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="980.2" y="750.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.12%)</title><rect x="977.2" y="723.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="980.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (51 samples, 6.34%)</title><rect x="978.7" y="723.0" width="74.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="981.7" y="734.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (49 samples, 6.09%)</title><rect x="981.6" y="707.0" width="71.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="984.6" y="718.0">jdk/inte..</text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 1.00%)</title><rect x="981.6" y="691.0" width="11.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="984.6" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.25%)</title><rect x="983.1" y="675.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="986.1" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.50%)</title><rect x="986.0" y="675.0" width="5.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="989.0" y="686.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.12%)</title><rect x="991.9" y="675.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="994.9" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (40 samples, 4.98%)</title><rect x="993.3" y="691.0" width="58.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="996.3" y="702.0">__pthr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 3.86%)</title><rect x="1006.5" y="675.0" width="45.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1009.5" y="686.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (31 samples, 3.86%)</title><rect x="1006.5" y="659.0" width="45.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1009.5" y="670.0">do_s..</text>
</g>
<g>
<title>__x64_sys_futex (30 samples, 3.73%)</title><rect x="1006.5" y="643.0" width="44.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1009.5" y="654.0">__x6..</text>
</g>
<g>
<title>do_futex (29 samples, 3.61%)</title><rect x="1008.0" y="627.0" width="42.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1011.0" y="638.0">do_f..</text>
</g>
<g>
<title>futex_wake (29 samples, 3.61%)</title><rect x="1008.0" y="611.0" width="42.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1011.0" y="622.0">fute..</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.12%)</title><rect x="1010.9" y="595.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1013.9" y="606.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.37%)</title><rect x="1012.4" y="595.0" width="4.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1015.4" y="606.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.12%)</title><rect x="1015.3" y="579.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1018.3" y="590.0"></text>
</g>
<g>
<title>wake_up_q (23 samples, 2.86%)</title><rect x="1016.8" y="595.0" width="33.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1019.8" y="606.0">wa..</text>
</g>
<g>
<title>try_to_wake_up (23 samples, 2.86%)</title><rect x="1016.8" y="579.0" width="33.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1019.8" y="590.0">tr..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (23 samples, 2.86%)</title><rect x="1016.8" y="563.0" width="33.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1019.8" y="574.0">_r..</text>
</g>
<g>
<title>do_futex (1 samples, 0.12%)</title><rect x="1050.6" y="643.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1053.6" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="1052.0" y="691.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1055.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.25%)</title><rect x="1053.5" y="771.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1056.5" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.37%)</title><rect x="1056.4" y="851.0" width="4.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1059.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.12%)</title><rect x="1060.8" y="851.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1063.8" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.12%)</title><rect x="1060.8" y="835.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1063.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.12%)</title><rect x="1060.8" y="819.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1063.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.12%)</title><rect x="1060.8" y="803.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1063.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.12%)</title><rect x="1060.8" y="787.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1063.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.12%)</title><rect x="1062.3" y="851.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1065.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.12%)</title><rect x="1062.3" y="835.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1065.3" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.12%)</title><rect x="1062.3" y="819.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.3" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.12%)</title><rect x="1062.3" y="803.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1065.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (12 samples, 1.49%)</title><rect x="1063.8" y="883.0" width="17.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1066.8" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.75%)</title><rect x="1069.7" y="867.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1072.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.62%)</title><rect x="1071.1" y="851.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1074.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.12%)</title><rect x="1077.0" y="835.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1080.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.12%)</title><rect x="1077.0" y="819.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1080.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.12%)</title><rect x="1077.0" y="803.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1080.0" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.12%)</title><rect x="1077.0" y="787.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1080.0" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.12%)</title><rect x="1077.0" y="771.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1080.0" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.12%)</title><rect x="1077.0" y="755.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1080.0" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.12%)</title><rect x="1077.0" y="739.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1080.0" y="750.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::retire_before_allocation() (1 samples, 0.12%)</title><rect x="1077.0" y="723.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1080.0" y="734.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.12%)</title><rect x="1077.0" y="707.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1080.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.25%)</title><rect x="1078.5" y="867.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1081.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="1081.4" y="883.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1084.4" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.37%)</title><rect x="1082.9" y="883.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.9" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.37%)</title><rect x="1082.9" y="867.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1085.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (66 samples, 8.21%)</title><rect x="1087.3" y="899.0" width="96.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1090.3" y="910.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (66 samples, 8.21%)</title><rect x="1087.3" y="883.0" width="96.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1090.3" y="894.0">one/nio/net..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 1.24%)</title><rect x="1093.1" y="867.0" width="14.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1096.1" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.12%)</title><rect x="1093.1" y="851.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1096.1" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (2 samples, 0.25%)</title><rect x="1094.6" y="851.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1097.6" y="862.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="1097.5" y="851.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1100.5" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.50%)</title><rect x="1099.0" y="851.0" width="5.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1102.0" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.12%)</title><rect x="1103.4" y="835.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1106.4" y="846.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.25%)</title><rect x="1104.9" y="851.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1107.9" y="862.0"></text>
</g>
<g>
<title>__recv (51 samples, 6.34%)</title><rect x="1107.8" y="867.0" width="74.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1110.8" y="878.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 4.48%)</title><rect x="1129.8" y="851.0" width="52.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1132.8" y="862.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (36 samples, 4.48%)</title><rect x="1129.8" y="835.0" width="52.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1132.8" y="846.0">do_sy..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.12%)</title><rect x="1135.7" y="819.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1138.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (31 samples, 3.86%)</title><rect x="1137.2" y="819.0" width="45.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1140.2" y="830.0">__x6..</text>
</g>
<g>
<title>__sys_recvfrom (31 samples, 3.86%)</title><rect x="1137.2" y="803.0" width="45.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1140.2" y="814.0">__sy..</text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.12%)</title><rect x="1138.6" y="787.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1141.6" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (28 samples, 3.48%)</title><rect x="1140.1" y="787.0" width="41.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1143.1" y="798.0">soc..</text>
</g>
<g>
<title>inet6_recvmsg (22 samples, 2.74%)</title><rect x="1140.1" y="771.0" width="32.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1143.1" y="782.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (20 samples, 2.49%)</title><rect x="1143.0" y="755.0" width="29.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1146.0" y="766.0">tc..</text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.25%)</title><rect x="1150.4" y="739.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1153.4" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.12%)</title><rect x="1150.4" y="723.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1153.4" y="734.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.12%)</title><rect x="1151.8" y="723.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1154.8" y="734.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.12%)</title><rect x="1151.8" y="707.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1154.8" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (9 samples, 1.12%)</title><rect x="1153.3" y="739.0" width="13.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1156.3" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 1.00%)</title><rect x="1153.3" y="723.0" width="11.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1156.3" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.62%)</title><rect x="1157.7" y="707.0" width="7.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1160.7" y="718.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.12%)</title><rect x="1157.7" y="691.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1160.7" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.25%)</title><rect x="1159.2" y="691.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1162.2" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.25%)</title><rect x="1162.1" y="691.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1165.1" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.25%)</title><rect x="1162.1" y="675.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1165.1" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.12%)</title><rect x="1165.0" y="723.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1168.0" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.12%)</title><rect x="1166.5" y="739.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1169.5" y="750.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.12%)</title><rect x="1168.0" y="739.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1171.0" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.25%)</title><rect x="1169.5" y="739.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1172.5" y="750.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.25%)</title><rect x="1169.5" y="723.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1172.5" y="734.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.25%)</title><rect x="1169.5" y="707.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1172.5" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.75%)</title><rect x="1172.4" y="771.0" width="8.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1175.4" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.25%)</title><rect x="1176.8" y="755.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1179.8" y="766.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.25%)</title><rect x="1176.8" y="739.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1179.8" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.25%)</title><rect x="1176.8" y="723.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1179.8" y="734.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (1 samples, 0.12%)</title><rect x="1179.7" y="755.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1182.7" y="766.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.12%)</title><rect x="1179.7" y="739.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1182.7" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.12%)</title><rect x="1181.2" y="787.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1184.2" y="798.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.12%)</title><rect x="1181.2" y="771.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1184.2" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.12%)</title><rect x="1182.7" y="867.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1185.7" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.12%)</title><rect x="1184.1" y="915.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.1" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.37%)</title><rect x="1185.6" y="931.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.6" y="942.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.12%)</title><rect x="1188.5" y="915.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1191.5" y="926.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.12%)</title><rect x="1188.5" y="899.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1191.5" y="910.0"></text>
</g>
</g>
</svg>
