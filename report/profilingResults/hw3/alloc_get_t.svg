<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix local)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="565"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="565"> </text>
<g id="frames">
<g>
<title>all (131,798 samples, 100.00%)</title><rect x="10.0" y="531.0" width="1180.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="542.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=20685] (1,968 samples, 1.49%)</title><rect x="10.0" y="515.0" width="17.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,968 samples, 1.49%)</title><rect x="10.0" y="499.0" width="17.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (267 samples, 0.20%)</title><rect x="10.0" y="483.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (267 samples, 0.20%)</title><rect x="10.0" y="467.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,701 samples, 1.29%)</title><rect x="12.4" y="483.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,701 samples, 1.29%)</title><rect x="12.4" y="467.0" width="15.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="15.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,701 samples, 1.29%)</title><rect x="12.4" y="451.0" width="15.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (492 samples, 0.37%)</title><rect x="12.4" y="435.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="15.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (492 samples, 0.37%)</title><rect x="12.4" y="419.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.4" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (114 samples, 0.09%)</title><rect x="12.4" y="403.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="15.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (68 samples, 0.05%)</title><rect x="12.4" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (68 samples, 0.05%)</title><rect x="12.4" y="371.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (68 samples, 0.05%)</title><rect x="12.4" y="355.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (68 samples, 0.05%)</title><rect x="12.4" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.4" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (64 samples, 0.05%)</title><rect x="12.4" y="323.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.4" y="334.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.05%)</title><rect x="12.4" y="307.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="15.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.get (46 samples, 0.03%)</title><rect x="13.0" y="387.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.03%)</title><rect x="13.0" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.03%)</title><rect x="13.0" y="355.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/2088793524.get$Lambda (46 samples, 0.03%)</title><rect x="13.0" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.0" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$125 (46 samples, 0.03%)</title><rect x="13.0" y="323.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="16.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (378 samples, 0.29%)</title><rect x="13.4" y="403.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (378 samples, 0.29%)</title><rect x="13.4" y="387.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (378 samples, 0.29%)</title><rect x="13.4" y="371.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (156 samples, 0.12%)</title><rect x="13.4" y="355.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="16.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (222 samples, 0.17%)</title><rect x="14.8" y="355.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.8" y="366.0"></text>
</g>
<g>
<title>byte[] (222 samples, 0.17%)</title><rect x="14.8" y="339.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="17.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (847 samples, 0.64%)</title><rect x="16.8" y="435.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.8" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Request (58 samples, 0.04%)</title><rect x="16.8" y="419.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="19.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (243 samples, 0.18%)</title><rect x="17.3" y="419.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (192 samples, 0.15%)</title><rect x="17.3" y="403.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="20.3" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (51 samples, 0.04%)</title><rect x="19.0" y="403.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="22.0" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (546 samples, 0.41%)</title><rect x="19.5" y="419.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.5" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (546 samples, 0.41%)</title><rect x="19.5" y="403.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.5" y="414.0"></text>
</g>
<g>
<title>char[] (167 samples, 0.13%)</title><rect x="19.5" y="387.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="22.5" y="398.0"></text>
</g>
<g>
<title>char[] (54 samples, 0.04%)</title><rect x="21.0" y="387.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="24.0" y="398.0"></text>
</g>
<g>
<title>java.lang.String (244 samples, 0.19%)</title><rect x="21.5" y="387.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="24.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (81 samples, 0.06%)</title><rect x="23.7" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.7" y="398.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (81 samples, 0.06%)</title><rect x="23.7" y="371.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (81 samples, 0.06%)</title><rect x="23.7" y="355.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.7" y="366.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.06%)</title><rect x="23.7" y="339.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="26.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (362 samples, 0.27%)</title><rect x="24.4" y="435.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="27.4" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (362 samples, 0.27%)</title><rect x="24.4" y="419.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.4" y="430.0"></text>
</g>
<g>
<title>char[] (54 samples, 0.04%)</title><rect x="24.4" y="403.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="27.4" y="414.0"></text>
</g>
<g>
<title>java.lang.String (296 samples, 0.22%)</title><rect x="24.9" y="403.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="27.9" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=20686] (2,285 samples, 1.73%)</title><rect x="27.6" y="515.0" width="20.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="30.6" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,285 samples, 1.73%)</title><rect x="27.6" y="499.0" width="20.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="30.6" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (273 samples, 0.21%)</title><rect x="27.6" y="483.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.6" y="494.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (273 samples, 0.21%)</title><rect x="27.6" y="467.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="30.6" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,012 samples, 1.53%)</title><rect x="30.1" y="483.0" width="18.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.1" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,012 samples, 1.53%)</title><rect x="30.1" y="467.0" width="18.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,012 samples, 1.53%)</title><rect x="30.1" y="451.0" width="18.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (538 samples, 0.41%)</title><rect x="30.1" y="435.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (538 samples, 0.41%)</title><rect x="30.1" y="419.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.1" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (202 samples, 0.15%)</title><rect x="30.1" y="403.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (147 samples, 0.11%)</title><rect x="30.1" y="387.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="33.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (147 samples, 0.11%)</title><rect x="30.1" y="371.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (147 samples, 0.11%)</title><rect x="30.1" y="355.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="33.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (147 samples, 0.11%)</title><rect x="30.1" y="339.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.1" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (132 samples, 0.10%)</title><rect x="30.2" y="323.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.2" y="334.0"></text>
</g>
<g>
<title>byte[] (132 samples, 0.10%)</title><rect x="30.2" y="307.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="33.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.get (55 samples, 0.04%)</title><rect x="31.4" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.04%)</title><rect x="31.4" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.04%)</title><rect x="31.4" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/2088793524.get$Lambda (55 samples, 0.04%)</title><rect x="31.4" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.4" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$125 (55 samples, 0.04%)</title><rect x="31.4" y="323.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="34.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (336 samples, 0.25%)</title><rect x="31.9" y="403.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="34.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (336 samples, 0.25%)</title><rect x="31.9" y="387.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (336 samples, 0.25%)</title><rect x="31.9" y="371.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.09%)</title><rect x="31.9" y="355.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="34.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (217 samples, 0.16%)</title><rect x="32.9" y="355.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="35.9" y="366.0"></text>
</g>
<g>
<title>byte[] (217 samples, 0.16%)</title><rect x="32.9" y="339.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="35.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,045 samples, 0.79%)</title><rect x="34.9" y="435.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.9" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Request (89 samples, 0.07%)</title><rect x="34.9" y="419.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="37.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (318 samples, 0.24%)</title><rect x="35.7" y="419.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (222 samples, 0.17%)</title><rect x="35.7" y="403.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="38.7" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (96 samples, 0.07%)</title><rect x="37.7" y="403.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="40.7" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (638 samples, 0.48%)</title><rect x="38.5" y="419.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.5" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (638 samples, 0.48%)</title><rect x="38.5" y="403.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.5" y="414.0"></text>
</g>
<g>
<title>char[] (133 samples, 0.10%)</title><rect x="38.5" y="387.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="41.5" y="398.0"></text>
</g>
<g>
<title>char[] (97 samples, 0.07%)</title><rect x="39.7" y="387.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="42.7" y="398.0"></text>
</g>
<g>
<title>java.lang.String (236 samples, 0.18%)</title><rect x="40.6" y="387.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="43.6" y="398.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (172 samples, 0.13%)</title><rect x="42.7" y="387.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.7" y="398.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (172 samples, 0.13%)</title><rect x="42.7" y="371.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (172 samples, 0.13%)</title><rect x="42.7" y="355.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.7" y="366.0"></text>
</g>
<g>
<title>byte[] (172 samples, 0.13%)</title><rect x="42.7" y="339.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="45.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (429 samples, 0.33%)</title><rect x="44.2" y="435.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.2" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (429 samples, 0.33%)</title><rect x="44.2" y="419.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.2" y="430.0"></text>
</g>
<g>
<title>char[] (75 samples, 0.06%)</title><rect x="44.2" y="403.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="47.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String (332 samples, 0.25%)</title><rect x="44.9" y="403.0" width="3.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="47.9" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=20687] (2,294 samples, 1.74%)</title><rect x="48.1" y="515.0" width="20.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="51.1" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,294 samples, 1.74%)</title><rect x="48.1" y="499.0" width="20.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.1" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (264 samples, 0.20%)</title><rect x="48.1" y="483.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="51.1" y="494.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (264 samples, 0.20%)</title><rect x="48.1" y="467.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="51.1" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,030 samples, 1.54%)</title><rect x="50.4" y="483.0" width="18.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="53.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,030 samples, 1.54%)</title><rect x="50.4" y="467.0" width="18.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,030 samples, 1.54%)</title><rect x="50.4" y="451.0" width="18.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (553 samples, 0.42%)</title><rect x="50.4" y="435.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (553 samples, 0.42%)</title><rect x="50.4" y="419.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.4" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (231 samples, 0.18%)</title><rect x="50.4" y="403.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="53.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (165 samples, 0.13%)</title><rect x="50.4" y="387.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (165 samples, 0.13%)</title><rect x="50.4" y="371.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (165 samples, 0.13%)</title><rect x="50.4" y="355.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (165 samples, 0.13%)</title><rect x="50.4" y="339.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.4" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (152 samples, 0.12%)</title><rect x="50.6" y="323.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.6" y="334.0"></text>
</g>
<g>
<title>byte[] (152 samples, 0.12%)</title><rect x="50.6" y="307.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="53.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.get (66 samples, 0.05%)</title><rect x="51.9" y="387.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (66 samples, 0.05%)</title><rect x="51.9" y="371.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (66 samples, 0.05%)</title><rect x="51.9" y="355.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/2088793524.get$Lambda (66 samples, 0.05%)</title><rect x="51.9" y="339.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.9" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$125 (66 samples, 0.05%)</title><rect x="51.9" y="323.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="54.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (322 samples, 0.24%)</title><rect x="52.5" y="403.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (322 samples, 0.24%)</title><rect x="52.5" y="387.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (322 samples, 0.24%)</title><rect x="52.5" y="371.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String (115 samples, 0.09%)</title><rect x="52.5" y="355.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="55.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (207 samples, 0.16%)</title><rect x="53.5" y="355.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.5" y="366.0"></text>
</g>
<g>
<title>byte[] (207 samples, 0.16%)</title><rect x="53.5" y="339.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="56.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,029 samples, 0.78%)</title><rect x="55.4" y="435.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.4" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Request (88 samples, 0.07%)</title><rect x="55.4" y="419.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="58.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (323 samples, 0.25%)</title><rect x="56.2" y="419.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (211 samples, 0.16%)</title><rect x="56.2" y="403.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="59.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (112 samples, 0.08%)</title><rect x="58.1" y="403.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="61.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (618 samples, 0.47%)</title><rect x="59.1" y="419.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.1" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (618 samples, 0.47%)</title><rect x="59.1" y="403.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.1" y="414.0"></text>
</g>
<g>
<title>char[] (122 samples, 0.09%)</title><rect x="59.1" y="387.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="62.1" y="398.0"></text>
</g>
<g>
<title>char[] (87 samples, 0.07%)</title><rect x="60.2" y="387.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="63.2" y="398.0"></text>
</g>
<g>
<title>java.lang.String (225 samples, 0.17%)</title><rect x="60.9" y="387.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="63.9" y="398.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (184 samples, 0.14%)</title><rect x="63.0" y="387.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (184 samples, 0.14%)</title><rect x="63.0" y="371.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (184 samples, 0.14%)</title><rect x="63.0" y="355.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.0" y="366.0"></text>
</g>
<g>
<title>byte[] (184 samples, 0.14%)</title><rect x="63.0" y="339.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="66.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (448 samples, 0.34%)</title><rect x="64.6" y="435.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.6" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (448 samples, 0.34%)</title><rect x="64.6" y="419.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.6" y="430.0"></text>
</g>
<g>
<title>char[] (92 samples, 0.07%)</title><rect x="64.6" y="403.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="67.6" y="414.0"></text>
</g>
<g>
<title>java.lang.String (312 samples, 0.24%)</title><rect x="65.4" y="403.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="68.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (44 samples, 0.03%)</title><rect x="68.2" y="403.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (44 samples, 0.03%)</title><rect x="68.2" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (44 samples, 0.03%)</title><rect x="68.2" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.2" y="382.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.03%)</title><rect x="68.2" y="355.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="71.2" y="366.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=20688] (1,998 samples, 1.52%)</title><rect x="68.6" y="515.0" width="17.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="71.6" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,998 samples, 1.52%)</title><rect x="68.6" y="499.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.6" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (269 samples, 0.20%)</title><rect x="68.6" y="483.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.6" y="494.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (269 samples, 0.20%)</title><rect x="68.6" y="467.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="71.6" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,729 samples, 1.31%)</title><rect x="71.0" y="483.0" width="15.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,729 samples, 1.31%)</title><rect x="71.0" y="467.0" width="15.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,729 samples, 1.31%)</title><rect x="71.0" y="451.0" width="15.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (485 samples, 0.37%)</title><rect x="71.0" y="435.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (485 samples, 0.37%)</title><rect x="71.0" y="419.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.0" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (166 samples, 0.13%)</title><rect x="71.0" y="403.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="74.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (131 samples, 0.10%)</title><rect x="71.0" y="387.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (131 samples, 0.10%)</title><rect x="71.0" y="371.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (131 samples, 0.10%)</title><rect x="71.0" y="355.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (131 samples, 0.10%)</title><rect x="71.0" y="339.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="74.0" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (119 samples, 0.09%)</title><rect x="71.1" y="323.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.1" y="334.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.09%)</title><rect x="71.1" y="307.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="74.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.get (35 samples, 0.03%)</title><rect x="72.2" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.03%)</title><rect x="72.2" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.03%)</title><rect x="72.2" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/2088793524.get$Lambda (35 samples, 0.03%)</title><rect x="72.2" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.2" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$125 (35 samples, 0.03%)</title><rect x="72.2" y="323.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="75.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (319 samples, 0.24%)</title><rect x="72.5" y="403.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (319 samples, 0.24%)</title><rect x="72.5" y="387.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="75.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (319 samples, 0.24%)</title><rect x="72.5" y="371.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="75.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String (104 samples, 0.08%)</title><rect x="72.5" y="355.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="75.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (215 samples, 0.16%)</title><rect x="73.4" y="355.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.4" y="366.0"></text>
</g>
<g>
<title>byte[] (215 samples, 0.16%)</title><rect x="73.4" y="339.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="76.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (856 samples, 0.65%)</title><rect x="75.4" y="435.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.4" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Request (44 samples, 0.03%)</title><rect x="75.4" y="419.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="78.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (240 samples, 0.18%)</title><rect x="75.8" y="419.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (182 samples, 0.14%)</title><rect x="75.8" y="403.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="78.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (58 samples, 0.04%)</title><rect x="77.4" y="403.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="80.4" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (572 samples, 0.43%)</title><rect x="77.9" y="419.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.9" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (572 samples, 0.43%)</title><rect x="77.9" y="403.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.9" y="414.0"></text>
</g>
<g>
<title>char[] (139 samples, 0.11%)</title><rect x="77.9" y="387.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="80.9" y="398.0"></text>
</g>
<g>
<title>char[] (70 samples, 0.05%)</title><rect x="79.2" y="387.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="82.2" y="398.0"></text>
</g>
<g>
<title>java.lang.String (216 samples, 0.16%)</title><rect x="79.8" y="387.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="82.8" y="398.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (147 samples, 0.11%)</title><rect x="81.7" y="387.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.7" y="398.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (147 samples, 0.11%)</title><rect x="81.7" y="371.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (147 samples, 0.11%)</title><rect x="81.7" y="355.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="84.7" y="366.0"></text>
</g>
<g>
<title>byte[] (147 samples, 0.11%)</title><rect x="81.7" y="339.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="84.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (388 samples, 0.29%)</title><rect x="83.0" y="435.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.0" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (388 samples, 0.29%)</title><rect x="83.0" y="419.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.0" y="430.0"></text>
</g>
<g>
<title>char[] (65 samples, 0.05%)</title><rect x="83.0" y="403.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="86.0" y="414.0"></text>
</g>
<g>
<title>java.lang.String (284 samples, 0.22%)</title><rect x="83.6" y="403.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="86.6" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.03%)</title><rect x="86.2" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="89.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.03%)</title><rect x="86.2" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="89.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (39 samples, 0.03%)</title><rect x="86.2" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.2" y="382.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.03%)</title><rect x="86.2" y="355.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="89.2" y="366.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=20689] (2,058 samples, 1.56%)</title><rect x="86.5" y="515.0" width="18.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="89.5" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,058 samples, 1.56%)</title><rect x="86.5" y="499.0" width="18.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.5" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,058 samples, 1.56%)</title><rect x="86.5" y="483.0" width="18.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.5" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,058 samples, 1.56%)</title><rect x="86.5" y="467.0" width="18.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,058 samples, 1.56%)</title><rect x="86.5" y="451.0" width="18.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="89.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (518 samples, 0.39%)</title><rect x="86.5" y="435.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (518 samples, 0.39%)</title><rect x="86.5" y="419.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="89.5" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (267 samples, 0.20%)</title><rect x="86.5" y="403.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="89.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.get (249 samples, 0.19%)</title><rect x="86.7" y="387.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="89.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (248 samples, 0.19%)</title><rect x="86.7" y="371.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (248 samples, 0.19%)</title><rect x="86.7" y="355.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/2088793524.get$Lambda (248 samples, 0.19%)</title><rect x="86.7" y="339.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.7" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$125 (248 samples, 0.19%)</title><rect x="86.7" y="323.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="89.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (251 samples, 0.19%)</title><rect x="88.9" y="403.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (251 samples, 0.19%)</title><rect x="88.9" y="387.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (251 samples, 0.19%)</title><rect x="88.9" y="371.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.9" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (225 samples, 0.17%)</title><rect x="89.1" y="355.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.1" y="366.0"></text>
</g>
<g>
<title>byte[] (225 samples, 0.17%)</title><rect x="89.1" y="339.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="92.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (978 samples, 0.74%)</title><rect x="91.1" y="435.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.1" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Request (207 samples, 0.16%)</title><rect x="91.1" y="419.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="94.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (289 samples, 0.22%)</title><rect x="93.0" y="419.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (235 samples, 0.18%)</title><rect x="93.0" y="403.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="96.0" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (54 samples, 0.04%)</title><rect x="95.1" y="403.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="98.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (482 samples, 0.37%)</title><rect x="95.6" y="419.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.6" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (482 samples, 0.37%)</title><rect x="95.6" y="403.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="98.6" y="414.0"></text>
</g>
<g>
<title>char[] (289 samples, 0.22%)</title><rect x="95.6" y="387.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="98.6" y="398.0"></text>
</g>
<g>
<title>char[] (42 samples, 0.03%)</title><rect x="98.2" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="101.2" y="398.0"></text>
</g>
<g>
<title>java.lang.String (92 samples, 0.07%)</title><rect x="98.5" y="387.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="101.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (59 samples, 0.04%)</title><rect x="99.4" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="102.4" y="398.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (59 samples, 0.04%)</title><rect x="99.4" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (59 samples, 0.04%)</title><rect x="99.4" y="355.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.4" y="366.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.04%)</title><rect x="99.4" y="339.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="102.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (562 samples, 0.43%)</title><rect x="99.9" y="435.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.9" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (562 samples, 0.43%)</title><rect x="99.9" y="419.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.9" y="430.0"></text>
</g>
<g>
<title>char[] (240 samples, 0.18%)</title><rect x="99.9" y="403.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="102.9" y="414.0"></text>
</g>
<g>
<title>java.lang.String (55 samples, 0.04%)</title><rect x="102.2" y="403.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="105.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (245 samples, 0.19%)</title><rect x="102.7" y="403.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.7" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (245 samples, 0.19%)</title><rect x="102.7" y="387.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (245 samples, 0.19%)</title><rect x="102.7" y="371.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.7" y="382.0"></text>
</g>
<g>
<title>byte[] (245 samples, 0.19%)</title><rect x="102.7" y="355.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="105.7" y="366.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=20690] (1,494 samples, 1.13%)</title><rect x="104.9" y="515.0" width="13.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="107.9" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,494 samples, 1.13%)</title><rect x="104.9" y="499.0" width="13.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="107.9" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (266 samples, 0.20%)</title><rect x="104.9" y="483.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.9" y="494.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (266 samples, 0.20%)</title><rect x="104.9" y="467.0" width="2.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="107.9" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,228 samples, 0.93%)</title><rect x="107.3" y="483.0" width="11.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,228 samples, 0.93%)</title><rect x="107.3" y="467.0" width="11.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="110.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,228 samples, 0.93%)</title><rect x="107.3" y="451.0" width="11.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.3" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (306 samples, 0.23%)</title><rect x="107.3" y="435.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (306 samples, 0.23%)</title><rect x="107.3" y="419.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="110.3" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (92 samples, 0.07%)</title><rect x="107.3" y="403.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="110.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (62 samples, 0.05%)</title><rect x="107.3" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (62 samples, 0.05%)</title><rect x="107.3" y="371.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (62 samples, 0.05%)</title><rect x="107.3" y="355.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="110.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.05%)</title><rect x="107.3" y="339.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.3" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (56 samples, 0.04%)</title><rect x="107.4" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.4" y="334.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.04%)</title><rect x="107.4" y="307.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="110.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.get (30 samples, 0.02%)</title><rect x="107.9" y="387.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.02%)</title><rect x="107.9" y="371.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.02%)</title><rect x="107.9" y="355.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/2088793524.get$Lambda (30 samples, 0.02%)</title><rect x="107.9" y="339.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.9" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$125 (30 samples, 0.02%)</title><rect x="107.9" y="323.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="110.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (214 samples, 0.16%)</title><rect x="108.1" y="403.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="111.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (214 samples, 0.16%)</title><rect x="108.1" y="387.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="111.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (214 samples, 0.16%)</title><rect x="108.1" y="371.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (192 samples, 0.15%)</title><rect x="108.3" y="355.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.3" y="366.0"></text>
</g>
<g>
<title>byte[] (192 samples, 0.15%)</title><rect x="108.3" y="339.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="111.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (610 samples, 0.46%)</title><rect x="110.1" y="435.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.1" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Request (29 samples, 0.02%)</title><rect x="110.1" y="419.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="113.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (218 samples, 0.17%)</title><rect x="110.3" y="419.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (176 samples, 0.13%)</title><rect x="110.3" y="403.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="113.3" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (42 samples, 0.03%)</title><rect x="111.9" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="114.9" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (363 samples, 0.28%)</title><rect x="112.3" y="419.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="115.3" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (363 samples, 0.28%)</title><rect x="112.3" y="403.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="115.3" y="414.0"></text>
</g>
<g>
<title>char[] (43 samples, 0.03%)</title><rect x="112.3" y="387.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="115.3" y="398.0"></text>
</g>
<g>
<title>char[] (36 samples, 0.03%)</title><rect x="112.6" y="387.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="115.6" y="398.0"></text>
</g>
<g>
<title>java.lang.String (223 samples, 0.17%)</title><rect x="113.0" y="387.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="116.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (61 samples, 0.05%)</title><rect x="115.0" y="387.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="118.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (61 samples, 0.05%)</title><rect x="115.0" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (61 samples, 0.05%)</title><rect x="115.0" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.0" y="366.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.05%)</title><rect x="115.0" y="339.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="118.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (312 samples, 0.24%)</title><rect x="115.5" y="435.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="118.5" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (312 samples, 0.24%)</title><rect x="115.5" y="419.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (275 samples, 0.21%)</title><rect x="115.7" y="403.0" width="2.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="118.7" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=20691] (1,949 samples, 1.48%)</title><rect x="118.3" y="515.0" width="17.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="121.3" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,949 samples, 1.48%)</title><rect x="118.3" y="499.0" width="17.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.3" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (266 samples, 0.20%)</title><rect x="118.3" y="483.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.3" y="494.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (266 samples, 0.20%)</title><rect x="118.3" y="467.0" width="2.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="121.3" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,683 samples, 1.28%)</title><rect x="120.7" y="483.0" width="15.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,683 samples, 1.28%)</title><rect x="120.7" y="467.0" width="15.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,683 samples, 1.28%)</title><rect x="120.7" y="451.0" width="15.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (485 samples, 0.37%)</title><rect x="120.7" y="435.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (485 samples, 0.37%)</title><rect x="120.7" y="419.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.7" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (92 samples, 0.07%)</title><rect x="120.7" y="403.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (58 samples, 0.04%)</title><rect x="120.7" y="387.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="123.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (58 samples, 0.04%)</title><rect x="120.7" y="371.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (58 samples, 0.04%)</title><rect x="120.7" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="123.7" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (58 samples, 0.04%)</title><rect x="120.7" y="339.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.7" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (55 samples, 0.04%)</title><rect x="120.7" y="323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.7" y="334.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.04%)</title><rect x="120.7" y="307.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="123.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.get (34 samples, 0.03%)</title><rect x="121.2" y="387.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.03%)</title><rect x="121.2" y="371.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.03%)</title><rect x="121.2" y="355.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/2088793524.get$Lambda (33 samples, 0.03%)</title><rect x="121.2" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.2" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$125 (33 samples, 0.03%)</title><rect x="121.2" y="323.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="124.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (393 samples, 0.30%)</title><rect x="121.5" y="403.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (393 samples, 0.30%)</title><rect x="121.5" y="387.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (393 samples, 0.30%)</title><rect x="121.5" y="371.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String (155 samples, 0.12%)</title><rect x="121.5" y="355.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="124.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (238 samples, 0.18%)</title><rect x="122.9" y="355.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.9" y="366.0"></text>
</g>
<g>
<title>byte[] (238 samples, 0.18%)</title><rect x="122.9" y="339.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="125.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (846 samples, 0.64%)</title><rect x="125.0" y="435.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.0" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Request (54 samples, 0.04%)</title><rect x="125.0" y="419.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="128.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (252 samples, 0.19%)</title><rect x="125.5" y="419.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (204 samples, 0.15%)</title><rect x="125.5" y="403.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="128.5" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (48 samples, 0.04%)</title><rect x="127.3" y="403.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="130.3" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (540 samples, 0.41%)</title><rect x="127.8" y="419.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.8" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (540 samples, 0.41%)</title><rect x="127.8" y="403.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.8" y="414.0"></text>
</g>
<g>
<title>char[] (178 samples, 0.14%)</title><rect x="127.8" y="387.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="130.8" y="398.0"></text>
</g>
<g>
<title>char[] (39 samples, 0.03%)</title><rect x="129.4" y="387.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="132.4" y="398.0"></text>
</g>
<g>
<title>java.lang.String (253 samples, 0.19%)</title><rect x="129.7" y="387.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="132.7" y="398.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (70 samples, 0.05%)</title><rect x="132.0" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (70 samples, 0.05%)</title><rect x="132.0" y="371.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (70 samples, 0.05%)</title><rect x="132.0" y="355.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="135.0" y="366.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.05%)</title><rect x="132.0" y="339.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="135.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (352 samples, 0.27%)</title><rect x="132.6" y="435.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.6" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (352 samples, 0.27%)</title><rect x="132.6" y="419.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="135.6" y="430.0"></text>
</g>
<g>
<title>char[] (40 samples, 0.03%)</title><rect x="132.6" y="403.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="135.6" y="414.0"></text>
</g>
<g>
<title>java.lang.String (292 samples, 0.22%)</title><rect x="133.0" y="403.0" width="2.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="136.0" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=20692] (1,607 samples, 1.22%)</title><rect x="135.8" y="515.0" width="14.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="138.8" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,607 samples, 1.22%)</title><rect x="135.8" y="499.0" width="14.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.8" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,607 samples, 1.22%)</title><rect x="135.8" y="483.0" width="14.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.8" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,607 samples, 1.22%)</title><rect x="135.8" y="467.0" width="14.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,607 samples, 1.22%)</title><rect x="135.8" y="451.0" width="14.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (499 samples, 0.38%)</title><rect x="135.8" y="435.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (499 samples, 0.38%)</title><rect x="135.8" y="419.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.8" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (260 samples, 0.20%)</title><rect x="135.8" y="403.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.get (252 samples, 0.19%)</title><rect x="135.8" y="387.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (252 samples, 0.19%)</title><rect x="135.8" y="371.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (252 samples, 0.19%)</title><rect x="135.8" y="355.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/2088793524.get$Lambda (252 samples, 0.19%)</title><rect x="135.8" y="339.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.8" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$125 (252 samples, 0.19%)</title><rect x="135.8" y="323.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="138.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (239 samples, 0.18%)</title><rect x="138.1" y="403.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (239 samples, 0.18%)</title><rect x="138.1" y="387.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (239 samples, 0.18%)</title><rect x="138.1" y="371.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (221 samples, 0.17%)</title><rect x="138.2" y="355.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.2" y="366.0"></text>
</g>
<g>
<title>byte[] (221 samples, 0.17%)</title><rect x="138.2" y="339.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="141.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (582 samples, 0.44%)</title><rect x="140.2" y="435.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.2" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Request (65 samples, 0.05%)</title><rect x="140.2" y="419.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="143.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (222 samples, 0.17%)</title><rect x="140.8" y="419.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (209 samples, 0.16%)</title><rect x="140.8" y="403.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="143.8" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (295 samples, 0.22%)</title><rect x="142.8" y="419.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.8" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (295 samples, 0.22%)</title><rect x="142.8" y="403.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.8" y="414.0"></text>
</g>
<g>
<title>char[] (266 samples, 0.20%)</title><rect x="142.8" y="387.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="145.8" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (526 samples, 0.40%)</title><rect x="145.4" y="435.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.4" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (526 samples, 0.40%)</title><rect x="145.4" y="419.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="148.4" y="430.0"></text>
</g>
<g>
<title>char[] (240 samples, 0.18%)</title><rect x="145.4" y="403.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="148.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (246 samples, 0.19%)</title><rect x="147.9" y="403.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (246 samples, 0.19%)</title><rect x="147.9" y="387.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (246 samples, 0.19%)</title><rect x="147.9" y="371.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.9" y="382.0"></text>
</g>
<g>
<title>byte[] (246 samples, 0.19%)</title><rect x="147.9" y="355.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="150.9" y="366.0"></text>
</g>
<g>
<title>[worker-0 tid=20757] (14,527 samples, 11.02%)</title><rect x="150.1" y="515.0" width="130.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="153.1" y="526.0">[worker-0 tid=20..</text>
</g>
<g>
<title>java/lang/Thread.run (14,527 samples, 11.02%)</title><rect x="150.1" y="499.0" width="130.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.1" y="510.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,527 samples, 11.02%)</title><rect x="150.1" y="483.0" width="130.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.1" y="494.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,527 samples, 11.02%)</title><rect x="150.1" y="467.0" width="130.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.1" y="478.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$100/1359819340.run (14,523 samples, 11.02%)</title><rect x="150.2" y="451.0" width="130.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.2" y="462.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (14,523 samples, 11.02%)</title><rect x="150.2" y="435.0" width="130.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.2" y="446.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (14,523 samples, 11.02%)</title><rect x="150.2" y="419.0" width="130.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.2" y="430.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/2088793524.process (14,523 samples, 11.02%)</title><rect x="150.2" y="403.0" width="130.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.2" y="414.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$get$2 (14,523 samples, 11.02%)</title><rect x="150.2" y="387.0" width="130.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.2" y="398.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleGet (14,523 samples, 11.02%)</title><rect x="150.2" y="371.0" width="130.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.2" y="382.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (14,439 samples, 10.96%)</title><rect x="150.6" y="355.0" width="129.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.6" y="366.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (156 samples, 0.12%)</title><rect x="150.6" y="339.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (156 samples, 0.12%)</title><rect x="150.6" y="323.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (156 samples, 0.12%)</title><rect x="150.6" y="307.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (156 samples, 0.12%)</title><rect x="150.6" y="291.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (156 samples, 0.12%)</title><rect x="150.6" y="275.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (150 samples, 0.11%)</title><rect x="150.6" y="259.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.6" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (59 samples, 0.04%)</title><rect x="150.6" y="243.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (59 samples, 0.04%)</title><rect x="150.6" y="227.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (59 samples, 0.04%)</title><rect x="150.6" y="211.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 0.04%)</title><rect x="150.6" y="195.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 0.04%)</title><rect x="150.6" y="179.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (59 samples, 0.04%)</title><rect x="150.6" y="163.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="153.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (59 samples, 0.04%)</title><rect x="150.6" y="147.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (59 samples, 0.04%)</title><rect x="150.6" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (59 samples, 0.04%)</title><rect x="150.6" y="115.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (59 samples, 0.04%)</title><rect x="150.6" y="99.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (59 samples, 0.04%)</title><rect x="150.6" y="83.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (59 samples, 0.04%)</title><rect x="150.6" y="67.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (59 samples, 0.04%)</title><rect x="150.6" y="51.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="153.6" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (91 samples, 0.07%)</title><rect x="151.1" y="243.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="154.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (91 samples, 0.07%)</title><rect x="151.1" y="227.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (91 samples, 0.07%)</title><rect x="151.1" y="211.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (91 samples, 0.07%)</title><rect x="151.1" y="195.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (91 samples, 0.07%)</title><rect x="151.1" y="179.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="154.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (91 samples, 0.07%)</title><rect x="151.1" y="163.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (63 samples, 0.05%)</title><rect x="151.1" y="147.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="154.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (63 samples, 0.05%)</title><rect x="151.1" y="131.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (63 samples, 0.05%)</title><rect x="151.1" y="115.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (63 samples, 0.05%)</title><rect x="151.1" y="99.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.1" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (28 samples, 0.02%)</title><rect x="151.7" y="147.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (28 samples, 0.02%)</title><rect x="151.7" y="131.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (28 samples, 0.02%)</title><rect x="151.7" y="115.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.7" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (28 samples, 0.02%)</title><rect x="151.7" y="99.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (28 samples, 0.02%)</title><rect x="151.7" y="83.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (28 samples, 0.02%)</title><rect x="151.7" y="67.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (28 samples, 0.02%)</title><rect x="151.7" y="51.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.7" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (28 samples, 0.02%)</title><rect x="151.7" y="35.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="154.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (14,274 samples, 10.83%)</title><rect x="152.1" y="339.0" width="127.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.1" y="350.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (14,232 samples, 10.80%)</title><rect x="152.3" y="323.0" width="127.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.3" y="334.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,811 samples, 2.13%)</title><rect x="152.3" y="307.0" width="25.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.3" y="318.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,810 samples, 2.13%)</title><rect x="152.3" y="291.0" width="25.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.3" y="302.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (77 samples, 0.06%)</title><rect x="152.3" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.3" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (77 samples, 0.06%)</title><rect x="152.3" y="259.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="155.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,704 samples, 2.05%)</title><rect x="153.1" y="275.0" width="24.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.1" y="286.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,704 samples, 2.05%)</title><rect x="153.1" y="259.0" width="24.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.1" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (35 samples, 0.03%)</title><rect x="153.1" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.03%)</title><rect x="153.1" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.1" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (35 samples, 0.03%)</title><rect x="153.1" y="211.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="156.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,669 samples, 2.03%)</title><rect x="153.4" y="243.0" width="23.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.4" y="254.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,669 samples, 2.03%)</title><rect x="153.4" y="227.0" width="23.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.4" y="238.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,669 samples, 2.03%)</title><rect x="153.4" y="211.0" width="23.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.4" y="222.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,669 samples, 2.03%)</title><rect x="153.4" y="195.0" width="23.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.4" y="206.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,774 samples, 1.35%)</title><rect x="153.4" y="179.0" width="15.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,774 samples, 1.35%)</title><rect x="153.4" y="163.0" width="15.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,774 samples, 1.35%)</title><rect x="153.4" y="147.0" width="15.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (1,774 samples, 1.35%)</title><rect x="153.4" y="131.0" width="15.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.4" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (685 samples, 0.52%)</title><rect x="153.4" y="115.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.4" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (396 samples, 0.30%)</title><rect x="153.4" y="99.0" width="3.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="156.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (289 samples, 0.22%)</title><rect x="156.9" y="99.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.9" y="110.0"></text>
</g>
<g>
<title>byte[] (289 samples, 0.22%)</title><rect x="156.9" y="83.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="159.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (65 samples, 0.05%)</title><rect x="159.5" y="115.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="162.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (78 samples, 0.06%)</title><rect x="160.1" y="115.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="163.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (740 samples, 0.56%)</title><rect x="160.8" y="115.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (541 samples, 0.41%)</title><rect x="160.8" y="99.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (282 samples, 0.21%)</title><rect x="160.8" y="83.0" width="2.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="163.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (259 samples, 0.20%)</title><rect x="163.3" y="83.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.3" y="94.0"></text>
</g>
<g>
<title>byte[] (259 samples, 0.20%)</title><rect x="163.3" y="67.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="166.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (199 samples, 0.15%)</title><rect x="165.6" y="99.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="168.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (199 samples, 0.15%)</title><rect x="165.6" y="83.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (123 samples, 0.09%)</title><rect x="165.6" y="67.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="168.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (76 samples, 0.06%)</title><rect x="166.7" y="67.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.7" y="78.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.06%)</title><rect x="166.7" y="51.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="169.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (206 samples, 0.16%)</title><rect x="167.4" y="115.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (206 samples, 0.16%)</title><rect x="167.4" y="99.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="170.4" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (137 samples, 0.10%)</title><rect x="167.4" y="83.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="170.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (69 samples, 0.05%)</title><rect x="168.6" y="83.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.6" y="94.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.05%)</title><rect x="168.6" y="67.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="171.6" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (895 samples, 0.68%)</title><rect x="169.3" y="179.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="172.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (895 samples, 0.68%)</title><rect x="169.3" y="163.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="172.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (895 samples, 0.68%)</title><rect x="169.3" y="147.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (895 samples, 0.68%)</title><rect x="169.3" y="131.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="172.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (895 samples, 0.68%)</title><rect x="169.3" y="115.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (895 samples, 0.68%)</title><rect x="169.3" y="99.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (895 samples, 0.68%)</title><rect x="169.3" y="83.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (895 samples, 0.68%)</title><rect x="169.3" y="67.0" width="8.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="172.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (171 samples, 0.13%)</title><rect x="177.5" y="307.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (169 samples, 0.13%)</title><rect x="177.5" y="291.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (169 samples, 0.13%)</title><rect x="177.5" y="275.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="180.5" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (68 samples, 0.05%)</title><rect x="177.5" y="259.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="180.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (68 samples, 0.05%)</title><rect x="177.5" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="180.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (68 samples, 0.05%)</title><rect x="177.5" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.5" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (68 samples, 0.05%)</title><rect x="177.5" y="211.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (68 samples, 0.05%)</title><rect x="177.5" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="180.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (68 samples, 0.05%)</title><rect x="177.5" y="179.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="180.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (68 samples, 0.05%)</title><rect x="177.5" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (68 samples, 0.05%)</title><rect x="177.5" y="147.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="180.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (68 samples, 0.05%)</title><rect x="177.5" y="131.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="180.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (68 samples, 0.05%)</title><rect x="177.5" y="115.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (68 samples, 0.05%)</title><rect x="177.5" y="99.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (68 samples, 0.05%)</title><rect x="177.5" y="83.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (68 samples, 0.05%)</title><rect x="177.5" y="67.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="180.5" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (101 samples, 0.08%)</title><rect x="178.1" y="259.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (101 samples, 0.08%)</title><rect x="178.1" y="243.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (101 samples, 0.08%)</title><rect x="178.1" y="227.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (101 samples, 0.08%)</title><rect x="178.1" y="211.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (101 samples, 0.08%)</title><rect x="178.1" y="195.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (101 samples, 0.08%)</title><rect x="178.1" y="179.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (57 samples, 0.04%)</title><rect x="178.1" y="163.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (57 samples, 0.04%)</title><rect x="178.1" y="147.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (57 samples, 0.04%)</title><rect x="178.1" y="131.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="181.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (57 samples, 0.04%)</title><rect x="178.1" y="115.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="181.1" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (44 samples, 0.03%)</title><rect x="178.6" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="181.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (44 samples, 0.03%)</title><rect x="178.6" y="147.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (44 samples, 0.03%)</title><rect x="178.6" y="131.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (44 samples, 0.03%)</title><rect x="178.6" y="115.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="181.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (44 samples, 0.03%)</title><rect x="178.6" y="99.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (44 samples, 0.03%)</title><rect x="178.6" y="83.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (44 samples, 0.03%)</title><rect x="178.6" y="67.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (44 samples, 0.03%)</title><rect x="178.6" y="51.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="181.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (11,250 samples, 8.54%)</title><rect x="179.0" y="307.0" width="100.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.0" y="318.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (11,247 samples, 8.53%)</title><rect x="179.0" y="291.0" width="100.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="182.0" y="302.0">java/lang/It..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$134/1234271208.accept (11,243 samples, 8.53%)</title><rect x="179.0" y="275.0" width="100.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.0" y="286.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$9 (11,243 samples, 8.53%)</title><rect x="179.0" y="259.0" width="100.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="182.0" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (11,243 samples, 8.53%)</title><rect x="179.0" y="243.0" width="100.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.0" y="254.0">ru/mail/poli..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (54 samples, 0.04%)</title><rect x="179.0" y="227.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="182.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (11,189 samples, 8.49%)</title><rect x="179.5" y="227.0" width="100.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.5" y="238.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (11,189 samples, 8.49%)</title><rect x="179.5" y="211.0" width="100.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.5" y="222.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (11,189 samples, 8.49%)</title><rect x="179.5" y="195.0" width="100.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.5" y="206.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8,030 samples, 6.09%)</title><rect x="179.5" y="179.0" width="71.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.5" y="190.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,181 samples, 3.17%)</title><rect x="179.5" y="163.0" width="37.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="182.5" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3,849 samples, 2.92%)</title><rect x="217.0" y="163.0" width="34.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.0" y="174.0">ja..</text>
</g>
<g>
<title>byte[] (3,849 samples, 2.92%)</title><rect x="217.0" y="147.0" width="34.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="220.0" y="158.0">by..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (3,159 samples, 2.40%)</title><rect x="251.4" y="179.0" width="28.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="254.4" y="190.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3,159 samples, 2.40%)</title><rect x="251.4" y="163.0" width="28.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.4" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,145 samples, 1.63%)</title><rect x="251.4" y="147.0" width="19.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="254.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,014 samples, 0.77%)</title><rect x="270.6" y="147.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.6" y="158.0"></text>
</g>
<g>
<title>byte[] (1,014 samples, 0.77%)</title><rect x="270.6" y="131.0" width="9.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="273.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.wrapString (35 samples, 0.03%)</title><rect x="279.9" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="282.9" y="366.0"></text>
</g>
<g>
<title>[worker-1 tid=20770] (14,470 samples, 10.98%)</title><rect x="280.2" y="515.0" width="129.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="283.2" y="526.0">[worker-1 tid=20..</text>
</g>
<g>
<title>java/lang/Thread.run (14,470 samples, 10.98%)</title><rect x="280.2" y="499.0" width="129.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.2" y="510.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,470 samples, 10.98%)</title><rect x="280.2" y="483.0" width="129.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.2" y="494.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,470 samples, 10.98%)</title><rect x="280.2" y="467.0" width="129.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.2" y="478.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$100/1359819340.run (14,466 samples, 10.98%)</title><rect x="280.2" y="451.0" width="129.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.2" y="462.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (14,466 samples, 10.98%)</title><rect x="280.2" y="435.0" width="129.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.2" y="446.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (14,466 samples, 10.98%)</title><rect x="280.2" y="419.0" width="129.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.2" y="430.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/2088793524.process (14,466 samples, 10.98%)</title><rect x="280.2" y="403.0" width="129.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.2" y="414.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$get$2 (14,466 samples, 10.98%)</title><rect x="280.2" y="387.0" width="129.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.2" y="398.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleGet (14,466 samples, 10.98%)</title><rect x="280.2" y="371.0" width="129.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.2" y="382.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (14,369 samples, 10.90%)</title><rect x="280.7" y="355.0" width="128.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="283.7" y="366.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (154 samples, 0.12%)</title><rect x="280.7" y="339.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (154 samples, 0.12%)</title><rect x="280.7" y="323.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (154 samples, 0.12%)</title><rect x="280.7" y="307.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (154 samples, 0.12%)</title><rect x="280.7" y="291.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (154 samples, 0.12%)</title><rect x="280.7" y="275.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (148 samples, 0.11%)</title><rect x="280.7" y="259.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.7" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (65 samples, 0.05%)</title><rect x="280.7" y="243.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="283.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (65 samples, 0.05%)</title><rect x="280.7" y="227.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (65 samples, 0.05%)</title><rect x="280.7" y="211.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (65 samples, 0.05%)</title><rect x="280.7" y="195.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (65 samples, 0.05%)</title><rect x="280.7" y="179.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (65 samples, 0.05%)</title><rect x="280.7" y="163.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (65 samples, 0.05%)</title><rect x="280.7" y="147.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="283.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (65 samples, 0.05%)</title><rect x="280.7" y="131.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (65 samples, 0.05%)</title><rect x="280.7" y="115.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (65 samples, 0.05%)</title><rect x="280.7" y="99.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (65 samples, 0.05%)</title><rect x="280.7" y="83.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (65 samples, 0.05%)</title><rect x="280.7" y="67.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (65 samples, 0.05%)</title><rect x="280.7" y="51.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="283.7" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (83 samples, 0.06%)</title><rect x="281.3" y="243.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (83 samples, 0.06%)</title><rect x="281.3" y="227.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (83 samples, 0.06%)</title><rect x="281.3" y="211.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (83 samples, 0.06%)</title><rect x="281.3" y="195.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (83 samples, 0.06%)</title><rect x="281.3" y="179.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (83 samples, 0.06%)</title><rect x="281.3" y="163.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (52 samples, 0.04%)</title><rect x="281.3" y="147.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="284.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (52 samples, 0.04%)</title><rect x="281.3" y="131.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="284.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (52 samples, 0.04%)</title><rect x="281.3" y="115.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (52 samples, 0.04%)</title><rect x="281.3" y="99.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="284.3" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (31 samples, 0.02%)</title><rect x="281.7" y="147.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="284.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (31 samples, 0.02%)</title><rect x="281.7" y="131.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (31 samples, 0.02%)</title><rect x="281.7" y="115.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.7" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (31 samples, 0.02%)</title><rect x="281.7" y="99.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="284.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (31 samples, 0.02%)</title><rect x="281.7" y="83.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (31 samples, 0.02%)</title><rect x="281.7" y="67.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (31 samples, 0.02%)</title><rect x="281.7" y="51.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.7" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.02%)</title><rect x="281.7" y="35.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="284.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (14,193 samples, 10.77%)</title><rect x="282.2" y="339.0" width="127.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.2" y="350.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (14,131 samples, 10.72%)</title><rect x="282.5" y="323.0" width="126.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.5" y="334.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,819 samples, 2.14%)</title><rect x="282.5" y="307.0" width="25.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.5" y="318.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,819 samples, 2.14%)</title><rect x="282.5" y="291.0" width="25.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.5" y="302.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (86 samples, 0.07%)</title><rect x="282.5" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.5" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (86 samples, 0.07%)</title><rect x="282.5" y="259.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="285.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,707 samples, 2.05%)</title><rect x="283.3" y="275.0" width="24.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.3" y="286.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,707 samples, 2.05%)</title><rect x="283.3" y="259.0" width="24.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="286.3" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (51 samples, 0.04%)</title><rect x="283.3" y="243.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (51 samples, 0.04%)</title><rect x="283.3" y="227.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.3" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (51 samples, 0.04%)</title><rect x="283.3" y="211.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="286.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,656 samples, 2.02%)</title><rect x="283.7" y="243.0" width="23.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.7" y="254.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,656 samples, 2.02%)</title><rect x="283.7" y="227.0" width="23.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.7" y="238.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,656 samples, 2.02%)</title><rect x="283.7" y="211.0" width="23.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.7" y="222.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,656 samples, 2.02%)</title><rect x="283.7" y="195.0" width="23.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.7" y="206.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,809 samples, 1.37%)</title><rect x="283.7" y="179.0" width="16.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,809 samples, 1.37%)</title><rect x="283.7" y="163.0" width="16.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,809 samples, 1.37%)</title><rect x="283.7" y="147.0" width="16.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (1,809 samples, 1.37%)</title><rect x="283.7" y="131.0" width="16.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="286.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (769 samples, 0.58%)</title><rect x="283.7" y="115.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="286.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (401 samples, 0.30%)</title><rect x="283.7" y="99.0" width="3.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="286.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (368 samples, 0.28%)</title><rect x="287.3" y="99.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.3" y="110.0"></text>
</g>
<g>
<title>byte[] (368 samples, 0.28%)</title><rect x="287.3" y="83.0" width="3.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="290.3" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (67 samples, 0.05%)</title><rect x="290.6" y="115.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="293.6" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (55 samples, 0.04%)</title><rect x="291.2" y="115.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="294.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (739 samples, 0.56%)</title><rect x="291.7" y="115.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="294.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (543 samples, 0.41%)</title><rect x="291.7" y="99.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (270 samples, 0.20%)</title><rect x="291.7" y="83.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="294.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (273 samples, 0.21%)</title><rect x="294.1" y="83.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.1" y="94.0"></text>
</g>
<g>
<title>byte[] (273 samples, 0.21%)</title><rect x="294.1" y="67.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="297.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (196 samples, 0.15%)</title><rect x="296.6" y="99.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="299.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (196 samples, 0.15%)</title><rect x="296.6" y="83.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="299.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (136 samples, 0.10%)</title><rect x="296.6" y="67.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="299.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (60 samples, 0.05%)</title><rect x="297.8" y="67.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="300.8" y="78.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.05%)</title><rect x="297.8" y="51.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="300.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (179 samples, 0.14%)</title><rect x="298.3" y="115.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="301.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (179 samples, 0.14%)</title><rect x="298.3" y="99.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="301.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (118 samples, 0.09%)</title><rect x="298.3" y="83.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="301.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (61 samples, 0.05%)</title><rect x="299.4" y="83.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.4" y="94.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.05%)</title><rect x="299.4" y="67.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="302.4" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (847 samples, 0.64%)</title><rect x="299.9" y="179.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="302.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (847 samples, 0.64%)</title><rect x="299.9" y="163.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (847 samples, 0.64%)</title><rect x="299.9" y="147.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="302.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (847 samples, 0.64%)</title><rect x="299.9" y="131.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (847 samples, 0.64%)</title><rect x="299.9" y="115.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (847 samples, 0.64%)</title><rect x="299.9" y="99.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (847 samples, 0.64%)</title><rect x="299.9" y="83.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="302.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (847 samples, 0.64%)</title><rect x="299.9" y="67.0" width="7.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="302.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (164 samples, 0.12%)</title><rect x="307.7" y="307.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (160 samples, 0.12%)</title><rect x="307.8" y="291.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (160 samples, 0.12%)</title><rect x="307.8" y="275.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.8" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (62 samples, 0.05%)</title><rect x="307.8" y="259.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (62 samples, 0.05%)</title><rect x="307.8" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (62 samples, 0.05%)</title><rect x="307.8" y="227.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.8" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.05%)</title><rect x="307.8" y="211.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.05%)</title><rect x="307.8" y="195.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (62 samples, 0.05%)</title><rect x="307.8" y="179.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (62 samples, 0.05%)</title><rect x="307.8" y="163.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="310.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (62 samples, 0.05%)</title><rect x="307.8" y="147.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (62 samples, 0.05%)</title><rect x="307.8" y="131.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="310.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (62 samples, 0.05%)</title><rect x="307.8" y="115.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="310.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (62 samples, 0.05%)</title><rect x="307.8" y="99.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="310.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (62 samples, 0.05%)</title><rect x="307.8" y="83.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (62 samples, 0.05%)</title><rect x="307.8" y="67.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="310.8" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (98 samples, 0.07%)</title><rect x="308.3" y="259.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (98 samples, 0.07%)</title><rect x="308.3" y="243.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (98 samples, 0.07%)</title><rect x="308.3" y="227.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (98 samples, 0.07%)</title><rect x="308.3" y="211.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (98 samples, 0.07%)</title><rect x="308.3" y="195.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="311.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (98 samples, 0.07%)</title><rect x="308.3" y="179.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (54 samples, 0.04%)</title><rect x="308.3" y="163.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (54 samples, 0.04%)</title><rect x="308.3" y="147.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (54 samples, 0.04%)</title><rect x="308.3" y="131.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="311.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (54 samples, 0.04%)</title><rect x="308.3" y="115.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="311.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (29 samples, 0.02%)</title><rect x="308.3" y="99.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="311.3" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (44 samples, 0.03%)</title><rect x="308.8" y="163.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (44 samples, 0.03%)</title><rect x="308.8" y="147.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (44 samples, 0.03%)</title><rect x="308.8" y="131.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.8" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (44 samples, 0.03%)</title><rect x="308.8" y="115.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (44 samples, 0.03%)</title><rect x="308.8" y="99.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (44 samples, 0.03%)</title><rect x="308.8" y="83.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (44 samples, 0.03%)</title><rect x="308.8" y="67.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="311.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (44 samples, 0.03%)</title><rect x="308.8" y="51.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="311.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (11,148 samples, 8.46%)</title><rect x="309.2" y="307.0" width="99.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="312.2" y="318.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (11,147 samples, 8.46%)</title><rect x="309.2" y="291.0" width="99.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="312.2" y="302.0">java/lang/It..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$134/1234271208.accept (11,139 samples, 8.45%)</title><rect x="309.3" y="275.0" width="99.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="312.3" y="286.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$9 (11,139 samples, 8.45%)</title><rect x="309.3" y="259.0" width="99.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="312.3" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (11,139 samples, 8.45%)</title><rect x="309.3" y="243.0" width="99.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="312.3" y="254.0">ru/mail/poli..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (73 samples, 0.06%)</title><rect x="309.3" y="227.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="312.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (11,066 samples, 8.40%)</title><rect x="309.9" y="227.0" width="99.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="312.9" y="238.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (11,066 samples, 8.40%)</title><rect x="309.9" y="211.0" width="99.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="312.9" y="222.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (11,066 samples, 8.40%)</title><rect x="309.9" y="195.0" width="99.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.9" y="206.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8,007 samples, 6.08%)</title><rect x="309.9" y="179.0" width="71.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.9" y="190.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,082 samples, 3.10%)</title><rect x="309.9" y="163.0" width="36.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="312.9" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3,925 samples, 2.98%)</title><rect x="346.5" y="163.0" width="35.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.5" y="174.0">jav..</text>
</g>
<g>
<title>byte[] (3,925 samples, 2.98%)</title><rect x="346.5" y="147.0" width="35.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="349.5" y="158.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (3,059 samples, 2.32%)</title><rect x="381.6" y="179.0" width="27.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.6" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3,059 samples, 2.32%)</title><rect x="381.6" y="163.0" width="27.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.6" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,079 samples, 1.58%)</title><rect x="381.6" y="147.0" width="18.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="384.6" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (980 samples, 0.74%)</title><rect x="400.2" y="147.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="403.2" y="158.0"></text>
</g>
<g>
<title>byte[] (980 samples, 0.74%)</title><rect x="400.2" y="131.0" width="8.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="403.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (35 samples, 0.03%)</title><rect x="409.0" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="412.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.wrapString (47 samples, 0.04%)</title><rect x="409.3" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="412.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.toBytes (41 samples, 0.03%)</title><rect x="409.4" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (41 samples, 0.03%)</title><rect x="409.4" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="412.4" y="334.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.03%)</title><rect x="409.4" y="307.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="412.4" y="318.0"></text>
</g>
<g>
<title>[worker-2 tid=20761] (14,525 samples, 11.02%)</title><rect x="409.8" y="515.0" width="130.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="412.8" y="526.0">[worker-2 tid=20..</text>
</g>
<g>
<title>java/lang/Thread.run (14,525 samples, 11.02%)</title><rect x="409.8" y="499.0" width="130.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="412.8" y="510.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,525 samples, 11.02%)</title><rect x="409.8" y="483.0" width="130.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="412.8" y="494.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,525 samples, 11.02%)</title><rect x="409.8" y="467.0" width="130.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="412.8" y="478.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$100/1359819340.run (14,524 samples, 11.02%)</title><rect x="409.8" y="451.0" width="130.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.8" y="462.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (14,524 samples, 11.02%)</title><rect x="409.8" y="435.0" width="130.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="412.8" y="446.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (14,524 samples, 11.02%)</title><rect x="409.8" y="419.0" width="130.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.8" y="430.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/2088793524.process (14,524 samples, 11.02%)</title><rect x="409.8" y="403.0" width="130.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="412.8" y="414.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$get$2 (14,524 samples, 11.02%)</title><rect x="409.8" y="387.0" width="130.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="412.8" y="398.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleGet (14,524 samples, 11.02%)</title><rect x="409.8" y="371.0" width="130.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.8" y="382.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (14,429 samples, 10.95%)</title><rect x="410.2" y="355.0" width="129.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.2" y="366.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (162 samples, 0.12%)</title><rect x="410.2" y="339.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (162 samples, 0.12%)</title><rect x="410.2" y="323.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (162 samples, 0.12%)</title><rect x="410.2" y="307.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (162 samples, 0.12%)</title><rect x="410.2" y="291.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (162 samples, 0.12%)</title><rect x="410.2" y="275.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (154 samples, 0.12%)</title><rect x="410.2" y="259.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.2" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (56 samples, 0.04%)</title><rect x="410.2" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (56 samples, 0.04%)</title><rect x="410.2" y="227.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (56 samples, 0.04%)</title><rect x="410.2" y="211.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (56 samples, 0.04%)</title><rect x="410.2" y="195.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (56 samples, 0.04%)</title><rect x="410.2" y="179.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="413.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (56 samples, 0.04%)</title><rect x="410.2" y="163.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (56 samples, 0.04%)</title><rect x="410.2" y="147.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (56 samples, 0.04%)</title><rect x="410.2" y="131.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="413.2" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (56 samples, 0.04%)</title><rect x="410.2" y="115.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (56 samples, 0.04%)</title><rect x="410.2" y="99.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (56 samples, 0.04%)</title><rect x="410.2" y="83.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (56 samples, 0.04%)</title><rect x="410.2" y="67.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="413.2" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (56 samples, 0.04%)</title><rect x="410.2" y="51.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="413.2" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (98 samples, 0.07%)</title><rect x="410.7" y="243.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (98 samples, 0.07%)</title><rect x="410.7" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (98 samples, 0.07%)</title><rect x="410.7" y="211.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (98 samples, 0.07%)</title><rect x="410.7" y="195.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (98 samples, 0.07%)</title><rect x="410.7" y="179.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (98 samples, 0.07%)</title><rect x="410.7" y="163.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (56 samples, 0.04%)</title><rect x="410.7" y="147.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (56 samples, 0.04%)</title><rect x="410.7" y="131.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (56 samples, 0.04%)</title><rect x="410.7" y="115.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (56 samples, 0.04%)</title><rect x="410.7" y="99.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.7" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (42 samples, 0.03%)</title><rect x="411.2" y="147.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (42 samples, 0.03%)</title><rect x="411.2" y="131.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="414.2" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (42 samples, 0.03%)</title><rect x="411.2" y="115.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="414.2" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (42 samples, 0.03%)</title><rect x="411.2" y="99.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (42 samples, 0.03%)</title><rect x="411.2" y="83.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (42 samples, 0.03%)</title><rect x="411.2" y="67.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (42 samples, 0.03%)</title><rect x="411.2" y="51.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="414.2" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (42 samples, 0.03%)</title><rect x="411.2" y="35.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="414.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (14,247 samples, 10.81%)</title><rect x="411.9" y="339.0" width="127.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="414.9" y="350.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (14,205 samples, 10.78%)</title><rect x="412.1" y="323.0" width="127.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="415.1" y="334.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,802 samples, 2.13%)</title><rect x="412.1" y="307.0" width="25.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="415.1" y="318.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,801 samples, 2.13%)</title><rect x="412.1" y="291.0" width="25.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.1" y="302.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (69 samples, 0.05%)</title><rect x="412.1" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.1" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (69 samples, 0.05%)</title><rect x="412.1" y="259.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="415.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,708 samples, 2.05%)</title><rect x="412.8" y="275.0" width="24.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.8" y="286.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,708 samples, 2.05%)</title><rect x="412.8" y="259.0" width="24.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="415.8" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (39 samples, 0.03%)</title><rect x="412.8" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="415.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (39 samples, 0.03%)</title><rect x="412.8" y="227.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.8" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (39 samples, 0.03%)</title><rect x="412.8" y="211.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="415.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,669 samples, 2.03%)</title><rect x="413.1" y="243.0" width="23.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.1" y="254.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,669 samples, 2.03%)</title><rect x="413.1" y="227.0" width="23.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.1" y="238.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,669 samples, 2.03%)</title><rect x="413.1" y="211.0" width="23.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="416.1" y="222.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,669 samples, 2.03%)</title><rect x="413.1" y="195.0" width="23.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="416.1" y="206.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,838 samples, 1.39%)</title><rect x="413.1" y="179.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="416.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,838 samples, 1.39%)</title><rect x="413.1" y="163.0" width="16.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,838 samples, 1.39%)</title><rect x="413.1" y="147.0" width="16.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="416.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (1,838 samples, 1.39%)</title><rect x="413.1" y="131.0" width="16.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="416.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (727 samples, 0.55%)</title><rect x="413.1" y="115.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.1" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (384 samples, 0.29%)</title><rect x="413.1" y="99.0" width="3.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="416.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (343 samples, 0.26%)</title><rect x="416.5" y="99.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.5" y="110.0"></text>
</g>
<g>
<title>byte[] (343 samples, 0.26%)</title><rect x="416.5" y="83.0" width="3.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="419.5" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (56 samples, 0.04%)</title><rect x="419.6" y="115.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="422.6" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (75 samples, 0.06%)</title><rect x="420.1" y="115.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="423.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (768 samples, 0.58%)</title><rect x="420.8" y="115.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="423.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (540 samples, 0.41%)</title><rect x="420.8" y="99.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (282 samples, 0.21%)</title><rect x="420.8" y="83.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="423.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (258 samples, 0.20%)</title><rect x="423.3" y="83.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.3" y="94.0"></text>
</g>
<g>
<title>byte[] (258 samples, 0.20%)</title><rect x="423.3" y="67.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="426.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (228 samples, 0.17%)</title><rect x="425.6" y="99.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (228 samples, 0.17%)</title><rect x="425.6" y="83.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="428.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (146 samples, 0.11%)</title><rect x="425.6" y="67.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="428.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (82 samples, 0.06%)</title><rect x="426.9" y="67.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.9" y="78.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.06%)</title><rect x="426.9" y="51.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="429.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (212 samples, 0.16%)</title><rect x="427.7" y="115.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (212 samples, 0.16%)</title><rect x="427.7" y="99.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (143 samples, 0.11%)</title><rect x="427.7" y="83.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="430.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (69 samples, 0.05%)</title><rect x="428.9" y="83.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.9" y="94.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.05%)</title><rect x="428.9" y="67.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="431.9" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (831 samples, 0.63%)</title><rect x="429.6" y="179.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="432.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (831 samples, 0.63%)</title><rect x="429.6" y="163.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (831 samples, 0.63%)</title><rect x="429.6" y="147.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="432.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (831 samples, 0.63%)</title><rect x="429.6" y="131.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="432.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (831 samples, 0.63%)</title><rect x="429.6" y="115.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (831 samples, 0.63%)</title><rect x="429.6" y="99.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="432.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (831 samples, 0.63%)</title><rect x="429.6" y="83.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (831 samples, 0.63%)</title><rect x="429.6" y="67.0" width="7.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="432.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (140 samples, 0.11%)</title><rect x="437.2" y="307.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="440.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (139 samples, 0.11%)</title><rect x="437.2" y="291.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (139 samples, 0.11%)</title><rect x="437.2" y="275.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="440.2" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (50 samples, 0.04%)</title><rect x="437.2" y="259.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="440.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (50 samples, 0.04%)</title><rect x="437.2" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="440.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (50 samples, 0.04%)</title><rect x="437.2" y="227.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="440.2" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.04%)</title><rect x="437.2" y="211.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.04%)</title><rect x="437.2" y="195.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (50 samples, 0.04%)</title><rect x="437.2" y="179.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="440.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (50 samples, 0.04%)</title><rect x="437.2" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (50 samples, 0.04%)</title><rect x="437.2" y="147.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (50 samples, 0.04%)</title><rect x="437.2" y="131.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="440.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (50 samples, 0.04%)</title><rect x="437.2" y="115.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (50 samples, 0.04%)</title><rect x="437.2" y="99.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="440.2" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (50 samples, 0.04%)</title><rect x="437.2" y="83.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (50 samples, 0.04%)</title><rect x="437.2" y="67.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="440.2" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (89 samples, 0.07%)</title><rect x="437.6" y="259.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="440.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (89 samples, 0.07%)</title><rect x="437.6" y="243.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (89 samples, 0.07%)</title><rect x="437.6" y="227.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (89 samples, 0.07%)</title><rect x="437.6" y="211.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (89 samples, 0.07%)</title><rect x="437.6" y="195.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="440.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (89 samples, 0.07%)</title><rect x="437.6" y="179.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="440.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (62 samples, 0.05%)</title><rect x="437.6" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="440.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (62 samples, 0.05%)</title><rect x="437.6" y="147.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (62 samples, 0.05%)</title><rect x="437.6" y="131.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="440.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (62 samples, 0.05%)</title><rect x="437.6" y="115.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="440.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (11,263 samples, 8.55%)</title><rect x="438.4" y="307.0" width="100.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="441.4" y="318.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (11,261 samples, 8.54%)</title><rect x="438.4" y="291.0" width="100.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="441.4" y="302.0">java/lang/It..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$134/1234271208.accept (11,257 samples, 8.54%)</title><rect x="438.5" y="275.0" width="100.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="441.5" y="286.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$9 (11,257 samples, 8.54%)</title><rect x="438.5" y="259.0" width="100.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="441.5" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (11,257 samples, 8.54%)</title><rect x="438.5" y="243.0" width="100.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="441.5" y="254.0">ru/mail/poli..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (65 samples, 0.05%)</title><rect x="438.5" y="227.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="441.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (11,192 samples, 8.49%)</title><rect x="439.0" y="227.0" width="100.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="442.0" y="238.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (11,192 samples, 8.49%)</title><rect x="439.0" y="211.0" width="100.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.0" y="222.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (11,192 samples, 8.49%)</title><rect x="439.0" y="195.0" width="100.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="442.0" y="206.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8,135 samples, 6.17%)</title><rect x="439.0" y="179.0" width="72.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="442.0" y="190.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,124 samples, 3.13%)</title><rect x="439.0" y="163.0" width="37.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="442.0" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4,011 samples, 3.04%)</title><rect x="476.0" y="163.0" width="35.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.0" y="174.0">jav..</text>
</g>
<g>
<title>byte[] (4,011 samples, 3.04%)</title><rect x="476.0" y="147.0" width="35.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="479.0" y="158.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (3,057 samples, 2.32%)</title><rect x="511.9" y="179.0" width="27.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.9" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3,057 samples, 2.32%)</title><rect x="511.9" y="163.0" width="27.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="514.9" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,047 samples, 1.55%)</title><rect x="511.9" y="147.0" width="18.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="514.9" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,010 samples, 0.77%)</title><rect x="530.2" y="147.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.2" y="158.0"></text>
</g>
<g>
<title>byte[] (1,010 samples, 0.77%)</title><rect x="530.2" y="131.0" width="9.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="533.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.wrapString (41 samples, 0.03%)</title><rect x="539.4" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="542.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.toBytes (38 samples, 0.03%)</title><rect x="539.5" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="542.5" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (38 samples, 0.03%)</title><rect x="539.5" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="542.5" y="334.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.03%)</title><rect x="539.5" y="307.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="542.5" y="318.0"></text>
</g>
<g>
<title>[worker-3 tid=20762] (14,547 samples, 11.04%)</title><rect x="539.8" y="515.0" width="130.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="542.8" y="526.0">[worker-3 tid=20..</text>
</g>
<g>
<title>java/lang/Thread.run (14,547 samples, 11.04%)</title><rect x="539.8" y="499.0" width="130.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="542.8" y="510.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,547 samples, 11.04%)</title><rect x="539.8" y="483.0" width="130.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="542.8" y="494.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,547 samples, 11.04%)</title><rect x="539.8" y="467.0" width="130.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="542.8" y="478.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$100/1359819340.run (14,542 samples, 11.03%)</title><rect x="539.8" y="451.0" width="130.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="542.8" y="462.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (14,542 samples, 11.03%)</title><rect x="539.8" y="435.0" width="130.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="542.8" y="446.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (14,542 samples, 11.03%)</title><rect x="539.8" y="419.0" width="130.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="542.8" y="430.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/2088793524.process (14,542 samples, 11.03%)</title><rect x="539.8" y="403.0" width="130.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="542.8" y="414.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$get$2 (14,542 samples, 11.03%)</title><rect x="539.8" y="387.0" width="130.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.8" y="398.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleGet (14,542 samples, 11.03%)</title><rect x="539.8" y="371.0" width="130.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="542.8" y="382.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (14,434 samples, 10.95%)</title><rect x="540.4" y="355.0" width="129.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="543.4" y="366.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (156 samples, 0.12%)</title><rect x="540.4" y="339.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (156 samples, 0.12%)</title><rect x="540.4" y="323.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (156 samples, 0.12%)</title><rect x="540.4" y="307.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (156 samples, 0.12%)</title><rect x="540.4" y="291.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (156 samples, 0.12%)</title><rect x="540.4" y="275.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="543.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (148 samples, 0.11%)</title><rect x="540.4" y="259.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.4" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (49 samples, 0.04%)</title><rect x="540.4" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (49 samples, 0.04%)</title><rect x="540.4" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (49 samples, 0.04%)</title><rect x="540.4" y="211.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 0.04%)</title><rect x="540.4" y="195.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 0.04%)</title><rect x="540.4" y="179.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (49 samples, 0.04%)</title><rect x="540.4" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (49 samples, 0.04%)</title><rect x="540.4" y="147.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (49 samples, 0.04%)</title><rect x="540.4" y="131.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.4" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (49 samples, 0.04%)</title><rect x="540.4" y="115.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="543.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (49 samples, 0.04%)</title><rect x="540.4" y="99.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (49 samples, 0.04%)</title><rect x="540.4" y="83.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (49 samples, 0.04%)</title><rect x="540.4" y="67.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="543.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (49 samples, 0.04%)</title><rect x="540.4" y="51.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="543.4" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (99 samples, 0.08%)</title><rect x="540.8" y="243.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="543.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (99 samples, 0.08%)</title><rect x="540.8" y="227.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="543.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (99 samples, 0.08%)</title><rect x="540.8" y="211.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (99 samples, 0.08%)</title><rect x="540.8" y="195.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (99 samples, 0.08%)</title><rect x="540.8" y="179.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (99 samples, 0.08%)</title><rect x="540.8" y="163.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (55 samples, 0.04%)</title><rect x="540.8" y="147.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (55 samples, 0.04%)</title><rect x="540.8" y="131.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="543.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (55 samples, 0.04%)</title><rect x="540.8" y="115.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (55 samples, 0.04%)</title><rect x="540.8" y="99.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.8" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (44 samples, 0.03%)</title><rect x="541.3" y="147.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="544.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (44 samples, 0.03%)</title><rect x="541.3" y="131.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="544.3" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (44 samples, 0.03%)</title><rect x="541.3" y="115.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.3" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (44 samples, 0.03%)</title><rect x="541.3" y="99.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (44 samples, 0.03%)</title><rect x="541.3" y="83.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (44 samples, 0.03%)</title><rect x="541.3" y="67.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="544.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (44 samples, 0.03%)</title><rect x="541.3" y="51.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="544.3" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (44 samples, 0.03%)</title><rect x="541.3" y="35.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="544.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (14,247 samples, 10.81%)</title><rect x="542.0" y="339.0" width="127.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="545.0" y="350.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (14,196 samples, 10.77%)</title><rect x="542.3" y="323.0" width="127.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.3" y="334.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,801 samples, 2.13%)</title><rect x="542.3" y="307.0" width="25.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="545.3" y="318.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,801 samples, 2.13%)</title><rect x="542.3" y="291.0" width="25.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="545.3" y="302.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (64 samples, 0.05%)</title><rect x="542.3" y="275.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.3" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (64 samples, 0.05%)</title><rect x="542.3" y="259.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="545.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,720 samples, 2.06%)</title><rect x="542.9" y="275.0" width="24.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="545.9" y="286.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,720 samples, 2.06%)</title><rect x="542.9" y="259.0" width="24.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="545.9" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (47 samples, 0.04%)</title><rect x="542.9" y="243.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (47 samples, 0.04%)</title><rect x="542.9" y="227.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.9" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (47 samples, 0.04%)</title><rect x="542.9" y="211.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="545.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,673 samples, 2.03%)</title><rect x="543.3" y="243.0" width="24.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.3" y="254.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,673 samples, 2.03%)</title><rect x="543.3" y="227.0" width="24.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.3" y="238.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,673 samples, 2.03%)</title><rect x="543.3" y="211.0" width="24.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.3" y="222.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,673 samples, 2.03%)</title><rect x="543.3" y="195.0" width="24.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.3" y="206.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,802 samples, 1.37%)</title><rect x="543.3" y="179.0" width="16.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="546.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,802 samples, 1.37%)</title><rect x="543.3" y="163.0" width="16.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,802 samples, 1.37%)</title><rect x="543.3" y="147.0" width="16.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (1,802 samples, 1.37%)</title><rect x="543.3" y="131.0" width="16.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (746 samples, 0.57%)</title><rect x="543.3" y="115.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (396 samples, 0.30%)</title><rect x="543.3" y="99.0" width="3.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="546.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (350 samples, 0.27%)</title><rect x="546.9" y="99.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.9" y="110.0"></text>
</g>
<g>
<title>byte[] (350 samples, 0.27%)</title><rect x="546.9" y="83.0" width="3.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="549.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (73 samples, 0.06%)</title><rect x="550.0" y="115.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="553.0" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (65 samples, 0.05%)</title><rect x="550.7" y="115.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="553.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (727 samples, 0.55%)</title><rect x="551.3" y="115.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (531 samples, 0.40%)</title><rect x="551.3" y="99.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (266 samples, 0.20%)</title><rect x="551.3" y="83.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="554.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (265 samples, 0.20%)</title><rect x="553.6" y="83.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="556.6" y="94.0"></text>
</g>
<g>
<title>byte[] (265 samples, 0.20%)</title><rect x="553.6" y="67.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="556.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (196 samples, 0.15%)</title><rect x="556.0" y="99.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (196 samples, 0.15%)</title><rect x="556.0" y="83.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="559.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (144 samples, 0.11%)</title><rect x="556.0" y="67.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="559.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (52 samples, 0.04%)</title><rect x="557.3" y="67.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="560.3" y="78.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.04%)</title><rect x="557.3" y="51.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="560.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (191 samples, 0.14%)</title><rect x="557.8" y="115.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="560.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (191 samples, 0.14%)</title><rect x="557.8" y="99.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="560.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (130 samples, 0.10%)</title><rect x="557.8" y="83.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="560.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (61 samples, 0.05%)</title><rect x="558.9" y="83.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="561.9" y="94.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.05%)</title><rect x="558.9" y="67.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="561.9" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (871 samples, 0.66%)</title><rect x="559.5" y="179.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (871 samples, 0.66%)</title><rect x="559.5" y="163.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (871 samples, 0.66%)</title><rect x="559.5" y="147.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (871 samples, 0.66%)</title><rect x="559.5" y="131.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="562.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (871 samples, 0.66%)</title><rect x="559.5" y="115.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (871 samples, 0.66%)</title><rect x="559.5" y="99.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (871 samples, 0.66%)</title><rect x="559.5" y="83.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (871 samples, 0.66%)</title><rect x="559.5" y="67.0" width="7.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="562.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (147 samples, 0.11%)</title><rect x="567.4" y="307.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (146 samples, 0.11%)</title><rect x="567.4" y="291.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="570.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (146 samples, 0.11%)</title><rect x="567.4" y="275.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.4" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (50 samples, 0.04%)</title><rect x="567.4" y="259.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (50 samples, 0.04%)</title><rect x="567.4" y="243.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="570.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (50 samples, 0.04%)</title><rect x="567.4" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.04%)</title><rect x="567.4" y="211.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.04%)</title><rect x="567.4" y="195.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (50 samples, 0.04%)</title><rect x="567.4" y="179.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="570.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (50 samples, 0.04%)</title><rect x="567.4" y="163.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (50 samples, 0.04%)</title><rect x="567.4" y="147.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (50 samples, 0.04%)</title><rect x="567.4" y="131.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="570.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (50 samples, 0.04%)</title><rect x="567.4" y="115.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="570.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (50 samples, 0.04%)</title><rect x="567.4" y="99.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (50 samples, 0.04%)</title><rect x="567.4" y="83.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="570.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (50 samples, 0.04%)</title><rect x="567.4" y="67.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="570.4" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (96 samples, 0.07%)</title><rect x="567.8" y="259.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (96 samples, 0.07%)</title><rect x="567.8" y="243.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (96 samples, 0.07%)</title><rect x="567.8" y="227.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (96 samples, 0.07%)</title><rect x="567.8" y="211.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="570.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (96 samples, 0.07%)</title><rect x="567.8" y="195.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="570.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (96 samples, 0.07%)</title><rect x="567.8" y="179.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (58 samples, 0.04%)</title><rect x="567.8" y="163.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (58 samples, 0.04%)</title><rect x="567.8" y="147.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (58 samples, 0.04%)</title><rect x="567.8" y="131.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (58 samples, 0.04%)</title><rect x="567.8" y="115.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="570.8" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (38 samples, 0.03%)</title><rect x="568.4" y="163.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="571.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (38 samples, 0.03%)</title><rect x="568.4" y="147.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="571.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (38 samples, 0.03%)</title><rect x="568.4" y="131.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="571.4" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (38 samples, 0.03%)</title><rect x="568.4" y="115.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (38 samples, 0.03%)</title><rect x="568.4" y="99.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (38 samples, 0.03%)</title><rect x="568.4" y="83.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="571.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (38 samples, 0.03%)</title><rect x="568.4" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (38 samples, 0.03%)</title><rect x="568.4" y="51.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="571.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (11,248 samples, 8.53%)</title><rect x="568.7" y="307.0" width="100.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.7" y="318.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (11,245 samples, 8.53%)</title><rect x="568.7" y="291.0" width="100.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="571.7" y="302.0">java/lang/It..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$134/1234271208.accept (11,242 samples, 8.53%)</title><rect x="568.7" y="275.0" width="100.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="571.7" y="286.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$9 (11,242 samples, 8.53%)</title><rect x="568.7" y="259.0" width="100.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.7" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (11,242 samples, 8.53%)</title><rect x="568.7" y="243.0" width="100.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="571.7" y="254.0">ru/mail/poli..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (70 samples, 0.05%)</title><rect x="568.7" y="227.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="571.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (11,172 samples, 8.48%)</title><rect x="569.3" y="227.0" width="100.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.3" y="238.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (11,172 samples, 8.48%)</title><rect x="569.3" y="211.0" width="100.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.3" y="222.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (11,172 samples, 8.48%)</title><rect x="569.3" y="195.0" width="100.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="572.3" y="206.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8,195 samples, 6.22%)</title><rect x="569.3" y="179.0" width="73.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.3" y="190.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,114 samples, 3.12%)</title><rect x="569.3" y="163.0" width="36.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="572.3" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4,081 samples, 3.10%)</title><rect x="606.2" y="163.0" width="36.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="609.2" y="174.0">jav..</text>
</g>
<g>
<title>byte[] (4,081 samples, 3.10%)</title><rect x="606.2" y="147.0" width="36.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="609.2" y="158.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (2,977 samples, 2.26%)</title><rect x="642.7" y="179.0" width="26.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.7" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,977 samples, 2.26%)</title><rect x="642.7" y="163.0" width="26.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.7" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,972 samples, 1.50%)</title><rect x="642.7" y="147.0" width="17.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="645.7" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,005 samples, 0.76%)</title><rect x="660.4" y="147.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="663.4" y="158.0"></text>
</g>
<g>
<title>byte[] (1,005 samples, 0.76%)</title><rect x="660.4" y="131.0" width="9.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="663.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.wrapString (44 samples, 0.03%)</title><rect x="669.6" y="355.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.toBytes (40 samples, 0.03%)</title><rect x="669.7" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (40 samples, 0.03%)</title><rect x="669.7" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="672.7" y="334.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.03%)</title><rect x="669.7" y="307.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="672.7" y="318.0"></text>
</g>
<g>
<title>[worker-4 tid=20771] (14,523 samples, 11.02%)</title><rect x="670.0" y="515.0" width="130.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="673.0" y="526.0">[worker-4 tid=20..</text>
</g>
<g>
<title>java/lang/Thread.run (14,523 samples, 11.02%)</title><rect x="670.0" y="499.0" width="130.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.0" y="510.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,523 samples, 11.02%)</title><rect x="670.0" y="483.0" width="130.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="673.0" y="494.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,523 samples, 11.02%)</title><rect x="670.0" y="467.0" width="130.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.0" y="478.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$100/1359819340.run (14,519 samples, 11.02%)</title><rect x="670.1" y="451.0" width="130.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="673.1" y="462.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (14,519 samples, 11.02%)</title><rect x="670.1" y="435.0" width="130.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.1" y="446.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (14,519 samples, 11.02%)</title><rect x="670.1" y="419.0" width="130.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.1" y="430.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/2088793524.process (14,519 samples, 11.02%)</title><rect x="670.1" y="403.0" width="130.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.1" y="414.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$get$2 (14,519 samples, 11.02%)</title><rect x="670.1" y="387.0" width="130.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.1" y="398.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleGet (14,519 samples, 11.02%)</title><rect x="670.1" y="371.0" width="130.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.1" y="382.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (14,417 samples, 10.94%)</title><rect x="670.6" y="355.0" width="129.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.6" y="366.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (167 samples, 0.13%)</title><rect x="670.6" y="339.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (167 samples, 0.13%)</title><rect x="670.6" y="323.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (167 samples, 0.13%)</title><rect x="670.6" y="307.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (167 samples, 0.13%)</title><rect x="670.6" y="291.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (167 samples, 0.13%)</title><rect x="670.6" y="275.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (159 samples, 0.12%)</title><rect x="670.6" y="259.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="673.6" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (57 samples, 0.04%)</title><rect x="670.6" y="243.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (57 samples, 0.04%)</title><rect x="670.6" y="227.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (57 samples, 0.04%)</title><rect x="670.6" y="211.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.04%)</title><rect x="670.6" y="195.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="673.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.04%)</title><rect x="670.6" y="179.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="673.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (57 samples, 0.04%)</title><rect x="670.6" y="163.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (57 samples, 0.04%)</title><rect x="670.6" y="147.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (57 samples, 0.04%)</title><rect x="670.6" y="131.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (57 samples, 0.04%)</title><rect x="670.6" y="115.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="673.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (57 samples, 0.04%)</title><rect x="670.6" y="99.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="673.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (57 samples, 0.04%)</title><rect x="670.6" y="83.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (57 samples, 0.04%)</title><rect x="670.6" y="67.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (57 samples, 0.04%)</title><rect x="670.6" y="51.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="673.6" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (102 samples, 0.08%)</title><rect x="671.2" y="243.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (102 samples, 0.08%)</title><rect x="671.2" y="227.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (102 samples, 0.08%)</title><rect x="671.2" y="211.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (102 samples, 0.08%)</title><rect x="671.2" y="195.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="674.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (102 samples, 0.08%)</title><rect x="671.2" y="179.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (102 samples, 0.08%)</title><rect x="671.2" y="163.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="674.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (62 samples, 0.05%)</title><rect x="671.2" y="147.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="674.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (62 samples, 0.05%)</title><rect x="671.2" y="131.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="674.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (62 samples, 0.05%)</title><rect x="671.2" y="115.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="674.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (62 samples, 0.05%)</title><rect x="671.2" y="99.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.2" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (40 samples, 0.03%)</title><rect x="671.7" y="147.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="674.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (40 samples, 0.03%)</title><rect x="671.7" y="131.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="674.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (40 samples, 0.03%)</title><rect x="671.7" y="115.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.7" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (40 samples, 0.03%)</title><rect x="671.7" y="99.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (40 samples, 0.03%)</title><rect x="671.7" y="83.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="674.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (40 samples, 0.03%)</title><rect x="671.7" y="67.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (40 samples, 0.03%)</title><rect x="671.7" y="51.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="674.7" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (40 samples, 0.03%)</title><rect x="671.7" y="35.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="674.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (14,240 samples, 10.80%)</title><rect x="672.2" y="339.0" width="127.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.2" y="350.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (14,176 samples, 10.76%)</title><rect x="672.5" y="323.0" width="126.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="675.5" y="334.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,845 samples, 2.16%)</title><rect x="672.5" y="307.0" width="25.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.5" y="318.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,842 samples, 2.16%)</title><rect x="672.5" y="291.0" width="25.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="675.5" y="302.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (65 samples, 0.05%)</title><rect x="672.6" y="275.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="675.6" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (65 samples, 0.05%)</title><rect x="672.6" y="259.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="675.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,745 samples, 2.08%)</title><rect x="673.2" y="275.0" width="24.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.2" y="286.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,745 samples, 2.08%)</title><rect x="673.2" y="259.0" width="24.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.2" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (54 samples, 0.04%)</title><rect x="673.2" y="243.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (54 samples, 0.04%)</title><rect x="673.2" y="227.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="676.2" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (54 samples, 0.04%)</title><rect x="673.2" y="211.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="676.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,691 samples, 2.04%)</title><rect x="673.7" y="243.0" width="24.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.7" y="254.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,691 samples, 2.04%)</title><rect x="673.7" y="227.0" width="24.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.7" y="238.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,691 samples, 2.04%)</title><rect x="673.7" y="211.0" width="24.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.7" y="222.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,691 samples, 2.04%)</title><rect x="673.7" y="195.0" width="24.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.7" y="206.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,787 samples, 1.36%)</title><rect x="673.7" y="179.0" width="16.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,787 samples, 1.36%)</title><rect x="673.7" y="163.0" width="16.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,787 samples, 1.36%)</title><rect x="673.7" y="147.0" width="16.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (1,787 samples, 1.36%)</title><rect x="673.7" y="131.0" width="16.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (721 samples, 0.55%)</title><rect x="673.7" y="115.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (386 samples, 0.29%)</title><rect x="673.7" y="99.0" width="3.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="676.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (335 samples, 0.25%)</title><rect x="677.1" y="99.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.1" y="110.0"></text>
</g>
<g>
<title>byte[] (335 samples, 0.25%)</title><rect x="677.1" y="83.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="680.1" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (68 samples, 0.05%)</title><rect x="680.1" y="115.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="683.1" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (55 samples, 0.04%)</title><rect x="680.7" y="115.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="683.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (749 samples, 0.57%)</title><rect x="681.2" y="115.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (527 samples, 0.40%)</title><rect x="681.2" y="99.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="684.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (283 samples, 0.21%)</title><rect x="681.2" y="83.0" width="2.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="684.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (244 samples, 0.19%)</title><rect x="683.8" y="83.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.8" y="94.0"></text>
</g>
<g>
<title>byte[] (244 samples, 0.19%)</title><rect x="683.8" y="67.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="686.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (222 samples, 0.17%)</title><rect x="685.9" y="99.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.9" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (222 samples, 0.17%)</title><rect x="685.9" y="83.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="688.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (148 samples, 0.11%)</title><rect x="685.9" y="67.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="688.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (74 samples, 0.06%)</title><rect x="687.3" y="67.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.3" y="78.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.06%)</title><rect x="687.3" y="51.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="690.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (194 samples, 0.15%)</title><rect x="687.9" y="115.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (194 samples, 0.15%)</title><rect x="687.9" y="99.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (135 samples, 0.10%)</title><rect x="687.9" y="83.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="690.9" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (59 samples, 0.04%)</title><rect x="689.1" y="83.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.1" y="94.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.04%)</title><rect x="689.1" y="67.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="692.1" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (904 samples, 0.69%)</title><rect x="689.7" y="179.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (904 samples, 0.69%)</title><rect x="689.7" y="163.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (904 samples, 0.69%)</title><rect x="689.7" y="147.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (904 samples, 0.69%)</title><rect x="689.7" y="131.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="692.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (904 samples, 0.69%)</title><rect x="689.7" y="115.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (904 samples, 0.69%)</title><rect x="689.7" y="99.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (904 samples, 0.69%)</title><rect x="689.7" y="83.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (904 samples, 0.69%)</title><rect x="689.7" y="67.0" width="8.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="692.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (155 samples, 0.12%)</title><rect x="697.9" y="307.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (153 samples, 0.12%)</title><rect x="698.0" y="291.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (153 samples, 0.12%)</title><rect x="698.0" y="275.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.0" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (64 samples, 0.05%)</title><rect x="698.0" y="259.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="701.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (64 samples, 0.05%)</title><rect x="698.0" y="243.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (64 samples, 0.05%)</title><rect x="698.0" y="227.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (64 samples, 0.05%)</title><rect x="698.0" y="211.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (64 samples, 0.05%)</title><rect x="698.0" y="195.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="701.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (64 samples, 0.05%)</title><rect x="698.0" y="179.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="701.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (64 samples, 0.05%)</title><rect x="698.0" y="163.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (64 samples, 0.05%)</title><rect x="698.0" y="147.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (64 samples, 0.05%)</title><rect x="698.0" y="131.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (64 samples, 0.05%)</title><rect x="698.0" y="115.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (64 samples, 0.05%)</title><rect x="698.0" y="99.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (64 samples, 0.05%)</title><rect x="698.0" y="83.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="701.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (64 samples, 0.05%)</title><rect x="698.0" y="67.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="701.0" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (89 samples, 0.07%)</title><rect x="698.5" y="259.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (89 samples, 0.07%)</title><rect x="698.5" y="243.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (89 samples, 0.07%)</title><rect x="698.5" y="227.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (89 samples, 0.07%)</title><rect x="698.5" y="211.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (89 samples, 0.07%)</title><rect x="698.5" y="195.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (89 samples, 0.07%)</title><rect x="698.5" y="179.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (52 samples, 0.04%)</title><rect x="698.5" y="163.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="701.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (52 samples, 0.04%)</title><rect x="698.5" y="147.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (52 samples, 0.04%)</title><rect x="698.5" y="131.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (52 samples, 0.04%)</title><rect x="698.5" y="115.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.5" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (37 samples, 0.03%)</title><rect x="699.0" y="163.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (37 samples, 0.03%)</title><rect x="699.0" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="702.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (37 samples, 0.03%)</title><rect x="699.0" y="131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.0" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (37 samples, 0.03%)</title><rect x="699.0" y="115.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (37 samples, 0.03%)</title><rect x="699.0" y="99.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (37 samples, 0.03%)</title><rect x="699.0" y="83.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (37 samples, 0.03%)</title><rect x="699.0" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="702.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.03%)</title><rect x="699.0" y="51.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="702.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (11,176 samples, 8.48%)</title><rect x="699.3" y="307.0" width="100.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.3" y="318.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (11,175 samples, 8.48%)</title><rect x="699.3" y="291.0" width="100.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.3" y="302.0">java/lang/It..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$134/1234271208.accept (11,167 samples, 8.47%)</title><rect x="699.4" y="275.0" width="100.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.4" y="286.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$9 (11,167 samples, 8.47%)</title><rect x="699.4" y="259.0" width="100.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="702.4" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (11,167 samples, 8.47%)</title><rect x="699.4" y="243.0" width="100.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="702.4" y="254.0">ru/mail/poli..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (68 samples, 0.05%)</title><rect x="699.4" y="227.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="702.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (11,099 samples, 8.42%)</title><rect x="700.0" y="227.0" width="99.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="703.0" y="238.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (11,099 samples, 8.42%)</title><rect x="700.0" y="211.0" width="99.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="703.0" y="222.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (11,099 samples, 8.42%)</title><rect x="700.0" y="195.0" width="99.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.0" y="206.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8,109 samples, 6.15%)</title><rect x="700.0" y="179.0" width="72.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.0" y="190.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,119 samples, 3.13%)</title><rect x="700.0" y="163.0" width="36.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="703.0" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3,990 samples, 3.03%)</title><rect x="736.9" y="163.0" width="35.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.9" y="174.0">jav..</text>
</g>
<g>
<title>byte[] (3,990 samples, 3.03%)</title><rect x="736.9" y="147.0" width="35.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="739.9" y="158.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (2,990 samples, 2.27%)</title><rect x="772.6" y="179.0" width="26.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.6" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,990 samples, 2.27%)</title><rect x="772.6" y="163.0" width="26.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.6" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,034 samples, 1.54%)</title><rect x="772.6" y="147.0" width="18.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="775.6" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (956 samples, 0.73%)</title><rect x="790.8" y="147.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="793.8" y="158.0"></text>
</g>
<g>
<title>byte[] (956 samples, 0.73%)</title><rect x="790.8" y="131.0" width="8.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="793.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (36 samples, 0.03%)</title><rect x="799.4" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="802.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.wrapString (37 samples, 0.03%)</title><rect x="799.7" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.toBytes (34 samples, 0.03%)</title><rect x="799.8" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="802.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (34 samples, 0.03%)</title><rect x="799.8" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.8" y="334.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.03%)</title><rect x="799.8" y="307.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="802.8" y="318.0"></text>
</g>
<g>
<title>[worker-5 tid=20760] (14,508 samples, 11.01%)</title><rect x="800.1" y="515.0" width="129.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="803.1" y="526.0">[worker-5 tid=20..</text>
</g>
<g>
<title>java/lang/Thread.run (14,508 samples, 11.01%)</title><rect x="800.1" y="499.0" width="129.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.1" y="510.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,508 samples, 11.01%)</title><rect x="800.1" y="483.0" width="129.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.1" y="494.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,508 samples, 11.01%)</title><rect x="800.1" y="467.0" width="129.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.1" y="478.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$100/1359819340.run (14,506 samples, 11.01%)</title><rect x="800.1" y="451.0" width="129.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="803.1" y="462.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (14,506 samples, 11.01%)</title><rect x="800.1" y="435.0" width="129.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="803.1" y="446.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (14,506 samples, 11.01%)</title><rect x="800.1" y="419.0" width="129.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="803.1" y="430.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/2088793524.process (14,506 samples, 11.01%)</title><rect x="800.1" y="403.0" width="129.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="803.1" y="414.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$get$2 (14,506 samples, 11.01%)</title><rect x="800.1" y="387.0" width="129.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="803.1" y="398.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleGet (14,506 samples, 11.01%)</title><rect x="800.1" y="371.0" width="129.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.1" y="382.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (14,398 samples, 10.92%)</title><rect x="800.6" y="355.0" width="128.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="803.6" y="366.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (156 samples, 0.12%)</title><rect x="800.6" y="339.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="803.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (156 samples, 0.12%)</title><rect x="800.6" y="323.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="803.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (156 samples, 0.12%)</title><rect x="800.6" y="307.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="803.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (156 samples, 0.12%)</title><rect x="800.6" y="291.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="803.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (156 samples, 0.12%)</title><rect x="800.6" y="275.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="803.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (151 samples, 0.11%)</title><rect x="800.6" y="259.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="803.6" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (57 samples, 0.04%)</title><rect x="800.6" y="243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="803.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (57 samples, 0.04%)</title><rect x="800.6" y="227.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="803.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (57 samples, 0.04%)</title><rect x="800.6" y="211.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="803.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.04%)</title><rect x="800.6" y="195.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="803.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.04%)</title><rect x="800.6" y="179.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="803.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (57 samples, 0.04%)</title><rect x="800.6" y="163.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (57 samples, 0.04%)</title><rect x="800.6" y="147.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="803.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (57 samples, 0.04%)</title><rect x="800.6" y="131.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="803.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (57 samples, 0.04%)</title><rect x="800.6" y="115.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="803.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (57 samples, 0.04%)</title><rect x="800.6" y="99.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="803.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (57 samples, 0.04%)</title><rect x="800.6" y="83.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (57 samples, 0.04%)</title><rect x="800.6" y="67.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="803.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (57 samples, 0.04%)</title><rect x="800.6" y="51.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="803.6" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (94 samples, 0.07%)</title><rect x="801.1" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (94 samples, 0.07%)</title><rect x="801.1" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (94 samples, 0.07%)</title><rect x="801.1" y="211.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="804.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (94 samples, 0.07%)</title><rect x="801.1" y="195.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (94 samples, 0.07%)</title><rect x="801.1" y="179.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (94 samples, 0.07%)</title><rect x="801.1" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (49 samples, 0.04%)</title><rect x="801.1" y="147.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="804.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (49 samples, 0.04%)</title><rect x="801.1" y="131.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="804.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (49 samples, 0.04%)</title><rect x="801.1" y="115.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (49 samples, 0.04%)</title><rect x="801.1" y="99.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="804.1" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (45 samples, 0.03%)</title><rect x="801.6" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="804.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (45 samples, 0.03%)</title><rect x="801.6" y="131.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (45 samples, 0.03%)</title><rect x="801.6" y="115.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.6" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (45 samples, 0.03%)</title><rect x="801.6" y="99.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (45 samples, 0.03%)</title><rect x="801.6" y="83.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="804.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (45 samples, 0.03%)</title><rect x="801.6" y="67.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="804.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (45 samples, 0.03%)</title><rect x="801.6" y="51.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.6" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (45 samples, 0.03%)</title><rect x="801.6" y="35.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="804.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (14,225 samples, 10.79%)</title><rect x="802.2" y="339.0" width="127.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="805.2" y="350.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (14,164 samples, 10.75%)</title><rect x="802.4" y="323.0" width="126.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="805.4" y="334.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,783 samples, 2.11%)</title><rect x="802.4" y="307.0" width="25.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="805.4" y="318.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,783 samples, 2.11%)</title><rect x="802.4" y="291.0" width="25.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="805.4" y="302.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (67 samples, 0.05%)</title><rect x="802.5" y="275.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="805.5" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (67 samples, 0.05%)</title><rect x="802.5" y="259.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="805.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,689 samples, 2.04%)</title><rect x="803.1" y="275.0" width="24.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="806.1" y="286.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,689 samples, 2.04%)</title><rect x="803.1" y="259.0" width="24.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="806.1" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (48 samples, 0.04%)</title><rect x="803.1" y="243.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="806.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.04%)</title><rect x="803.1" y="227.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.1" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (48 samples, 0.04%)</title><rect x="803.1" y="211.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="806.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,641 samples, 2.00%)</title><rect x="803.5" y="243.0" width="23.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.5" y="254.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,641 samples, 2.00%)</title><rect x="803.5" y="227.0" width="23.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="806.5" y="238.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,641 samples, 2.00%)</title><rect x="803.5" y="211.0" width="23.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.5" y="222.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,641 samples, 2.00%)</title><rect x="803.5" y="195.0" width="23.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.5" y="206.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,775 samples, 1.35%)</title><rect x="803.5" y="179.0" width="15.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="806.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,775 samples, 1.35%)</title><rect x="803.5" y="163.0" width="15.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,775 samples, 1.35%)</title><rect x="803.5" y="147.0" width="15.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (1,775 samples, 1.35%)</title><rect x="803.5" y="131.0" width="15.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (702 samples, 0.53%)</title><rect x="803.5" y="115.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.5" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (374 samples, 0.28%)</title><rect x="803.5" y="99.0" width="3.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="806.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (328 samples, 0.25%)</title><rect x="806.8" y="99.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="809.8" y="110.0"></text>
</g>
<g>
<title>byte[] (328 samples, 0.25%)</title><rect x="806.8" y="83.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="809.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (79 samples, 0.06%)</title><rect x="809.8" y="115.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="812.8" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (79 samples, 0.06%)</title><rect x="810.5" y="115.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="813.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (709 samples, 0.54%)</title><rect x="811.2" y="115.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="814.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (497 samples, 0.38%)</title><rect x="811.2" y="99.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="814.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (270 samples, 0.20%)</title><rect x="811.2" y="83.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="814.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (227 samples, 0.17%)</title><rect x="813.6" y="83.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="816.6" y="94.0"></text>
</g>
<g>
<title>byte[] (227 samples, 0.17%)</title><rect x="813.6" y="67.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="816.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (212 samples, 0.16%)</title><rect x="815.6" y="99.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (212 samples, 0.16%)</title><rect x="815.6" y="83.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="818.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (143 samples, 0.11%)</title><rect x="815.6" y="67.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="818.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (69 samples, 0.05%)</title><rect x="816.9" y="67.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.9" y="78.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.05%)</title><rect x="816.9" y="51.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="819.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (206 samples, 0.16%)</title><rect x="817.5" y="115.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="820.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (206 samples, 0.16%)</title><rect x="817.5" y="99.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="820.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (133 samples, 0.10%)</title><rect x="817.5" y="83.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="820.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (73 samples, 0.06%)</title><rect x="818.7" y="83.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.7" y="94.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.06%)</title><rect x="818.7" y="67.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="821.7" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (866 samples, 0.66%)</title><rect x="819.4" y="179.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="822.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (866 samples, 0.66%)</title><rect x="819.4" y="163.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (866 samples, 0.66%)</title><rect x="819.4" y="147.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (866 samples, 0.66%)</title><rect x="819.4" y="131.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="822.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (866 samples, 0.66%)</title><rect x="819.4" y="115.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="822.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (866 samples, 0.66%)</title><rect x="819.4" y="99.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="822.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (866 samples, 0.66%)</title><rect x="819.4" y="83.0" width="7.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="822.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (866 samples, 0.66%)</title><rect x="819.4" y="67.0" width="7.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="822.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (143 samples, 0.11%)</title><rect x="827.4" y="307.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (142 samples, 0.11%)</title><rect x="827.4" y="291.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (142 samples, 0.11%)</title><rect x="827.4" y="275.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.4" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (63 samples, 0.05%)</title><rect x="827.4" y="259.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (63 samples, 0.05%)</title><rect x="827.4" y="243.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="830.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (63 samples, 0.05%)</title><rect x="827.4" y="227.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (63 samples, 0.05%)</title><rect x="827.4" y="211.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (63 samples, 0.05%)</title><rect x="827.4" y="195.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (63 samples, 0.05%)</title><rect x="827.4" y="179.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (63 samples, 0.05%)</title><rect x="827.4" y="163.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (63 samples, 0.05%)</title><rect x="827.4" y="147.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (63 samples, 0.05%)</title><rect x="827.4" y="131.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (63 samples, 0.05%)</title><rect x="827.4" y="115.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (63 samples, 0.05%)</title><rect x="827.4" y="99.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (63 samples, 0.05%)</title><rect x="827.4" y="83.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (63 samples, 0.05%)</title><rect x="827.4" y="67.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="830.4" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (79 samples, 0.06%)</title><rect x="827.9" y="259.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="830.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (79 samples, 0.06%)</title><rect x="827.9" y="243.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (79 samples, 0.06%)</title><rect x="827.9" y="227.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (79 samples, 0.06%)</title><rect x="827.9" y="211.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (79 samples, 0.06%)</title><rect x="827.9" y="195.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (79 samples, 0.06%)</title><rect x="827.9" y="179.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (49 samples, 0.04%)</title><rect x="827.9" y="163.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (49 samples, 0.04%)</title><rect x="827.9" y="147.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (49 samples, 0.04%)</title><rect x="827.9" y="131.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (49 samples, 0.04%)</title><rect x="827.9" y="115.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.9" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (30 samples, 0.02%)</title><rect x="828.4" y="163.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (30 samples, 0.02%)</title><rect x="828.4" y="147.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="831.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (30 samples, 0.02%)</title><rect x="828.4" y="131.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="831.4" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (30 samples, 0.02%)</title><rect x="828.4" y="115.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (30 samples, 0.02%)</title><rect x="828.4" y="99.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="831.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (30 samples, 0.02%)</title><rect x="828.4" y="83.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="831.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (30 samples, 0.02%)</title><rect x="828.4" y="67.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="831.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (30 samples, 0.02%)</title><rect x="828.4" y="51.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="831.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (11,238 samples, 8.53%)</title><rect x="828.6" y="307.0" width="100.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.6" y="318.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (11,238 samples, 8.53%)</title><rect x="828.6" y="291.0" width="100.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.6" y="302.0">java/lang/It..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$134/1234271208.accept (11,232 samples, 8.52%)</title><rect x="828.7" y="275.0" width="100.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="831.7" y="286.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$9 (11,232 samples, 8.52%)</title><rect x="828.7" y="259.0" width="100.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="831.7" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (11,232 samples, 8.52%)</title><rect x="828.7" y="243.0" width="100.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="831.7" y="254.0">ru/mail/poli..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (62 samples, 0.05%)</title><rect x="828.7" y="227.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="831.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (11,170 samples, 8.48%)</title><rect x="829.3" y="227.0" width="100.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="832.3" y="238.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (11,170 samples, 8.48%)</title><rect x="829.3" y="211.0" width="100.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="832.3" y="222.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (11,170 samples, 8.48%)</title><rect x="829.3" y="195.0" width="100.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="832.3" y="206.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8,128 samples, 6.17%)</title><rect x="829.3" y="179.0" width="72.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.3" y="190.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,019 samples, 3.05%)</title><rect x="829.3" y="163.0" width="35.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="832.3" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4,109 samples, 3.12%)</title><rect x="865.2" y="163.0" width="36.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="868.2" y="174.0">jav..</text>
</g>
<g>
<title>byte[] (4,109 samples, 3.12%)</title><rect x="865.2" y="147.0" width="36.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="868.2" y="158.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (3,042 samples, 2.31%)</title><rect x="902.0" y="179.0" width="27.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.0" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3,042 samples, 2.31%)</title><rect x="902.0" y="163.0" width="27.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.0" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,061 samples, 1.56%)</title><rect x="902.0" y="147.0" width="18.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="905.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (981 samples, 0.74%)</title><rect x="920.5" y="147.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="923.5" y="158.0"></text>
</g>
<g>
<title>byte[] (981 samples, 0.74%)</title><rect x="920.5" y="131.0" width="8.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="923.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (30 samples, 0.02%)</title><rect x="929.3" y="323.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="932.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.wrapString (45 samples, 0.03%)</title><rect x="929.6" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="932.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.toBytes (38 samples, 0.03%)</title><rect x="929.6" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="932.6" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (38 samples, 0.03%)</title><rect x="929.6" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="932.6" y="334.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.03%)</title><rect x="929.6" y="307.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="932.6" y="318.0"></text>
</g>
<g>
<title>[worker-6 tid=20759] (14,563 samples, 11.05%)</title><rect x="930.0" y="515.0" width="130.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="933.0" y="526.0">[worker-6 tid=20..</text>
</g>
<g>
<title>java/lang/Thread.run (14,563 samples, 11.05%)</title><rect x="930.0" y="499.0" width="130.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.0" y="510.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,563 samples, 11.05%)</title><rect x="930.0" y="483.0" width="130.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="933.0" y="494.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,563 samples, 11.05%)</title><rect x="930.0" y="467.0" width="130.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.0" y="478.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$100/1359819340.run (14,559 samples, 11.05%)</title><rect x="930.0" y="451.0" width="130.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="933.0" y="462.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (14,559 samples, 11.05%)</title><rect x="930.0" y="435.0" width="130.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.0" y="446.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (14,559 samples, 11.05%)</title><rect x="930.0" y="419.0" width="130.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="933.0" y="430.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/2088793524.process (14,559 samples, 11.05%)</title><rect x="930.0" y="403.0" width="130.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.0" y="414.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$get$2 (14,559 samples, 11.05%)</title><rect x="930.0" y="387.0" width="130.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="933.0" y="398.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleGet (14,559 samples, 11.05%)</title><rect x="930.0" y="371.0" width="130.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="933.0" y="382.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (14,473 samples, 10.98%)</title><rect x="930.4" y="355.0" width="129.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.4" y="366.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (145 samples, 0.11%)</title><rect x="930.4" y="339.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="933.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (145 samples, 0.11%)</title><rect x="930.4" y="323.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (145 samples, 0.11%)</title><rect x="930.4" y="307.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="933.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (145 samples, 0.11%)</title><rect x="930.4" y="291.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="933.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (145 samples, 0.11%)</title><rect x="930.4" y="275.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="933.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (137 samples, 0.10%)</title><rect x="930.4" y="259.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.4" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (54 samples, 0.04%)</title><rect x="930.4" y="243.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="933.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (54 samples, 0.04%)</title><rect x="930.4" y="227.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="933.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (54 samples, 0.04%)</title><rect x="930.4" y="211.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="933.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (54 samples, 0.04%)</title><rect x="930.4" y="195.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="933.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (54 samples, 0.04%)</title><rect x="930.4" y="179.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (54 samples, 0.04%)</title><rect x="930.4" y="163.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="933.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (54 samples, 0.04%)</title><rect x="930.4" y="147.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="933.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (54 samples, 0.04%)</title><rect x="930.4" y="131.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="933.4" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (54 samples, 0.04%)</title><rect x="930.4" y="115.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="933.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (54 samples, 0.04%)</title><rect x="930.4" y="99.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="933.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (54 samples, 0.04%)</title><rect x="930.4" y="83.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (54 samples, 0.04%)</title><rect x="930.4" y="67.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (54 samples, 0.04%)</title><rect x="930.4" y="51.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="933.4" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (83 samples, 0.06%)</title><rect x="930.9" y="243.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="933.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (83 samples, 0.06%)</title><rect x="930.9" y="227.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (83 samples, 0.06%)</title><rect x="930.9" y="211.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (83 samples, 0.06%)</title><rect x="930.9" y="195.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="933.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (83 samples, 0.06%)</title><rect x="930.9" y="179.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="933.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (83 samples, 0.06%)</title><rect x="930.9" y="163.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (44 samples, 0.03%)</title><rect x="930.9" y="147.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="933.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (44 samples, 0.03%)</title><rect x="930.9" y="131.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="933.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (44 samples, 0.03%)</title><rect x="930.9" y="115.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="933.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (44 samples, 0.03%)</title><rect x="930.9" y="99.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="933.9" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (39 samples, 0.03%)</title><rect x="931.3" y="147.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="934.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (39 samples, 0.03%)</title><rect x="931.3" y="131.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="934.3" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (39 samples, 0.03%)</title><rect x="931.3" y="115.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="934.3" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (39 samples, 0.03%)</title><rect x="931.3" y="99.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="934.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (39 samples, 0.03%)</title><rect x="931.3" y="83.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="934.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (39 samples, 0.03%)</title><rect x="931.3" y="67.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="934.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (39 samples, 0.03%)</title><rect x="931.3" y="51.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="934.3" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (39 samples, 0.03%)</title><rect x="931.3" y="35.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="934.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (14,310 samples, 10.86%)</title><rect x="931.9" y="339.0" width="128.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="934.9" y="350.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (14,254 samples, 10.82%)</title><rect x="932.1" y="323.0" width="127.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.1" y="334.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,836 samples, 2.15%)</title><rect x="932.1" y="307.0" width="25.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="935.1" y="318.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,836 samples, 2.15%)</title><rect x="932.1" y="291.0" width="25.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="935.1" y="302.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (80 samples, 0.06%)</title><rect x="932.1" y="275.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="935.1" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (80 samples, 0.06%)</title><rect x="932.1" y="259.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="935.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,732 samples, 2.07%)</title><rect x="932.9" y="275.0" width="24.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="935.9" y="286.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,732 samples, 2.07%)</title><rect x="932.9" y="259.0" width="24.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="935.9" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (54 samples, 0.04%)</title><rect x="932.9" y="243.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (54 samples, 0.04%)</title><rect x="932.9" y="227.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="935.9" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (54 samples, 0.04%)</title><rect x="932.9" y="211.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="935.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,678 samples, 2.03%)</title><rect x="933.4" y="243.0" width="23.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="936.4" y="254.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,678 samples, 2.03%)</title><rect x="933.4" y="227.0" width="23.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="936.4" y="238.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,678 samples, 2.03%)</title><rect x="933.4" y="211.0" width="23.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="936.4" y="222.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,678 samples, 2.03%)</title><rect x="933.4" y="195.0" width="23.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="936.4" y="206.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,832 samples, 1.39%)</title><rect x="933.4" y="179.0" width="16.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="936.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,832 samples, 1.39%)</title><rect x="933.4" y="163.0" width="16.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="936.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,832 samples, 1.39%)</title><rect x="933.4" y="147.0" width="16.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="936.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (1,832 samples, 1.39%)</title><rect x="933.4" y="131.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="936.4" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (741 samples, 0.56%)</title><rect x="933.4" y="115.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="936.4" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (407 samples, 0.31%)</title><rect x="933.4" y="99.0" width="3.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="936.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (334 samples, 0.25%)</title><rect x="937.0" y="99.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="940.0" y="110.0"></text>
</g>
<g>
<title>byte[] (334 samples, 0.25%)</title><rect x="937.0" y="83.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="940.0" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (78 samples, 0.06%)</title><rect x="940.0" y="115.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="943.0" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (64 samples, 0.05%)</title><rect x="940.7" y="115.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="943.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (760 samples, 0.58%)</title><rect x="941.3" y="115.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="944.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (565 samples, 0.43%)</title><rect x="941.3" y="99.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="944.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (282 samples, 0.21%)</title><rect x="941.3" y="83.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="944.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (283 samples, 0.21%)</title><rect x="943.8" y="83.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="946.8" y="94.0"></text>
</g>
<g>
<title>byte[] (283 samples, 0.21%)</title><rect x="943.8" y="67.0" width="2.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="946.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (195 samples, 0.15%)</title><rect x="946.3" y="99.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="949.3" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (195 samples, 0.15%)</title><rect x="946.3" y="83.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="949.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (120 samples, 0.09%)</title><rect x="946.3" y="67.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="949.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (75 samples, 0.06%)</title><rect x="947.4" y="67.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.4" y="78.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.06%)</title><rect x="947.4" y="51.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="950.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (189 samples, 0.14%)</title><rect x="948.1" y="115.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="951.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (189 samples, 0.14%)</title><rect x="948.1" y="99.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="951.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (115 samples, 0.09%)</title><rect x="948.1" y="83.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="951.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (74 samples, 0.06%)</title><rect x="949.1" y="83.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="952.1" y="94.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.06%)</title><rect x="949.1" y="67.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="952.1" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (846 samples, 0.64%)</title><rect x="949.8" y="179.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="952.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (846 samples, 0.64%)</title><rect x="949.8" y="163.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="952.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (846 samples, 0.64%)</title><rect x="949.8" y="147.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="952.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (846 samples, 0.64%)</title><rect x="949.8" y="131.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="952.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (846 samples, 0.64%)</title><rect x="949.8" y="115.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="952.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (846 samples, 0.64%)</title><rect x="949.8" y="99.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="952.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (846 samples, 0.64%)</title><rect x="949.8" y="83.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="952.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (846 samples, 0.64%)</title><rect x="949.8" y="67.0" width="7.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="952.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (125 samples, 0.09%)</title><rect x="957.5" y="307.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (125 samples, 0.09%)</title><rect x="957.5" y="291.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (125 samples, 0.09%)</title><rect x="957.5" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.5" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (52 samples, 0.04%)</title><rect x="957.5" y="259.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="960.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (52 samples, 0.04%)</title><rect x="957.5" y="243.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (52 samples, 0.04%)</title><rect x="957.5" y="227.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="960.5" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (52 samples, 0.04%)</title><rect x="957.5" y="211.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="960.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (52 samples, 0.04%)</title><rect x="957.5" y="195.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="960.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (52 samples, 0.04%)</title><rect x="957.5" y="179.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="960.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (52 samples, 0.04%)</title><rect x="957.5" y="163.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (52 samples, 0.04%)</title><rect x="957.5" y="147.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="960.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (52 samples, 0.04%)</title><rect x="957.5" y="131.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (52 samples, 0.04%)</title><rect x="957.5" y="115.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (52 samples, 0.04%)</title><rect x="957.5" y="99.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="960.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (52 samples, 0.04%)</title><rect x="957.5" y="83.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="960.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (52 samples, 0.04%)</title><rect x="957.5" y="67.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="960.5" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (73 samples, 0.06%)</title><rect x="958.0" y="259.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="961.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (73 samples, 0.06%)</title><rect x="958.0" y="243.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (73 samples, 0.06%)</title><rect x="958.0" y="227.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="961.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (73 samples, 0.06%)</title><rect x="958.0" y="211.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="961.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (73 samples, 0.06%)</title><rect x="958.0" y="195.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="961.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (73 samples, 0.06%)</title><rect x="958.0" y="179.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="961.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (42 samples, 0.03%)</title><rect x="958.0" y="163.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="961.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (42 samples, 0.03%)</title><rect x="958.0" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="961.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (42 samples, 0.03%)</title><rect x="958.0" y="131.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="961.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (42 samples, 0.03%)</title><rect x="958.0" y="115.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="961.0" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (31 samples, 0.02%)</title><rect x="958.4" y="163.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="961.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (31 samples, 0.02%)</title><rect x="958.4" y="147.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="961.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (31 samples, 0.02%)</title><rect x="958.4" y="131.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="961.4" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (31 samples, 0.02%)</title><rect x="958.4" y="115.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="961.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (31 samples, 0.02%)</title><rect x="958.4" y="99.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="961.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (31 samples, 0.02%)</title><rect x="958.4" y="83.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="961.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (31 samples, 0.02%)</title><rect x="958.4" y="67.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="961.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.02%)</title><rect x="958.4" y="51.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="961.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (11,293 samples, 8.57%)</title><rect x="958.6" y="307.0" width="101.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="961.6" y="318.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (11,292 samples, 8.57%)</title><rect x="958.6" y="291.0" width="101.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="961.6" y="302.0">java/lang/It..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$134/1234271208.accept (11,287 samples, 8.56%)</title><rect x="958.7" y="275.0" width="101.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="961.7" y="286.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$9 (11,287 samples, 8.56%)</title><rect x="958.7" y="259.0" width="101.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="961.7" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (11,287 samples, 8.56%)</title><rect x="958.7" y="243.0" width="101.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.7" y="254.0">ru/mail/poli..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (66 samples, 0.05%)</title><rect x="958.7" y="227.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="961.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (11,221 samples, 8.51%)</title><rect x="959.3" y="227.0" width="100.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="962.3" y="238.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (11,221 samples, 8.51%)</title><rect x="959.3" y="211.0" width="100.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="962.3" y="222.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (11,221 samples, 8.51%)</title><rect x="959.3" y="195.0" width="100.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.3" y="206.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8,176 samples, 6.20%)</title><rect x="959.3" y="179.0" width="73.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="962.3" y="190.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,133 samples, 3.14%)</title><rect x="959.3" y="163.0" width="37.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="962.3" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4,043 samples, 3.07%)</title><rect x="996.3" y="163.0" width="36.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="999.3" y="174.0">jav..</text>
</g>
<g>
<title>byte[] (4,043 samples, 3.07%)</title><rect x="996.3" y="147.0" width="36.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="999.3" y="158.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (3,045 samples, 2.31%)</title><rect x="1032.5" y="179.0" width="27.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1035.5" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3,045 samples, 2.31%)</title><rect x="1032.5" y="163.0" width="27.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1035.5" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,091 samples, 1.59%)</title><rect x="1032.5" y="147.0" width="18.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1035.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (954 samples, 0.72%)</title><rect x="1051.2" y="147.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1054.2" y="158.0"></text>
</g>
<g>
<title>byte[] (954 samples, 0.72%)</title><rect x="1051.2" y="131.0" width="8.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1054.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.wrapString (39 samples, 0.03%)</title><rect x="1060.0" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1063.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.toBytes (34 samples, 0.03%)</title><rect x="1060.0" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1063.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (34 samples, 0.03%)</title><rect x="1060.0" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1063.0" y="334.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.03%)</title><rect x="1060.0" y="307.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1063.0" y="318.0"></text>
</g>
<g>
<title>[worker-7 tid=20758] (14,482 samples, 10.99%)</title><rect x="1060.3" y="515.0" width="129.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1063.3" y="526.0">[worker-7 tid=20..</text>
</g>
<g>
<title>java/lang/Thread.run (14,482 samples, 10.99%)</title><rect x="1060.3" y="499.0" width="129.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1063.3" y="510.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,482 samples, 10.99%)</title><rect x="1060.3" y="483.0" width="129.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1063.3" y="494.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,482 samples, 10.99%)</title><rect x="1060.3" y="467.0" width="129.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1063.3" y="478.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$100/1359819340.run (14,477 samples, 10.98%)</title><rect x="1060.4" y="451.0" width="129.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1063.4" y="462.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (14,477 samples, 10.98%)</title><rect x="1060.4" y="435.0" width="129.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1063.4" y="446.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (14,477 samples, 10.98%)</title><rect x="1060.4" y="419.0" width="129.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1063.4" y="430.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$125/2088793524.process (14,477 samples, 10.98%)</title><rect x="1060.4" y="403.0" width="129.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1063.4" y="414.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$get$2 (14,477 samples, 10.98%)</title><rect x="1060.4" y="387.0" width="129.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.4" y="398.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleGet (14,477 samples, 10.98%)</title><rect x="1060.4" y="371.0" width="129.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1063.4" y="382.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (14,383 samples, 10.91%)</title><rect x="1060.9" y="355.0" width="128.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1063.9" y="366.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (157 samples, 0.12%)</title><rect x="1060.9" y="339.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1063.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (157 samples, 0.12%)</title><rect x="1060.9" y="323.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1063.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (157 samples, 0.12%)</title><rect x="1060.9" y="307.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1063.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (157 samples, 0.12%)</title><rect x="1060.9" y="291.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1063.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (157 samples, 0.12%)</title><rect x="1060.9" y="275.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1063.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (146 samples, 0.11%)</title><rect x="1060.9" y="259.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1063.9" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (63 samples, 0.05%)</title><rect x="1060.9" y="243.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1063.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (63 samples, 0.05%)</title><rect x="1060.9" y="227.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1063.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (63 samples, 0.05%)</title><rect x="1060.9" y="211.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1063.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (63 samples, 0.05%)</title><rect x="1060.9" y="195.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1063.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (63 samples, 0.05%)</title><rect x="1060.9" y="179.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1063.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (63 samples, 0.05%)</title><rect x="1060.9" y="163.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1063.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (63 samples, 0.05%)</title><rect x="1060.9" y="147.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1063.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (63 samples, 0.05%)</title><rect x="1060.9" y="131.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1063.9" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (63 samples, 0.05%)</title><rect x="1060.9" y="115.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1063.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (63 samples, 0.05%)</title><rect x="1060.9" y="99.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1063.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (63 samples, 0.05%)</title><rect x="1060.9" y="83.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1063.9" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (63 samples, 0.05%)</title><rect x="1060.9" y="67.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1063.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (63 samples, 0.05%)</title><rect x="1060.9" y="51.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1063.9" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (83 samples, 0.06%)</title><rect x="1061.4" y="243.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1064.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (83 samples, 0.06%)</title><rect x="1061.4" y="227.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (83 samples, 0.06%)</title><rect x="1061.4" y="211.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (83 samples, 0.06%)</title><rect x="1061.4" y="195.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1064.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (83 samples, 0.06%)</title><rect x="1061.4" y="179.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (83 samples, 0.06%)</title><rect x="1061.4" y="163.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (52 samples, 0.04%)</title><rect x="1061.4" y="147.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (52 samples, 0.04%)</title><rect x="1061.4" y="131.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (52 samples, 0.04%)</title><rect x="1061.4" y="115.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (52 samples, 0.04%)</title><rect x="1061.4" y="99.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (28 samples, 0.02%)</title><rect x="1061.6" y="83.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.6" y="94.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (31 samples, 0.02%)</title><rect x="1061.9" y="147.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1064.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (31 samples, 0.02%)</title><rect x="1061.9" y="131.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.9" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (31 samples, 0.02%)</title><rect x="1061.9" y="115.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.9" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (31 samples, 0.02%)</title><rect x="1061.9" y="99.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (31 samples, 0.02%)</title><rect x="1061.9" y="83.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (31 samples, 0.02%)</title><rect x="1061.9" y="67.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (31 samples, 0.02%)</title><rect x="1061.9" y="51.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.9" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.02%)</title><rect x="1061.9" y="35.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1064.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.iterator (14,207 samples, 10.78%)</title><rect x="1062.4" y="339.0" width="127.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1065.4" y="350.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.freshCellIterator (14,150 samples, 10.74%)</title><rect x="1062.7" y="323.0" width="126.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1065.7" y="334.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,788 samples, 2.12%)</title><rect x="1062.7" y="307.0" width="24.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1065.7" y="318.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,785 samples, 2.11%)</title><rect x="1062.7" y="291.0" width="24.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1065.7" y="302.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (61 samples, 0.05%)</title><rect x="1062.7" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1065.7" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (61 samples, 0.05%)</title><rect x="1062.7" y="259.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1065.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,695 samples, 2.04%)</title><rect x="1063.3" y="275.0" width="24.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1066.3" y="286.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,695 samples, 2.04%)</title><rect x="1063.3" y="259.0" width="24.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.3" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (54 samples, 0.04%)</title><rect x="1063.3" y="243.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1066.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (54 samples, 0.04%)</title><rect x="1063.3" y="227.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.3" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (54 samples, 0.04%)</title><rect x="1063.3" y="211.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1066.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,641 samples, 2.00%)</title><rect x="1063.8" y="243.0" width="23.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1066.8" y="254.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,641 samples, 2.00%)</title><rect x="1063.8" y="227.0" width="23.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1066.8" y="238.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,641 samples, 2.00%)</title><rect x="1063.8" y="211.0" width="23.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.8" y="222.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,641 samples, 2.00%)</title><rect x="1063.8" y="195.0" width="23.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1066.8" y="206.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,813 samples, 1.38%)</title><rect x="1063.8" y="179.0" width="16.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1066.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,813 samples, 1.38%)</title><rect x="1063.8" y="163.0" width="16.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1066.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (1,813 samples, 1.38%)</title><rect x="1063.8" y="147.0" width="16.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1066.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (1,813 samples, 1.38%)</title><rect x="1063.8" y="131.0" width="16.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1066.8" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (718 samples, 0.54%)</title><rect x="1063.8" y="115.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1066.8" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (402 samples, 0.31%)</title><rect x="1063.8" y="99.0" width="3.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1066.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (316 samples, 0.24%)</title><rect x="1067.4" y="99.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1070.4" y="110.0"></text>
</g>
<g>
<title>byte[] (316 samples, 0.24%)</title><rect x="1067.4" y="83.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1070.4" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (77 samples, 0.06%)</title><rect x="1070.2" y="115.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1073.2" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (69 samples, 0.05%)</title><rect x="1070.9" y="115.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1073.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (754 samples, 0.57%)</title><rect x="1071.5" y="115.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1074.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (555 samples, 0.42%)</title><rect x="1071.5" y="99.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1074.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (292 samples, 0.22%)</title><rect x="1071.5" y="83.0" width="2.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1074.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (263 samples, 0.20%)</title><rect x="1074.2" y="83.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1077.2" y="94.0"></text>
</g>
<g>
<title>byte[] (263 samples, 0.20%)</title><rect x="1074.2" y="67.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1077.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (199 samples, 0.15%)</title><rect x="1076.5" y="99.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1079.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (199 samples, 0.15%)</title><rect x="1076.5" y="83.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1079.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (136 samples, 0.10%)</title><rect x="1076.5" y="67.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1079.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (63 samples, 0.05%)</title><rect x="1077.7" y="67.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1080.7" y="78.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.05%)</title><rect x="1077.7" y="51.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1080.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (195 samples, 0.15%)</title><rect x="1078.3" y="115.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1081.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (195 samples, 0.15%)</title><rect x="1078.3" y="99.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1081.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (131 samples, 0.10%)</title><rect x="1078.3" y="83.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1081.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (64 samples, 0.05%)</title><rect x="1079.5" y="83.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1082.5" y="94.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.05%)</title><rect x="1079.5" y="67.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1082.5" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (828 samples, 0.63%)</title><rect x="1080.0" y="179.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1083.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (828 samples, 0.63%)</title><rect x="1080.0" y="163.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1083.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (828 samples, 0.63%)</title><rect x="1080.0" y="147.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1083.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (828 samples, 0.63%)</title><rect x="1080.0" y="131.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1083.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (828 samples, 0.63%)</title><rect x="1080.0" y="115.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1083.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (828 samples, 0.63%)</title><rect x="1080.0" y="99.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1083.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (828 samples, 0.63%)</title><rect x="1080.0" y="83.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1083.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (828 samples, 0.63%)</title><rect x="1080.0" y="67.0" width="7.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1083.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (156 samples, 0.12%)</title><rect x="1087.6" y="307.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1090.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (155 samples, 0.12%)</title><rect x="1087.6" y="291.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (155 samples, 0.12%)</title><rect x="1087.6" y="275.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1090.6" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (57 samples, 0.04%)</title><rect x="1087.6" y="259.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1090.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (57 samples, 0.04%)</title><rect x="1087.6" y="243.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1090.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (57 samples, 0.04%)</title><rect x="1087.6" y="227.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1090.6" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.04%)</title><rect x="1087.6" y="211.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.04%)</title><rect x="1087.6" y="195.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1090.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (57 samples, 0.04%)</title><rect x="1087.6" y="179.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1090.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (57 samples, 0.04%)</title><rect x="1087.6" y="163.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1090.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (57 samples, 0.04%)</title><rect x="1087.6" y="147.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1090.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (57 samples, 0.04%)</title><rect x="1087.6" y="131.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1090.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (57 samples, 0.04%)</title><rect x="1087.6" y="115.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1090.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (57 samples, 0.04%)</title><rect x="1087.6" y="99.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (57 samples, 0.04%)</title><rect x="1087.6" y="83.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1090.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (57 samples, 0.04%)</title><rect x="1087.6" y="67.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1090.6" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (98 samples, 0.07%)</title><rect x="1088.1" y="259.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1091.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (98 samples, 0.07%)</title><rect x="1088.1" y="243.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1091.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (98 samples, 0.07%)</title><rect x="1088.1" y="227.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1091.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (98 samples, 0.07%)</title><rect x="1088.1" y="211.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (98 samples, 0.07%)</title><rect x="1088.1" y="195.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1091.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (98 samples, 0.07%)</title><rect x="1088.1" y="179.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1091.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (54 samples, 0.04%)</title><rect x="1088.1" y="163.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1091.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (54 samples, 0.04%)</title><rect x="1088.1" y="147.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1091.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.next (54 samples, 0.04%)</title><rect x="1088.1" y="131.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1091.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.get (54 samples, 0.04%)</title><rect x="1088.1" y="115.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1091.1" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/196076151.compare (44 samples, 0.03%)</title><rect x="1088.6" y="163.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1091.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (44 samples, 0.03%)</title><rect x="1088.6" y="147.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1091.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$42/1408652377.compare (44 samples, 0.03%)</title><rect x="1088.6" y="131.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1091.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (44 samples, 0.03%)</title><rect x="1088.6" y="115.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1091.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell$$Lambda$122/1341181681.apply (44 samples, 0.03%)</title><rect x="1088.6" y="99.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1091.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (44 samples, 0.03%)</title><rect x="1088.6" y="83.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1091.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (44 samples, 0.03%)</title><rect x="1088.6" y="67.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1091.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (44 samples, 0.03%)</title><rect x="1088.6" y="51.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1091.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.getAllCellItersList (11,206 samples, 8.50%)</title><rect x="1089.0" y="307.0" width="100.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1092.0" y="318.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (11,204 samples, 8.50%)</title><rect x="1089.0" y="291.0" width="100.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1092.0" y="302.0">java/lang/It..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$134/1234271208.accept (11,194 samples, 8.49%)</title><rect x="1089.1" y="275.0" width="100.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1092.1" y="286.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$getAllCellItersList$9 (11,194 samples, 8.49%)</title><rect x="1089.1" y="259.0" width="100.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1092.1" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.iterator (11,194 samples, 8.49%)</title><rect x="1089.1" y="243.0" width="100.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1092.1" y="254.0">ru/mail/poli..</text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.SSTable$SSTableIter (63 samples, 0.05%)</title><rect x="1089.1" y="227.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1092.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable$SSTableIter.&lt;init&gt; (11,131 samples, 8.45%)</title><rect x="1089.7" y="227.0" width="99.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1092.7" y="238.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getElementPosition (11,131 samples, 8.45%)</title><rect x="1089.7" y="211.0" width="99.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1092.7" y="222.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getKey (11,131 samples, 8.45%)</title><rect x="1089.7" y="195.0" width="99.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.7" y="206.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8,132 samples, 6.17%)</title><rect x="1089.7" y="179.0" width="72.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1092.7" y="190.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,067 samples, 3.09%)</title><rect x="1089.7" y="163.0" width="36.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1092.7" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4,065 samples, 3.08%)</title><rect x="1126.1" y="163.0" width="36.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.1" y="174.0">jav..</text>
</g>
<g>
<title>byte[] (4,065 samples, 3.08%)</title><rect x="1126.1" y="147.0" width="36.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1129.1" y="158.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.getOffset (2,999 samples, 2.28%)</title><rect x="1162.5" y="179.0" width="26.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1165.5" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,999 samples, 2.28%)</title><rect x="1162.5" y="163.0" width="26.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1165.5" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,075 samples, 1.57%)</title><rect x="1162.5" y="147.0" width="18.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1165.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (924 samples, 0.70%)</title><rect x="1181.1" y="147.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1184.1" y="158.0"></text>
</g>
<g>
<title>byte[] (924 samples, 0.70%)</title><rect x="1181.1" y="131.0" width="8.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1184.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.iterator (32 samples, 0.02%)</title><rect x="1189.3" y="323.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1192.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.wrapString (39 samples, 0.03%)</title><rect x="1189.7" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.toBytes (33 samples, 0.03%)</title><rect x="1189.7" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1192.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (33 samples, 0.03%)</title><rect x="1189.7" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.7" y="334.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.03%)</title><rect x="1189.7" y="307.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1192.7" y="318.0"></text>
</g>
</g>
</svg>
