<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix local)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="373"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="373"> </text>
<g id="frames">
<g>
<title>all (132,583 samples, 100.00%)</title><rect x="10.0" y="339.0" width="1180.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="13.0" y="350.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (68,101 samples, 51.36%)</title><rect x="10.0" y="323.0" width="606.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (68,101 samples, 51.36%)</title><rect x="10.0" y="307.0" width="606.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (68,101 samples, 51.36%)</title><rect x="10.0" y="291.0" width="606.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="302.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,008 samples, 0.76%)</title><rect x="10.0" y="275.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,008 samples, 0.76%)</title><rect x="10.0" y="259.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (908 samples, 0.68%)</title><rect x="10.0" y="243.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (908 samples, 0.68%)</title><rect x="10.0" y="227.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (908 samples, 0.68%)</title><rect x="10.0" y="211.0" width="8.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (100 samples, 0.08%)</title><rect x="18.1" y="243.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (100 samples, 0.08%)</title><rect x="18.1" y="227.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (100 samples, 0.08%)</title><rect x="18.1" y="211.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="21.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (100 samples, 0.08%)</title><rect x="18.1" y="195.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (100 samples, 0.08%)</title><rect x="18.1" y="179.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="21.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$115/393671907.run (2,709 samples, 2.04%)</title><rect x="19.0" y="275.0" width="24.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.0" y="286.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$flush$10 (2,709 samples, 2.04%)</title><rect x="19.0" y="259.0" width="24.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.0" y="270.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.serialize (2,704 samples, 2.04%)</title><rect x="19.0" y="243.0" width="24.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.0" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.serialize (2,704 samples, 2.04%)</title><rect x="19.0" y="227.0" width="24.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.0" y="238.0">r..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (141 samples, 0.11%)</title><rect x="19.0" y="211.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.0" y="222.0"></text>
</g>
<g>
<title>java.lang.Integer (141 samples, 0.11%)</title><rect x="19.0" y="195.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="22.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,788 samples, 1.35%)</title><rect x="20.3" y="211.0" width="15.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,259 samples, 0.95%)</title><rect x="20.3" y="195.0" width="11.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="23.3" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (529 samples, 0.40%)</title><rect x="31.5" y="195.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.5" y="206.0"></text>
</g>
<g>
<title>byte[] (529 samples, 0.40%)</title><rect x="31.5" y="179.0" width="4.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="34.5" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (34 samples, 0.03%)</title><rect x="36.2" y="211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.2" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (34 samples, 0.03%)</title><rect x="36.2" y="195.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.2" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (34 samples, 0.03%)</title><rect x="36.2" y="179.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="39.2" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (34 samples, 0.03%)</title><rect x="36.2" y="163.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="39.2" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 0.03%)</title><rect x="36.2" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.2" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.02%)</title><rect x="36.2" y="131.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="39.2" y="142.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (181 samples, 0.14%)</title><rect x="36.5" y="211.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (181 samples, 0.14%)</title><rect x="36.5" y="195.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (181 samples, 0.14%)</title><rect x="36.5" y="179.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (181 samples, 0.14%)</title><rect x="36.5" y="163.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$119/1885703898.getAsBoolean (181 samples, 0.14%)</title><rect x="36.5" y="147.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (181 samples, 0.14%)</title><rect x="36.5" y="131.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (181 samples, 0.14%)</title><rect x="36.5" y="115.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="39.5" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (181 samples, 0.14%)</title><rect x="36.5" y="99.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable$$Lambda$116/1389166563.apply (181 samples, 0.14%)</title><rect x="36.5" y="83.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.lambda$iterator$0 (181 samples, 0.14%)</title><rect x="36.5" y="67.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.5" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Cell (181 samples, 0.14%)</title><rect x="36.5" y="51.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="39.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.getKey (277 samples, 0.21%)</title><rect x="38.1" y="211.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="41.1" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (277 samples, 0.21%)</title><rect x="38.1" y="195.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.1" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (277 samples, 0.21%)</title><rect x="38.1" y="179.0" width="2.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="41.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (283 samples, 0.21%)</title><rect x="40.6" y="211.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.6" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (283 samples, 0.21%)</title><rect x="40.6" y="195.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.6" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (283 samples, 0.21%)</title><rect x="40.6" y="179.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="43.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$101/1597720911.run (64,384 samples, 48.56%)</title><rect x="43.1" y="275.0" width="573.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.1" y="286.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$101/1597720911.run</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (64,384 samples, 48.56%)</title><rect x="43.1" y="259.0" width="573.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="46.1" y="270.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (64,384 samples, 48.56%)</title><rect x="43.1" y="243.0" width="573.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.1" y="254.0">ru/mail/polis/service/zvladn7/AsyncService.process</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$95/863668112.process (64,384 samples, 48.56%)</title><rect x="43.1" y="227.0" width="573.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.1" y="238.0">ru/mail/polis/service/zvladn7/AsyncService$$Lambda$95/863668112.process</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$4 (64,384 samples, 48.56%)</title><rect x="43.1" y="211.0" width="573.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.1" y="222.0">ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$4</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleUpsert (64,384 samples, 48.56%)</title><rect x="43.1" y="195.0" width="573.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="46.1" y="206.0">ru/mail/polis/service/zvladn7/AsyncService.handleUpsert</text>
</g>
<g>
<title>com/google/common/cache/LocalCache.computeIfPresent (11,256 samples, 8.49%)</title><rect x="43.1" y="179.0" width="100.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.1" y="190.0">com/google/c..</text>
</g>
<g>
<title>com/google/common/cache/LocalCache.compute (10,058 samples, 7.59%)</title><rect x="43.1" y="163.0" width="89.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.1" y="174.0">com/google..</text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.compute (10,058 samples, 7.59%)</title><rect x="43.1" y="147.0" width="89.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.1" y="158.0">com/google..</text>
</g>
<g>
<title>com.google.common.cache.LocalCache$LoadingValueReference (1,830 samples, 1.38%)</title><rect x="43.1" y="131.0" width="16.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="46.1" y="142.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$LoadingValueReference.&lt;init&gt; (4,643 samples, 3.50%)</title><rect x="59.4" y="131.0" width="41.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.4" y="142.0">com..</text>
</g>
<g>
<title>com/google/common/base/Stopwatch.createUnstarted (2,895 samples, 2.18%)</title><rect x="59.4" y="115.0" width="25.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.4" y="126.0">c..</text>
</g>
<g>
<title>com.google.common.base.Stopwatch (2,895 samples, 2.18%)</title><rect x="59.4" y="99.0" width="25.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="62.4" y="110.0">c..</text>
</g>
<g>
<title>com/google/common/util/concurrent/SettableFuture.create (1,748 samples, 1.32%)</title><rect x="85.1" y="115.0" width="15.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.1" y="126.0"></text>
</g>
<g>
<title>com.google.common.util.concurrent.SettableFuture (1,748 samples, 1.32%)</title><rect x="85.1" y="99.0" width="15.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="88.1" y="110.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.newEntry (3,572 samples, 2.69%)</title><rect x="100.7" y="131.0" width="31.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="103.7" y="142.0">co..</text>
</g>
<g>
<title>com/google/common/cache/LocalCache$EntryFactory$2.newEntry (3,572 samples, 2.69%)</title><rect x="100.7" y="115.0" width="31.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="103.7" y="126.0">co..</text>
</g>
<g>
<title>com.google.common.cache.LocalCache$StrongAccessEntry (3,572 samples, 2.69%)</title><rect x="100.7" y="99.0" width="31.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="103.7" y="110.0">co..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,198 samples, 0.90%)</title><rect x="132.6" y="163.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="135.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,198 samples, 0.90%)</title><rect x="132.6" y="147.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.6" y="158.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$$Lambda$110/1076086382.get$Lambda (1,198 samples, 0.90%)</title><rect x="132.6" y="131.0" width="10.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.6" y="142.0"></text>
</g>
<g>
<title>com.google.common.cache.LocalCache$$Lambda$110 (1,198 samples, 0.90%)</title><rect x="132.6" y="115.0" width="10.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="135.6" y="126.0"></text>
</g>
<g>
<title>java.lang.String (2,610 samples, 1.97%)</title><rect x="143.3" y="179.0" width="23.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="146.3" y="190.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,787 samples, 3.61%)</title><rect x="166.5" y="179.0" width="42.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="169.5" y="190.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,787 samples, 3.61%)</title><rect x="166.5" y="163.0" width="42.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="169.5" y="174.0">java..</text>
</g>
<g>
<title>java/lang/StringCoding.decode (4,787 samples, 3.61%)</title><rect x="166.5" y="147.0" width="42.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="169.5" y="158.0">java..</text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (4,787 samples, 3.61%)</title><rect x="166.5" y="131.0" width="42.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="169.5" y="142.0">java..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,787 samples, 3.61%)</title><rect x="166.5" y="115.0" width="42.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.5" y="126.0">java..</text>
</g>
<g>
<title>byte[] (4,787 samples, 3.61%)</title><rect x="166.5" y="99.0" width="42.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="169.5" y="110.0">byte[]</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,210 samples, 0.91%)</title><rect x="209.1" y="179.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,210 samples, 0.91%)</title><rect x="209.1" y="163.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$109/407412613.get$Lambda (1,210 samples, 0.91%)</title><rect x="209.1" y="147.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="212.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$109 (1,210 samples, 0.91%)</title><rect x="209.1" y="131.0" width="10.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="212.1" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (1,796 samples, 1.35%)</title><rect x="219.9" y="179.0" width="15.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="222.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9,439 samples, 7.12%)</title><rect x="235.8" y="179.0" width="84.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.8" y="190.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9,439 samples, 7.12%)</title><rect x="235.8" y="163.0" width="84.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.8" y="174.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6,509 samples, 4.91%)</title><rect x="235.8" y="147.0" width="58.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="238.8" y="158.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6,509 samples, 4.91%)</title><rect x="235.8" y="131.0" width="58.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.8" y="142.0">one/ni..</text>
</g>
<g>
<title>byte[] (6,505 samples, 4.91%)</title><rect x="235.8" y="115.0" width="57.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="238.8" y="126.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (2,930 samples, 2.21%)</title><rect x="293.8" y="147.0" width="26.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.8" y="158.0">o..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2,930 samples, 2.21%)</title><rect x="293.8" y="131.0" width="26.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="296.8" y="142.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7,166 samples, 5.40%)</title><rect x="319.9" y="179.0" width="63.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="322.9" y="190.0">one/nio..</text>
</g>
<g>
<title>byte[] (2,967 samples, 2.24%)</title><rect x="319.9" y="163.0" width="26.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="322.9" y="174.0">b..</text>
</g>
<g>
<title>java.lang.String[] (2,389 samples, 1.80%)</title><rect x="346.3" y="163.0" width="21.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="349.3" y="174.0">j..</text>
</g>
<g>
<title>java.lang.String (1,810 samples, 1.37%)</title><rect x="367.5" y="163.0" width="16.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="370.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (14,594 samples, 11.01%)</title><rect x="383.6" y="179.0" width="129.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.6" y="190.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,726 samples, 1.30%)</title><rect x="383.6" y="163.0" width="15.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,726 samples, 1.30%)</title><rect x="383.6" y="147.0" width="15.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$106/1677529807.get$Lambda (1,726 samples, 1.30%)</title><rect x="383.6" y="131.0" width="15.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.6" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.LsmDAOImpl$$Lambda$106 (1,726 samples, 1.30%)</title><rect x="383.6" y="115.0" width="15.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="386.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (12,868 samples, 9.71%)</title><rect x="399.0" y="163.0" width="114.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.0" y="174.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (592 samples, 0.45%)</title><rect x="399.0" y="147.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (592 samples, 0.45%)</title><rect x="399.0" y="131.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (591 samples, 0.45%)</title><rect x="399.0" y="115.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="402.0" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (499 samples, 0.38%)</title><rect x="399.0" y="99.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="402.0" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (499 samples, 0.38%)</title><rect x="399.0" y="83.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="402.0" y="94.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (284 samples, 0.21%)</title><rect x="399.0" y="67.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="402.0" y="78.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (284 samples, 0.21%)</title><rect x="399.0" y="51.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="402.0" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (215 samples, 0.16%)</title><rect x="401.5" y="67.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="404.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (215 samples, 0.16%)</title><rect x="401.5" y="51.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="404.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (215 samples, 0.16%)</title><rect x="401.5" y="35.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="404.5" y="46.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (77 samples, 0.06%)</title><rect x="403.4" y="99.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.4" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (77 samples, 0.06%)</title><rect x="403.4" y="83.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="406.4" y="94.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (77 samples, 0.06%)</title><rect x="403.4" y="67.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="406.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$106/1677529807.run (12,276 samples, 9.26%)</title><rect x="404.3" y="147.0" width="109.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.3" y="158.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (12,276 samples, 9.26%)</title><rect x="404.3" y="131.0" width="109.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.3" y="142.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (12,276 samples, 9.26%)</title><rect x="404.3" y="115.0" width="109.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.3" y="126.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7,200 samples, 5.43%)</title><rect x="404.3" y="99.0" width="64.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.3" y="110.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7,200 samples, 5.43%)</title><rect x="404.3" y="83.0" width="64.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="407.3" y="94.0">java.ni..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (696 samples, 0.52%)</title><rect x="468.3" y="99.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (696 samples, 0.52%)</title><rect x="468.3" y="83.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.3" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (204 samples, 0.15%)</title><rect x="468.3" y="67.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="471.3" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (492 samples, 0.37%)</title><rect x="470.2" y="67.0" width="4.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="473.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.zvladn7.Value (1,736 samples, 1.31%)</title><rect x="474.5" y="99.0" width="15.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="477.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (2,644 samples, 1.99%)</title><rect x="490.0" y="99.0" width="23.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.0" y="110.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2,644 samples, 1.99%)</title><rect x="490.0" y="83.0" width="23.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.0" y="94.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2,644 samples, 1.99%)</title><rect x="490.0" y="67.0" width="23.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="493.0" y="78.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.wrapArray (3,500 samples, 2.64%)</title><rect x="513.5" y="179.0" width="31.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.5" y="190.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,500 samples, 2.64%)</title><rect x="513.5" y="163.0" width="31.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="516.5" y="174.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,500 samples, 2.64%)</title><rect x="513.5" y="147.0" width="31.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.5" y="158.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,500 samples, 2.64%)</title><rect x="513.5" y="131.0" width="31.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="516.5" y="142.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.wrapString (8,026 samples, 6.05%)</title><rect x="544.7" y="179.0" width="71.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.7" y="190.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,513 samples, 2.65%)</title><rect x="544.7" y="163.0" width="31.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.7" y="174.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,513 samples, 2.65%)</title><rect x="544.7" y="147.0" width="31.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="547.7" y="158.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,513 samples, 2.65%)</title><rect x="544.7" y="131.0" width="31.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="547.7" y="142.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.toBytes (4,513 samples, 3.40%)</title><rect x="575.9" y="163.0" width="40.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.9" y="174.0">ru/..</text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (4,513 samples, 3.40%)</title><rect x="575.9" y="147.0" width="40.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.9" y="158.0">one..</text>
</g>
<g>
<title>byte[] (4,513 samples, 3.40%)</title><rect x="575.9" y="131.0" width="40.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="578.9" y="142.0">byt..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (64,482 samples, 48.64%)</title><rect x="616.1" y="323.0" width="573.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="619.1" y="334.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,928 samples, 1.45%)</title><rect x="616.1" y="307.0" width="17.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="619.1" y="318.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,928 samples, 1.45%)</title><rect x="616.1" y="291.0" width="17.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="619.1" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (62,554 samples, 47.18%)</title><rect x="633.3" y="307.0" width="556.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="636.3" y="318.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (62,554 samples, 47.18%)</title><rect x="633.3" y="291.0" width="556.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.3" y="302.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (62,554 samples, 47.18%)</title><rect x="633.3" y="275.0" width="556.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="636.3" y="286.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (13,237 samples, 9.98%)</title><rect x="633.3" y="259.0" width="117.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.3" y="270.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (13,237 samples, 9.98%)</title><rect x="633.3" y="243.0" width="117.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="636.3" y="254.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (9,064 samples, 6.84%)</title><rect x="633.3" y="227.0" width="80.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.3" y="238.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5,628 samples, 4.24%)</title><rect x="633.3" y="211.0" width="50.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.3" y="222.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5,628 samples, 4.24%)</title><rect x="633.3" y="195.0" width="50.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="636.3" y="206.0">one/n..</text>
</g>
<g>
<title>java/lang/String.substring (5,628 samples, 4.24%)</title><rect x="633.3" y="179.0" width="50.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.3" y="190.0">java/..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,628 samples, 4.24%)</title><rect x="633.3" y="163.0" width="50.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.3" y="174.0">java/..</text>
</g>
<g>
<title>java.lang.String (1,553 samples, 1.17%)</title><rect x="633.3" y="147.0" width="13.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="636.3" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,075 samples, 3.07%)</title><rect x="647.1" y="147.0" width="36.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="650.1" y="158.0">jav..</text>
</g>
<g>
<title>byte[] (4,075 samples, 3.07%)</title><rect x="647.1" y="131.0" width="36.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="650.1" y="142.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (3,436 samples, 2.59%)</title><rect x="683.4" y="211.0" width="30.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.4" y="222.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,179 samples, 1.64%)</title><rect x="683.4" y="195.0" width="19.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,179 samples, 1.64%)</title><rect x="683.4" y="179.0" width="19.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$95/863668112.get$Lambda (2,179 samples, 1.64%)</title><rect x="683.4" y="163.0" width="19.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.4" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$95 (2,179 samples, 1.64%)</title><rect x="683.4" y="147.0" width="19.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="686.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (1,257 samples, 0.95%)</title><rect x="702.7" y="195.0" width="11.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,187 samples, 0.90%)</title><rect x="702.7" y="179.0" width="10.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,187 samples, 0.90%)</title><rect x="702.7" y="163.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$101/1597720911.get$Lambda (1,187 samples, 0.90%)</title><rect x="702.7" y="147.0" width="10.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="705.7" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.zvladn7.AsyncService$$Lambda$101 (1,187 samples, 0.90%)</title><rect x="702.7" y="131.0" width="10.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="705.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (70 samples, 0.05%)</title><rect x="713.3" y="179.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="716.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (70 samples, 0.05%)</title><rect x="713.3" y="163.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="716.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (70 samples, 0.05%)</title><rect x="713.3" y="147.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="716.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (70 samples, 0.05%)</title><rect x="713.3" y="131.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="716.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (70 samples, 0.05%)</title><rect x="713.3" y="115.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="716.3" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (70 samples, 0.05%)</title><rect x="713.3" y="99.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="716.3" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4,173 samples, 3.15%)</title><rect x="713.9" y="227.0" width="37.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.9" y="238.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (4,173 samples, 3.15%)</title><rect x="713.9" y="211.0" width="37.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="716.9" y="222.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,173 samples, 3.15%)</title><rect x="713.9" y="195.0" width="37.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="716.9" y="206.0">jav..</text>
</g>
<g>
<title>java.lang.String (1,877 samples, 1.42%)</title><rect x="713.9" y="179.0" width="16.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="716.9" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,296 samples, 1.73%)</title><rect x="730.6" y="179.0" width="20.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="733.6" y="190.0"></text>
</g>
<g>
<title>byte[] (2,296 samples, 1.73%)</title><rect x="730.6" y="163.0" width="20.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="733.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (24,812 samples, 18.71%)</title><rect x="751.1" y="259.0" width="220.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.1" y="270.0">one/nio/http/HttpSession.pars..</text>
</g>
<g>
<title>one.nio.http.Request (2,858 samples, 2.16%)</title><rect x="751.1" y="243.0" width="25.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="754.1" y="254.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5,378 samples, 4.06%)</title><rect x="776.5" y="243.0" width="47.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="779.5" y="254.0">one/..</text>
</g>
<g>
<title>java.lang.String[] (5,378 samples, 4.06%)</title><rect x="776.5" y="227.0" width="47.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="779.5" y="238.0">java..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (16,576 samples, 12.50%)</title><rect x="824.4" y="243.0" width="147.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="827.4" y="254.0">one/nio/util/Utf8.r..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (16,576 samples, 12.50%)</title><rect x="824.4" y="227.0" width="147.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="827.4" y="238.0">one/nio/util/Utf8.r..</text>
</g>
<g>
<title>char[] (9,851 samples, 7.43%)</title><rect x="824.4" y="211.0" width="87.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="827.4" y="222.0">char[]</text>
</g>
<g>
<title>char[] (112 samples, 0.08%)</title><rect x="912.1" y="211.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="915.1" y="222.0"></text>
</g>
<g>
<title>java.lang.String (1,581 samples, 1.19%)</title><rect x="913.0" y="211.0" width="14.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="916.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5,032 samples, 3.80%)</title><rect x="927.1" y="211.0" width="44.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="930.1" y="222.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5,032 samples, 3.80%)</title><rect x="927.1" y="195.0" width="44.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="930.1" y="206.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5,032 samples, 3.80%)</title><rect x="927.1" y="179.0" width="44.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="930.1" y="190.0">java..</text>
</g>
<g>
<title>byte[] (5,032 samples, 3.80%)</title><rect x="927.1" y="163.0" width="44.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="930.1" y="174.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4,698 samples, 3.54%)</title><rect x="971.9" y="259.0" width="41.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="974.9" y="270.0">one..</text>
</g>
<g>
<title>byte[] (4,698 samples, 3.54%)</title><rect x="971.9" y="243.0" width="41.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="974.9" y="254.0">byt..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3,115 samples, 2.35%)</title><rect x="1013.7" y="259.0" width="27.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1016.7" y="270.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (3,115 samples, 2.35%)</title><rect x="1013.7" y="243.0" width="27.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1016.7" y="254.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,115 samples, 2.35%)</title><rect x="1013.7" y="227.0" width="27.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1016.7" y="238.0">j..</text>
</g>
<g>
<title>java.lang.String (1,574 samples, 1.19%)</title><rect x="1013.7" y="211.0" width="14.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1016.7" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,541 samples, 1.16%)</title><rect x="1027.7" y="211.0" width="13.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.7" y="222.0"></text>
</g>
<g>
<title>byte[] (1,541 samples, 1.16%)</title><rect x="1027.7" y="195.0" width="13.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1030.7" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16,692 samples, 12.59%)</title><rect x="1041.4" y="259.0" width="148.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.4" y="270.0">one/nio/util/Utf8.r..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (16,692 samples, 12.59%)</title><rect x="1041.4" y="243.0" width="148.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1044.4" y="254.0">one/nio/util/Utf8.r..</text>
</g>
<g>
<title>char[] (8,066 samples, 6.08%)</title><rect x="1041.4" y="227.0" width="71.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1044.4" y="238.0">char[]</text>
</g>
<g>
<title>java.lang.String (3,272 samples, 2.47%)</title><rect x="1113.2" y="227.0" width="29.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1116.2" y="238.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5,354 samples, 4.04%)</title><rect x="1142.3" y="227.0" width="47.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1145.3" y="238.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5,354 samples, 4.04%)</title><rect x="1142.3" y="211.0" width="47.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.3" y="222.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5,354 samples, 4.04%)</title><rect x="1142.3" y="195.0" width="47.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1145.3" y="206.0">java..</text>
</g>
<g>
<title>byte[] (5,354 samples, 4.04%)</title><rect x="1142.3" y="179.0" width="47.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1145.3" y="190.0">byte[]</text>
</g>
</g>
</svg>
