<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1013"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1013"> </text>
<g id="frames">
<g>
<title>all (4,840 samples, 100.00%)</title><rect x="10.0" y="979.0" width="1180.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="990.0">all</text>
</g>
<g>
<title>[G1 Conc#0 tid=13342] (7 samples, 0.14%)</title><rect x="10.0" y="963.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>start_thread (7 samples, 0.14%)</title><rect x="10.0" y="947.0" width="1.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 0.14%)</title><rect x="10.0" y="931.0" width="1.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (7 samples, 0.14%)</title><rect x="10.0" y="915.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 0.14%)</title><rect x="10.0" y="899.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (5 samples, 0.10%)</title><rect x="10.0" y="883.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (5 samples, 0.10%)</title><rect x="10.0" y="867.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (2 samples, 0.04%)</title><rect x="10.0" y="851.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.149] (2 samples, 0.04%)</title><rect x="10.7" y="851.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.7" y="862.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (2 samples, 0.04%)</title><rect x="10.7" y="835.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.7" y="846.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (2 samples, 0.04%)</title><rect x="11.2" y="883.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.2" y="894.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (2 samples, 0.04%)</title><rect x="11.2" y="867.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.2" y="878.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.04%)</title><rect x="11.2" y="851.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.2" y="862.0"></text>
</g>
<g>
<title>[G1 Conc#1 tid=13537] (7 samples, 0.14%)</title><rect x="11.7" y="963.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="14.7" y="974.0"></text>
</g>
<g>
<title>start_thread (7 samples, 0.14%)</title><rect x="11.7" y="947.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="14.7" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 0.14%)</title><rect x="11.7" y="931.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="14.7" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (7 samples, 0.14%)</title><rect x="11.7" y="915.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="14.7" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 0.14%)</title><rect x="11.7" y="899.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.7" y="910.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (5 samples, 0.10%)</title><rect x="11.7" y="883.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.7" y="894.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (5 samples, 0.10%)</title><rect x="11.7" y="867.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="14.7" y="878.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (4 samples, 0.08%)</title><rect x="11.7" y="851.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.7" y="862.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.149] (3 samples, 0.06%)</title><rect x="11.7" y="835.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.7" y="846.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (3 samples, 0.06%)</title><rect x="11.7" y="819.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.7" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (3 samples, 0.06%)</title><rect x="11.7" y="803.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="14.7" y="814.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (2 samples, 0.04%)</title><rect x="12.9" y="883.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="15.9" y="894.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (2 samples, 0.04%)</title><rect x="12.9" y="867.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="15.9" y="878.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.04%)</title><rect x="12.9" y="851.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="15.9" y="862.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=13340] (18 samples, 0.37%)</title><rect x="13.4" y="963.0" width="4.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="16.4" y="974.0"></text>
</g>
<g>
<title>start_thread (18 samples, 0.37%)</title><rect x="13.4" y="947.0" width="4.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="16.4" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (18 samples, 0.37%)</title><rect x="13.4" y="931.0" width="4.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="16.4" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (18 samples, 0.37%)</title><rect x="13.4" y="915.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.4" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (18 samples, 0.37%)</title><rect x="13.4" y="899.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="16.4" y="910.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (17 samples, 0.35%)</title><rect x="13.4" y="883.0" width="4.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="16.4" y="894.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (10 samples, 0.21%)</title><rect x="13.4" y="867.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.4" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (8 samples, 0.17%)</title><rect x="13.9" y="851.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="16.9" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.08%)</title><rect x="14.6" y="835.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.6" y="846.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (5 samples, 0.10%)</title><rect x="15.9" y="867.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="18.9" y="878.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.10%)</title><rect x="15.9" y="851.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="18.9" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (5 samples, 0.10%)</title><rect x="15.9" y="835.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="18.9" y="846.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (5 samples, 0.10%)</title><rect x="15.9" y="819.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="18.9" y="830.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (5 samples, 0.10%)</title><rect x="15.9" y="803.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="18.9" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.08%)</title><rect x="15.9" y="787.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="18.9" y="798.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.04%)</title><rect x="17.1" y="867.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="20.1" y="878.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=13526] (18 samples, 0.37%)</title><rect x="17.8" y="963.0" width="4.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="20.8" y="974.0"></text>
</g>
<g>
<title>start_thread (18 samples, 0.37%)</title><rect x="17.8" y="947.0" width="4.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="20.8" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (18 samples, 0.37%)</title><rect x="17.8" y="931.0" width="4.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="20.8" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (18 samples, 0.37%)</title><rect x="17.8" y="915.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="20.8" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (18 samples, 0.37%)</title><rect x="17.8" y="899.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="20.8" y="910.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (18 samples, 0.37%)</title><rect x="17.8" y="883.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="20.8" y="894.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (11 samples, 0.23%)</title><rect x="17.8" y="867.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="20.8" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (11 samples, 0.23%)</title><rect x="17.8" y="851.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="20.8" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.08%)</title><rect x="19.3" y="835.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.3" y="846.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (5 samples, 0.10%)</title><rect x="20.5" y="867.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="23.5" y="878.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.10%)</title><rect x="20.5" y="851.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="23.5" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (5 samples, 0.10%)</title><rect x="20.5" y="835.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="23.5" y="846.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (5 samples, 0.10%)</title><rect x="20.5" y="819.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="23.5" y="830.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (5 samples, 0.10%)</title><rect x="20.5" y="803.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="23.5" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.08%)</title><rect x="20.5" y="787.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="23.5" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.06%)</title><rect x="20.5" y="771.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="23.5" y="782.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.04%)</title><rect x="20.7" y="755.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="23.7" y="766.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.04%)</title><rect x="21.7" y="867.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="24.7" y="878.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (2 samples, 0.04%)</title><rect x="21.7" y="851.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="24.7" y="862.0"></text>
</g>
<g>
<title>[GC Thread#2 tid=13527] (18 samples, 0.37%)</title><rect x="22.2" y="963.0" width="4.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="25.2" y="974.0"></text>
</g>
<g>
<title>start_thread (17 samples, 0.35%)</title><rect x="22.4" y="947.0" width="4.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="25.4" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (17 samples, 0.35%)</title><rect x="22.4" y="931.0" width="4.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="25.4" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (17 samples, 0.35%)</title><rect x="22.4" y="915.0" width="4.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="25.4" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (17 samples, 0.35%)</title><rect x="22.4" y="899.0" width="4.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="25.4" y="910.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (17 samples, 0.35%)</title><rect x="22.4" y="883.0" width="4.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="25.4" y="894.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (10 samples, 0.21%)</title><rect x="22.4" y="867.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="25.4" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (8 samples, 0.17%)</title><rect x="22.4" y="851.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="25.4" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.08%)</title><rect x="23.2" y="835.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="26.2" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.04%)</title><rect x="23.7" y="819.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="26.7" y="830.0"></text>
</g>
<g>
<title>OWSTTaskTerminator::offer_termination(TerminatorTerminator*) (2 samples, 0.04%)</title><rect x="24.4" y="851.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="27.4" y="862.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.04%)</title><rect x="24.4" y="835.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="27.4" y="846.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (6 samples, 0.12%)</title><rect x="24.9" y="867.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="27.9" y="878.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (6 samples, 0.12%)</title><rect x="24.9" y="851.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="27.9" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (5 samples, 0.10%)</title><rect x="24.9" y="835.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="27.9" y="846.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (5 samples, 0.10%)</title><rect x="24.9" y="819.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="27.9" y="830.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (5 samples, 0.10%)</title><rect x="24.9" y="803.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="27.9" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.08%)</title><rect x="24.9" y="787.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="27.9" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.04%)</title><rect x="25.4" y="771.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="28.4" y="782.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=13528] (18 samples, 0.37%)</title><rect x="26.6" y="963.0" width="4.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="29.6" y="974.0"></text>
</g>
<g>
<title>start_thread (18 samples, 0.37%)</title><rect x="26.6" y="947.0" width="4.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="29.6" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (18 samples, 0.37%)</title><rect x="26.6" y="931.0" width="4.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="29.6" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (18 samples, 0.37%)</title><rect x="26.6" y="915.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="29.6" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (18 samples, 0.37%)</title><rect x="26.6" y="899.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="29.6" y="910.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (17 samples, 0.35%)</title><rect x="26.8" y="883.0" width="4.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="29.8" y="894.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 0.19%)</title><rect x="26.8" y="867.0" width="2.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="29.8" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (9 samples, 0.19%)</title><rect x="26.8" y="851.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="29.8" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.12%)</title><rect x="27.6" y="835.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="30.6" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (4 samples, 0.08%)</title><rect x="28.0" y="819.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="31.0" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (7 samples, 0.14%)</title><rect x="29.0" y="867.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="32.0" y="878.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (7 samples, 0.14%)</title><rect x="29.0" y="851.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="32.0" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (7 samples, 0.14%)</title><rect x="29.0" y="835.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="32.0" y="846.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (7 samples, 0.14%)</title><rect x="29.0" y="819.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="32.0" y="830.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (7 samples, 0.14%)</title><rect x="29.0" y="803.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="32.0" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (5 samples, 0.10%)</title><rect x="29.0" y="787.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="32.0" y="798.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (2 samples, 0.04%)</title><rect x="30.2" y="787.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="33.2" y="798.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (2 samples, 0.04%)</title><rect x="30.2" y="771.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="33.2" y="782.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 0.04%)</title><rect x="30.2" y="755.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="33.2" y="766.0"></text>
</g>
<g>
<title>[GC Thread#4 tid=13529] (19 samples, 0.39%)</title><rect x="31.0" y="963.0" width="4.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="34.0" y="974.0"></text>
</g>
<g>
<title>start_thread (19 samples, 0.39%)</title><rect x="31.0" y="947.0" width="4.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="34.0" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (19 samples, 0.39%)</title><rect x="31.0" y="931.0" width="4.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="34.0" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (19 samples, 0.39%)</title><rect x="31.0" y="915.0" width="4.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="34.0" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (19 samples, 0.39%)</title><rect x="31.0" y="899.0" width="4.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="34.0" y="910.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (18 samples, 0.37%)</title><rect x="31.0" y="883.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="34.0" y="894.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (14 samples, 0.29%)</title><rect x="31.0" y="867.0" width="3.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="34.0" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (13 samples, 0.27%)</title><rect x="31.0" y="851.0" width="3.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="34.0" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.12%)</title><rect x="31.9" y="835.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="34.9" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.04%)</title><rect x="32.9" y="819.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="35.9" y="830.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (3 samples, 0.06%)</title><rect x="33.4" y="835.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="36.4" y="846.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.06%)</title><rect x="34.4" y="867.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="37.4" y="878.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.06%)</title><rect x="34.4" y="851.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="37.4" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.06%)</title><rect x="34.4" y="835.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="37.4" y="846.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.06%)</title><rect x="34.4" y="819.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="37.4" y="830.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.06%)</title><rect x="34.4" y="803.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="37.4" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.06%)</title><rect x="34.4" y="787.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="37.4" y="798.0"></text>
</g>
<g>
<title>[GC Thread#5 tid=13530] (18 samples, 0.37%)</title><rect x="35.6" y="963.0" width="4.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="38.6" y="974.0"></text>
</g>
<g>
<title>start_thread (17 samples, 0.35%)</title><rect x="35.8" y="947.0" width="4.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="38.8" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (17 samples, 0.35%)</title><rect x="35.8" y="931.0" width="4.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="38.8" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (17 samples, 0.35%)</title><rect x="35.8" y="915.0" width="4.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="38.8" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (17 samples, 0.35%)</title><rect x="35.8" y="899.0" width="4.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="38.8" y="910.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (16 samples, 0.33%)</title><rect x="35.8" y="883.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="38.8" y="894.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (11 samples, 0.23%)</title><rect x="35.8" y="867.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="38.8" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (9 samples, 0.19%)</title><rect x="36.1" y="851.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="39.1" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.10%)</title><rect x="36.8" y="835.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="39.8" y="846.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.06%)</title><rect x="38.5" y="867.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="41.5" y="878.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.06%)</title><rect x="38.5" y="851.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="41.5" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.06%)</title><rect x="38.5" y="835.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="41.5" y="846.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.06%)</title><rect x="38.5" y="819.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="41.5" y="830.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.06%)</title><rect x="38.5" y="803.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="41.5" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.04%)</title><rect x="38.5" y="787.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="41.5" y="798.0"></text>
</g>
<g>
<title>[GC Thread#6 tid=13531] (19 samples, 0.39%)</title><rect x="40.0" y="963.0" width="4.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="43.0" y="974.0"></text>
</g>
<g>
<title>start_thread (18 samples, 0.37%)</title><rect x="40.2" y="947.0" width="4.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="43.2" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (18 samples, 0.37%)</title><rect x="40.2" y="931.0" width="4.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="43.2" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (18 samples, 0.37%)</title><rect x="40.2" y="915.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="43.2" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (18 samples, 0.37%)</title><rect x="40.2" y="899.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="43.2" y="910.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (17 samples, 0.35%)</title><rect x="40.2" y="883.0" width="4.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="43.2" y="894.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (12 samples, 0.25%)</title><rect x="40.2" y="867.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="43.2" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (10 samples, 0.21%)</title><rect x="40.5" y="851.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="43.5" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.10%)</title><rect x="41.7" y="835.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="44.7" y="846.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.08%)</title><rect x="43.2" y="867.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="46.2" y="878.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.08%)</title><rect x="43.2" y="851.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="46.2" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.08%)</title><rect x="43.2" y="835.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="46.2" y="846.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.08%)</title><rect x="43.2" y="819.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="46.2" y="830.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.08%)</title><rect x="43.2" y="803.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="46.2" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.06%)</title><rect x="43.2" y="787.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="46.2" y="798.0"></text>
</g>
<g>
<title>[GC Thread#7 tid=13532] (18 samples, 0.37%)</title><rect x="44.6" y="963.0" width="4.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="47.6" y="974.0"></text>
</g>
<g>
<title>start_thread (18 samples, 0.37%)</title><rect x="44.6" y="947.0" width="4.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="47.6" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (18 samples, 0.37%)</title><rect x="44.6" y="931.0" width="4.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="47.6" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (18 samples, 0.37%)</title><rect x="44.6" y="915.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="47.6" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (18 samples, 0.37%)</title><rect x="44.6" y="899.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="47.6" y="910.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (18 samples, 0.37%)</title><rect x="44.6" y="883.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="47.6" y="894.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (10 samples, 0.21%)</title><rect x="44.6" y="867.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="47.6" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (10 samples, 0.21%)</title><rect x="44.6" y="851.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="47.6" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.12%)</title><rect x="45.4" y="835.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="48.4" y="846.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (5 samples, 0.10%)</title><rect x="47.3" y="867.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="50.3" y="878.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.10%)</title><rect x="47.3" y="851.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="50.3" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (5 samples, 0.10%)</title><rect x="47.3" y="835.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="50.3" y="846.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (5 samples, 0.10%)</title><rect x="47.3" y="819.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="50.3" y="830.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (5 samples, 0.10%)</title><rect x="47.3" y="803.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="50.3" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.04%)</title><rect x="47.3" y="787.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="50.3" y="798.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (3 samples, 0.06%)</title><rect x="47.8" y="787.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="50.8" y="798.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (2 samples, 0.04%)</title><rect x="47.8" y="771.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="50.8" y="782.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.04%)</title><rect x="48.5" y="867.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="51.5" y="878.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.04%)</title><rect x="48.5" y="851.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="51.5" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=13373] (169 samples, 3.49%)</title><rect x="49.0" y="963.0" width="41.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="52.0" y="974.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (168 samples, 3.47%)</title><rect x="49.3" y="947.0" width="40.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.3" y="958.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (46 samples, 0.95%)</title><rect x="49.5" y="931.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (45 samples, 0.93%)</title><rect x="49.7" y="915.0" width="11.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.91%)</title><rect x="50.0" y="899.0" width="10.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="53.0" y="910.0"></text>
</g>
<g>
<title>epoll_wait (44 samples, 0.91%)</title><rect x="50.0" y="883.0" width="10.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="53.0" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.62%)</title><rect x="53.4" y="867.0" width="7.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="56.4" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.60%)</title><rect x="53.6" y="851.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="56.6" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (24 samples, 0.50%)</title><rect x="54.9" y="835.0" width="5.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="57.9" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (24 samples, 0.50%)</title><rect x="54.9" y="819.0" width="5.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="57.9" y="830.0"></text>
</g>
<g>
<title>ep_poll (22 samples, 0.45%)</title><rect x="55.1" y="803.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="58.1" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (18 samples, 0.37%)</title><rect x="55.8" y="787.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="58.8" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (16 samples, 0.33%)</title><rect x="56.1" y="771.0" width="3.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="59.1" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (12 samples, 0.25%)</title><rect x="56.8" y="755.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="59.8" y="766.0"></text>
</g>
<g>
<title>sock_poll (11 samples, 0.23%)</title><rect x="57.1" y="739.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="60.1" y="750.0"></text>
</g>
<g>
<title>tcp_poll (7 samples, 0.14%)</title><rect x="57.5" y="723.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="60.5" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.04%)</title><rect x="59.2" y="723.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="62.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (119 samples, 2.46%)</title><rect x="60.7" y="931.0" width="29.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.7" y="942.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (117 samples, 2.42%)</title><rect x="61.2" y="915.0" width="28.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.2" y="926.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (71 samples, 1.47%)</title><rect x="61.2" y="899.0" width="17.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.2" y="910.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (2 samples, 0.04%)</title><rect x="61.4" y="883.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="64.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (32 samples, 0.66%)</title><rect x="62.2" y="883.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (32 samples, 0.66%)</title><rect x="62.2" y="867.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.2" y="878.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (27 samples, 0.56%)</title><rect x="62.2" y="851.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.12%)</title><rect x="62.2" y="835.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.12%)</title><rect x="62.2" y="819.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.10%)</title><rect x="62.4" y="803.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.08%)</title><rect x="62.7" y="787.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.08%)</title><rect x="62.7" y="771.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.08%)</title><rect x="62.7" y="755.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="65.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (21 samples, 0.43%)</title><rect x="63.6" y="835.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (20 samples, 0.41%)</title><rect x="63.9" y="819.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.41%)</title><rect x="63.9" y="803.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (20 samples, 0.41%)</title><rect x="63.9" y="787.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.06%)</title><rect x="64.1" y="771.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.06%)</title><rect x="64.1" y="755.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.06%)</title><rect x="64.1" y="739.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.10%)</title><rect x="64.9" y="771.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.10%)</title><rect x="64.9" y="755.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.10%)</title><rect x="64.9" y="739.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.10%)</title><rect x="64.9" y="723.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.10%)</title><rect x="64.9" y="707.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title><rect x="65.6" y="691.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.23%)</title><rect x="66.1" y="771.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.23%)</title><rect x="66.1" y="755.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.23%)</title><rect x="66.1" y="739.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.14%)</title><rect x="67.0" y="723.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="70.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.14%)</title><rect x="67.0" y="707.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.0" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.12%)</title><rect x="67.3" y="691.0" width="1.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="70.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.10%)</title><rect x="67.5" y="675.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="70.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.10%)</title><rect x="67.5" y="659.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="70.5" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.10%)</title><rect x="67.5" y="643.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="70.5" y="654.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.08%)</title><rect x="67.5" y="627.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="70.5" y="638.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.08%)</title><rect x="67.5" y="611.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="70.5" y="622.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.06%)</title><rect x="67.8" y="595.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="70.8" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.06%)</title><rect x="67.8" y="579.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="70.8" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="67.8" y="563.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="70.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.10%)</title><rect x="68.8" y="851.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.8" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.10%)</title><rect x="68.8" y="835.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.08%)</title><rect x="68.8" y="819.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (14 samples, 0.29%)</title><rect x="70.0" y="883.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.10%)</title><rect x="70.0" y="867.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.10%)</title><rect x="70.0" y="851.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.10%)</title><rect x="70.0" y="835.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.10%)</title><rect x="70.0" y="819.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="70.7" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.17%)</title><rect x="71.2" y="867.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.17%)</title><rect x="71.2" y="851.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.43%)</title><rect x="73.4" y="883.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.4" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.10%)</title><rect x="77.3" y="867.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (46 samples, 0.95%)</title><rect x="78.5" y="899.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (44 samples, 0.91%)</title><rect x="78.5" y="883.0" width="10.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.5" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.08%)</title><rect x="78.8" y="867.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="81.8" y="878.0"></text>
</g>
<g>
<title>__recv (39 samples, 0.81%)</title><rect x="79.7" y="867.0" width="9.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="82.7" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.56%)</title><rect x="82.7" y="851.0" width="6.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="85.7" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.54%)</title><rect x="82.9" y="835.0" width="6.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="85.9" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (18 samples, 0.37%)</title><rect x="84.8" y="819.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="87.8" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (18 samples, 0.37%)</title><rect x="84.8" y="803.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="87.8" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (17 samples, 0.35%)</title><rect x="84.8" y="787.0" width="4.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="87.8" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (15 samples, 0.31%)</title><rect x="85.1" y="771.0" width="3.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="88.1" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (15 samples, 0.31%)</title><rect x="85.1" y="755.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="88.1" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.06%)</title><rect x="86.1" y="739.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="89.1" y="750.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.06%)</title><rect x="86.1" y="723.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="89.1" y="734.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.04%)</title><rect x="86.1" y="707.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="89.1" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.10%)</title><rect x="86.8" y="739.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="89.8" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.10%)</title><rect x="86.8" y="723.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="89.8" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.06%)</title><rect x="87.3" y="707.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="90.3" y="718.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.04%)</title><rect x="87.3" y="691.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="90.3" y="702.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.04%)</title><rect x="87.3" y="675.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="90.3" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.04%)</title><rect x="89.2" y="883.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.2" y="894.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="89.7" y="931.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="92.7" y="942.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="89.7" y="915.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="92.7" y="926.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="89.7" y="899.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="92.7" y="910.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=13374] (186 samples, 3.84%)</title><rect x="90.2" y="963.0" width="45.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="93.2" y="974.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (184 samples, 3.80%)</title><rect x="90.7" y="947.0" width="44.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.7" y="958.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (59 samples, 1.22%)</title><rect x="91.4" y="931.0" width="14.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (59 samples, 1.22%)</title><rect x="91.4" y="915.0" width="14.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 1.20%)</title><rect x="91.7" y="899.0" width="14.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="94.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="91.7" y="883.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="94.7" y="894.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="91.7" y="867.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="94.7" y="878.0"></text>
</g>
<g>
<title>epoll_wait (54 samples, 1.12%)</title><rect x="92.6" y="883.0" width="13.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="95.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.70%)</title><rect x="97.5" y="867.0" width="8.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="100.5" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.70%)</title><rect x="97.5" y="851.0" width="8.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="100.5" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (31 samples, 0.64%)</title><rect x="98.3" y="835.0" width="7.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="101.3" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (31 samples, 0.64%)</title><rect x="98.3" y="819.0" width="7.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="101.3" y="830.0"></text>
</g>
<g>
<title>ep_poll (28 samples, 0.58%)</title><rect x="98.5" y="803.0" width="6.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="101.5" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (23 samples, 0.48%)</title><rect x="99.7" y="787.0" width="5.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="102.7" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (17 samples, 0.35%)</title><rect x="101.2" y="771.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="104.2" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (14 samples, 0.29%)</title><rect x="101.9" y="755.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="104.9" y="766.0"></text>
</g>
<g>
<title>sock_poll (12 samples, 0.25%)</title><rect x="102.4" y="739.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="105.4" y="750.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.06%)</title><rect x="104.4" y="723.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="107.4" y="734.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="105.3" y="803.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="108.3" y="814.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.04%)</title><rect x="105.3" y="787.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="108.3" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (121 samples, 2.50%)</title><rect x="105.8" y="931.0" width="29.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.8" y="942.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (119 samples, 2.46%)</title><rect x="106.3" y="915.0" width="29.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.3" y="926.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (81 samples, 1.67%)</title><rect x="106.3" y="899.0" width="19.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="109.3" y="910.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="107.5" y="883.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="110.5" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (20 samples, 0.41%)</title><rect x="108.0" y="883.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (20 samples, 0.41%)</title><rect x="108.0" y="867.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="111.0" y="878.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (16 samples, 0.33%)</title><rect x="108.0" y="851.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.06%)</title><rect x="108.0" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.06%)</title><rect x="108.0" y="819.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (13 samples, 0.27%)</title><rect x="108.7" y="835.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.7" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (12 samples, 0.25%)</title><rect x="109.0" y="819.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.25%)</title><rect x="109.0" y="803.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (12 samples, 0.25%)</title><rect x="109.0" y="787.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.14%)</title><rect x="110.0" y="771.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.14%)</title><rect x="110.0" y="755.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.14%)</title><rect x="110.0" y="739.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.14%)</title><rect x="110.0" y="723.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.14%)</title><rect x="110.0" y="707.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.0" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="110.0" y="691.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="113.0" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.10%)</title><rect x="110.4" y="691.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="113.4" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="110.7" y="675.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="113.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="110.9" y="659.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="113.9" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.06%)</title><rect x="110.9" y="643.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="113.9" y="654.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.06%)</title><rect x="110.9" y="627.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="113.9" y="638.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.06%)</title><rect x="110.9" y="611.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="113.9" y="622.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.06%)</title><rect x="110.9" y="595.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="113.9" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.06%)</title><rect x="110.9" y="579.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="113.9" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="110.9" y="563.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="113.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.08%)</title><rect x="111.9" y="851.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.9" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.08%)</title><rect x="111.9" y="835.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.06%)</title><rect x="111.9" y="819.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.9" y="830.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="112.2" y="803.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="115.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (18 samples, 0.37%)</title><rect x="112.9" y="883.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.9" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.06%)</title><rect x="112.9" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="113.1" y="851.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="113.1" y="835.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.1" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="113.1" y="819.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.29%)</title><rect x="113.6" y="867.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.29%)</title><rect x="113.6" y="851.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 0.72%)</title><rect x="117.5" y="883.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="120.5" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.14%)</title><rect x="124.3" y="867.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="127.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (38 samples, 0.79%)</title><rect x="126.0" y="899.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (33 samples, 0.68%)</title><rect x="126.5" y="883.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="129.5" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.08%)</title><rect x="126.5" y="867.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="129.5" y="878.0"></text>
</g>
<g>
<title>__recv (28 samples, 0.58%)</title><rect x="127.5" y="867.0" width="6.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="130.5" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.43%)</title><rect x="129.2" y="851.0" width="5.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="132.2" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.43%)</title><rect x="129.2" y="835.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="132.2" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (19 samples, 0.39%)</title><rect x="129.7" y="819.0" width="4.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="132.7" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (19 samples, 0.39%)</title><rect x="129.7" y="803.0" width="4.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="132.7" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (17 samples, 0.35%)</title><rect x="129.7" y="787.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="132.7" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (16 samples, 0.33%)</title><rect x="129.7" y="771.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="132.7" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (16 samples, 0.33%)</title><rect x="129.7" y="755.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="132.7" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.10%)</title><rect x="130.4" y="739.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="133.4" y="750.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.10%)</title><rect x="130.4" y="723.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="133.4" y="734.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.06%)</title><rect x="130.7" y="707.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="133.7" y="718.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.04%)</title><rect x="130.9" y="691.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="133.9" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.08%)</title><rect x="132.1" y="739.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="135.1" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.08%)</title><rect x="132.1" y="723.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="135.1" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.04%)</title><rect x="133.1" y="739.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="136.1" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="133.9" y="787.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="136.9" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (3 samples, 0.06%)</title><rect x="134.6" y="883.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.6" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=13375] (187 samples, 3.86%)</title><rect x="135.6" y="963.0" width="45.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="138.6" y="974.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (186 samples, 3.84%)</title><rect x="135.8" y="947.0" width="45.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.8" y="958.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (57 samples, 1.18%)</title><rect x="136.5" y="931.0" width="13.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (57 samples, 1.18%)</title><rect x="136.5" y="915.0" width="13.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.5" y="926.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.04%)</title><rect x="136.8" y="899.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="139.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 1.12%)</title><rect x="137.3" y="899.0" width="13.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="140.3" y="910.0"></text>
</g>
<g>
<title>epoll_wait (53 samples, 1.10%)</title><rect x="137.5" y="883.0" width="12.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="140.5" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.72%)</title><rect x="141.9" y="867.0" width="8.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="144.9" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 0.72%)</title><rect x="141.9" y="851.0" width="8.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="144.9" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (30 samples, 0.62%)</title><rect x="143.1" y="835.0" width="7.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="146.1" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (30 samples, 0.62%)</title><rect x="143.1" y="819.0" width="7.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="146.1" y="830.0"></text>
</g>
<g>
<title>ep_poll (29 samples, 0.60%)</title><rect x="143.4" y="803.0" width="7.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="146.4" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (29 samples, 0.60%)</title><rect x="143.4" y="787.0" width="7.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="146.4" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (23 samples, 0.48%)</title><rect x="144.8" y="771.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="147.8" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (15 samples, 0.31%)</title><rect x="146.8" y="755.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="149.8" y="766.0"></text>
</g>
<g>
<title>sock_poll (15 samples, 0.31%)</title><rect x="146.8" y="739.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="149.8" y="750.0"></text>
</g>
<g>
<title>tcp_poll (7 samples, 0.14%)</title><rect x="147.7" y="723.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="150.7" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.08%)</title><rect x="149.5" y="723.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="152.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (126 samples, 2.60%)</title><rect x="150.4" y="931.0" width="30.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.4" y="942.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (122 samples, 2.52%)</title><rect x="151.4" y="915.0" width="29.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.4" y="926.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (72 samples, 1.49%)</title><rect x="151.4" y="899.0" width="17.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.4" y="910.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (3 samples, 0.06%)</title><rect x="152.6" y="883.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.6" y="894.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="153.4" y="883.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="156.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (28 samples, 0.58%)</title><rect x="153.8" y="883.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.8" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (28 samples, 0.58%)</title><rect x="153.8" y="867.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.8" y="878.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (24 samples, 0.50%)</title><rect x="153.8" y="851.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.14%)</title><rect x="153.8" y="835.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.14%)</title><rect x="153.8" y="819.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="154.3" y="803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="154.3" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.06%)</title><rect x="154.8" y="803.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="157.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="154.8" y="787.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="154.8" y="771.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.06%)</title><rect x="154.8" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (17 samples, 0.35%)</title><rect x="155.5" y="835.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.5" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (17 samples, 0.35%)</title><rect x="155.5" y="819.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.35%)</title><rect x="155.5" y="803.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (17 samples, 0.35%)</title><rect x="155.5" y="787.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.04%)</title><rect x="155.5" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.04%)</title><rect x="155.5" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.04%)</title><rect x="155.5" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="158.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.08%)</title><rect x="156.0" y="771.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.08%)</title><rect x="156.0" y="755.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="159.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.08%)</title><rect x="156.0" y="739.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.08%)</title><rect x="156.0" y="723.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="159.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.08%)</title><rect x="156.0" y="707.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="159.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.06%)</title><rect x="156.3" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="156.5" y="675.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="159.5" y="686.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="156.5" y="659.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="159.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.21%)</title><rect x="157.0" y="771.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="160.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.21%)</title><rect x="157.0" y="755.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.21%)</title><rect x="157.0" y="739.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="160.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.17%)</title><rect x="157.5" y="723.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.17%)</title><rect x="157.5" y="707.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.5" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.06%)</title><rect x="157.5" y="691.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="160.5" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.10%)</title><rect x="158.2" y="691.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="161.2" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="158.7" y="675.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="161.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="158.7" y="659.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="161.7" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.06%)</title><rect x="158.7" y="643.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="161.7" y="654.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.06%)</title><rect x="158.7" y="627.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="161.7" y="638.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.06%)</title><rect x="158.7" y="611.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="161.7" y="622.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.06%)</title><rect x="158.7" y="595.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="161.7" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.06%)</title><rect x="158.7" y="579.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="161.7" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="158.7" y="563.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="161.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.08%)</title><rect x="159.7" y="851.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.7" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.08%)</title><rect x="159.7" y="835.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.7" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.06%)</title><rect x="159.9" y="819.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.06%)</title><rect x="159.9" y="803.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.06%)</title><rect x="159.9" y="787.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.17%)</title><rect x="160.7" y="883.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.7" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.14%)</title><rect x="160.9" y="867.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="163.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.14%)</title><rect x="160.9" y="851.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 0.52%)</title><rect x="162.9" y="883.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.9" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.06%)</title><rect x="168.2" y="867.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (50 samples, 1.03%)</title><rect x="169.0" y="899.0" width="12.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (50 samples, 1.03%)</title><rect x="169.0" y="883.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.0" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.10%)</title><rect x="169.0" y="867.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="172.0" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="169.0" y="851.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="172.0" y="862.0"></text>
</g>
<g>
<title>__recv (42 samples, 0.87%)</title><rect x="170.4" y="867.0" width="10.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="173.4" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.62%)</title><rect x="173.3" y="851.0" width="7.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="176.3" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.62%)</title><rect x="173.3" y="835.0" width="7.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="176.3" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (24 samples, 0.50%)</title><rect x="174.8" y="819.0" width="5.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="177.8" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (24 samples, 0.50%)</title><rect x="174.8" y="803.0" width="5.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="177.8" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (18 samples, 0.37%)</title><rect x="175.1" y="787.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="178.1" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (17 samples, 0.35%)</title><rect x="175.3" y="771.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="178.3" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (16 samples, 0.33%)</title><rect x="175.5" y="755.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="178.5" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.08%)</title><rect x="176.5" y="739.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="179.5" y="750.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.06%)</title><rect x="176.5" y="723.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="179.5" y="734.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.06%)</title><rect x="176.5" y="707.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="179.5" y="718.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.06%)</title><rect x="176.5" y="691.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="179.5" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.12%)</title><rect x="178.0" y="739.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="181.0" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.12%)</title><rect x="178.0" y="723.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="181.0" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.04%)</title><rect x="179.0" y="707.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="182.0" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.10%)</title><rect x="179.4" y="787.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="182.4" y="798.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.08%)</title><rect x="179.4" y="771.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="182.4" y="782.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.08%)</title><rect x="179.4" y="755.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="182.4" y="766.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.06%)</title><rect x="179.7" y="739.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="182.7" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.04%)</title><rect x="180.7" y="867.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="183.7" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=13376] (208 samples, 4.30%)</title><rect x="181.1" y="963.0" width="50.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="184.1" y="974.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (208 samples, 4.30%)</title><rect x="181.1" y="947.0" width="50.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="184.1" y="958.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (60 samples, 1.24%)</title><rect x="181.4" y="931.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="184.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (60 samples, 1.24%)</title><rect x="181.4" y="915.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 1.22%)</title><rect x="181.6" y="899.0" width="14.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="184.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="181.6" y="883.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="184.6" y="894.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.06%)</title><rect x="181.6" y="867.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="184.6" y="878.0"></text>
</g>
<g>
<title>epoll_wait (56 samples, 1.16%)</title><rect x="182.4" y="883.0" width="13.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="185.4" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.91%)</title><rect x="185.3" y="867.0" width="10.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="188.3" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 0.91%)</title><rect x="185.3" y="851.0" width="10.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="188.3" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (40 samples, 0.83%)</title><rect x="186.3" y="835.0" width="9.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="189.3" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (40 samples, 0.83%)</title><rect x="186.3" y="819.0" width="9.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="189.3" y="830.0"></text>
</g>
<g>
<title>ep_poll (37 samples, 0.76%)</title><rect x="187.0" y="803.0" width="9.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="190.0" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (30 samples, 0.62%)</title><rect x="188.2" y="787.0" width="7.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="191.2" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (19 samples, 0.39%)</title><rect x="190.2" y="771.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="193.2" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (13 samples, 0.27%)</title><rect x="191.1" y="755.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="194.1" y="766.0"></text>
</g>
<g>
<title>sock_poll (10 samples, 0.21%)</title><rect x="191.9" y="739.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="194.9" y="750.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.10%)</title><rect x="192.6" y="723.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="195.6" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.04%)</title><rect x="193.8" y="723.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="196.8" y="734.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.04%)</title><rect x="194.3" y="755.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="197.3" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.04%)</title><rect x="195.5" y="787.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="198.5" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.04%)</title><rect x="195.5" y="771.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="198.5" y="782.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="195.5" y="755.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="198.5" y="766.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.04%)</title><rect x="195.5" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="198.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (145 samples, 3.00%)</title><rect x="196.0" y="931.0" width="35.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.0" y="942.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (145 samples, 3.00%)</title><rect x="196.0" y="915.0" width="35.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="199.0" y="926.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (83 samples, 1.71%)</title><rect x="196.0" y="899.0" width="20.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.0" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (29 samples, 0.60%)</title><rect x="198.0" y="883.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (29 samples, 0.60%)</title><rect x="198.0" y="867.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="201.0" y="878.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (23 samples, 0.48%)</title><rect x="198.0" y="851.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.10%)</title><rect x="198.0" y="835.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="201.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.10%)</title><rect x="198.0" y="819.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.04%)</title><rect x="198.7" y="803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="198.7" y="787.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="201.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="198.7" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="201.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="198.7" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="201.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (18 samples, 0.37%)</title><rect x="199.2" y="835.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.2" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (17 samples, 0.35%)</title><rect x="199.4" y="819.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.35%)</title><rect x="199.4" y="803.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (17 samples, 0.35%)</title><rect x="199.4" y="787.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.04%)</title><rect x="199.4" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="202.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.04%)</title><rect x="199.4" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.04%)</title><rect x="199.4" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="202.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.04%)</title><rect x="199.4" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.04%)</title><rect x="199.4" y="707.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="202.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.10%)</title><rect x="199.9" y="771.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="202.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.10%)</title><rect x="199.9" y="755.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.10%)</title><rect x="199.9" y="739.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="202.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.10%)</title><rect x="199.9" y="723.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.10%)</title><rect x="199.9" y="707.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="202.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.06%)</title><rect x="200.4" y="691.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="203.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="200.7" y="675.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="203.7" y="686.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="200.7" y="659.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="203.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.21%)</title><rect x="201.1" y="771.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="204.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.21%)</title><rect x="201.1" y="755.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.21%)</title><rect x="201.1" y="739.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.17%)</title><rect x="201.4" y="723.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.17%)</title><rect x="201.4" y="707.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.4" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="201.6" y="691.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="204.6" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.10%)</title><rect x="202.1" y="691.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="205.1" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="202.4" y="675.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="205.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.08%)</title><rect x="202.4" y="659.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="205.4" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.08%)</title><rect x="202.4" y="643.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="205.4" y="654.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.08%)</title><rect x="202.4" y="627.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="205.4" y="638.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.08%)</title><rect x="202.4" y="611.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="205.4" y="622.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.08%)</title><rect x="202.4" y="595.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="205.4" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.08%)</title><rect x="202.4" y="579.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="205.4" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.08%)</title><rect x="202.4" y="563.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="205.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.10%)</title><rect x="203.6" y="851.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.6" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.10%)</title><rect x="203.6" y="835.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.06%)</title><rect x="203.6" y="819.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="204.3" y="819.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="207.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="204.3" y="803.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="207.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="204.3" y="787.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13 samples, 0.27%)</title><rect x="205.0" y="883.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="208.0" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.23%)</title><rect x="205.3" y="867.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.21%)</title><rect x="205.5" y="851.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="207.5" y="835.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="207.5" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.04%)</title><rect x="207.5" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.5" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="207.5" y="787.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="210.5" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="207.5" y="771.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="210.5" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="207.5" y="755.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="210.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 0.68%)</title><rect x="208.2" y="883.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="211.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (61 samples, 1.26%)</title><rect x="216.5" y="899.0" width="14.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (58 samples, 1.20%)</title><rect x="216.7" y="883.0" width="14.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.7" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.08%)</title><rect x="217.2" y="867.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="220.2" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.04%)</title><rect x="217.7" y="851.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="220.7" y="862.0"></text>
</g>
<g>
<title>__recv (52 samples, 1.07%)</title><rect x="218.2" y="867.0" width="12.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="221.2" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.81%)</title><rect x="221.4" y="851.0" width="9.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="224.4" y="862.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.04%)</title><rect x="221.4" y="835.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="224.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.76%)</title><rect x="221.9" y="835.0" width="9.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="224.9" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (33 samples, 0.68%)</title><rect x="222.8" y="819.0" width="8.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="225.8" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (33 samples, 0.68%)</title><rect x="222.8" y="803.0" width="8.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="225.8" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (29 samples, 0.60%)</title><rect x="222.8" y="787.0" width="7.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="225.8" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (26 samples, 0.54%)</title><rect x="222.8" y="771.0" width="6.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="225.8" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (25 samples, 0.52%)</title><rect x="223.1" y="755.0" width="6.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="226.1" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.10%)</title><rect x="223.6" y="739.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="226.6" y="750.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.08%)</title><rect x="223.8" y="723.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="226.8" y="734.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.08%)</title><rect x="223.8" y="707.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="226.8" y="718.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.06%)</title><rect x="224.1" y="691.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="227.1" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.06%)</title><rect x="224.8" y="739.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="227.8" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="225.0" y="723.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="228.0" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.23%)</title><rect x="225.5" y="739.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="228.5" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (9 samples, 0.19%)</title><rect x="225.5" y="723.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="228.5" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.10%)</title><rect x="226.5" y="707.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="229.5" y="718.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.06%)</title><rect x="226.7" y="691.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="229.7" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.06%)</title><rect x="228.4" y="739.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="231.4" y="750.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="228.4" y="723.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="231.4" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.06%)</title><rect x="229.2" y="771.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="232.2" y="782.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (2 samples, 0.04%)</title><rect x="229.4" y="755.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="232.4" y="766.0"></text>
</g>
<g>
<title>sock_has_perm (2 samples, 0.04%)</title><rect x="229.4" y="739.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="232.4" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.08%)</title><rect x="229.9" y="787.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="232.9" y="798.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="229.9" y="771.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="232.9" y="782.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="229.9" y="755.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="232.9" y="766.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.06%)</title><rect x="229.9" y="739.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="232.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.04%)</title><rect x="230.9" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.9" y="894.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="231.4" y="931.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="234.4" y="942.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="231.4" y="915.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="234.4" y="926.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=13377] (188 samples, 3.88%)</title><rect x="231.9" y="963.0" width="45.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="234.9" y="974.0">[NIO..</text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.06%)</title><rect x="231.9" y="947.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="234.9" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.06%)</title><rect x="231.9" y="931.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="234.9" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.04%)</title><rect x="231.9" y="915.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="234.9" y="926.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.04%)</title><rect x="231.9" y="899.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="234.9" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (184 samples, 3.80%)</title><rect x="232.8" y="947.0" width="44.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.8" y="958.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (54 samples, 1.12%)</title><rect x="233.1" y="931.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.1" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (53 samples, 1.10%)</title><rect x="233.3" y="915.0" width="12.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 1.07%)</title><rect x="233.3" y="899.0" width="12.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="236.3" y="910.0"></text>
</g>
<g>
<title>epoll_wait (50 samples, 1.03%)</title><rect x="233.8" y="883.0" width="12.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="236.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.83%)</title><rect x="236.2" y="867.0" width="9.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="239.2" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.83%)</title><rect x="236.2" y="851.0" width="9.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="239.2" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (35 samples, 0.72%)</title><rect x="237.5" y="835.0" width="8.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="240.5" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (35 samples, 0.72%)</title><rect x="237.5" y="819.0" width="8.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="240.5" y="830.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="237.7" y="803.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="240.7" y="814.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="237.7" y="787.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="240.7" y="798.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="237.7" y="771.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="240.7" y="782.0"></text>
</g>
<g>
<title>ep_poll (30 samples, 0.62%)</title><rect x="238.2" y="803.0" width="7.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="241.2" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (24 samples, 0.50%)</title><rect x="238.7" y="787.0" width="5.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="241.7" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (19 samples, 0.39%)</title><rect x="239.9" y="771.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="242.9" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (12 samples, 0.25%)</title><rect x="240.9" y="755.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="243.9" y="766.0"></text>
</g>
<g>
<title>sock_poll (11 samples, 0.23%)</title><rect x="241.1" y="739.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="244.1" y="750.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.08%)</title><rect x="242.1" y="723.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="245.1" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.06%)</title><rect x="243.1" y="723.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="246.1" y="734.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.06%)</title><rect x="243.8" y="755.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="246.8" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.06%)</title><rect x="244.8" y="787.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="247.8" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.06%)</title><rect x="244.8" y="771.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="247.8" y="782.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.06%)</title><rect x="244.8" y="755.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="247.8" y="766.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="245.5" y="803.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="248.5" y="814.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.04%)</title><rect x="245.5" y="787.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="248.5" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (129 samples, 2.67%)</title><rect x="246.2" y="931.0" width="31.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.2" y="942.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (125 samples, 2.58%)</title><rect x="247.2" y="915.0" width="30.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="250.2" y="926.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (82 samples, 1.69%)</title><rect x="247.2" y="899.0" width="20.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.2" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="248.7" y="883.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="251.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (30 samples, 0.62%)</title><rect x="249.2" y="883.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (30 samples, 0.62%)</title><rect x="249.2" y="867.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.2" y="878.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (25 samples, 0.52%)</title><rect x="249.2" y="851.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (10 samples, 0.21%)</title><rect x="249.2" y="835.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.21%)</title><rect x="249.2" y="819.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="252.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="249.4" y="803.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="249.4" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="252.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (7 samples, 0.14%)</title><rect x="249.9" y="803.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.14%)</title><rect x="249.9" y="787.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="252.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.14%)</title><rect x="249.9" y="771.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="252.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (7 samples, 0.14%)</title><rect x="249.9" y="755.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="252.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (15 samples, 0.31%)</title><rect x="251.6" y="835.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="254.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (15 samples, 0.31%)</title><rect x="251.6" y="819.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="254.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.31%)</title><rect x="251.6" y="803.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (15 samples, 0.31%)</title><rect x="251.6" y="787.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="254.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.12%)</title><rect x="252.1" y="771.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.12%)</title><rect x="252.1" y="755.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.12%)</title><rect x="252.1" y="739.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.12%)</title><rect x="252.1" y="723.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.12%)</title><rect x="252.1" y="707.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="255.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.06%)</title><rect x="252.8" y="691.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="253.1" y="675.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="256.1" y="686.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="253.1" y="659.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="256.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.12%)</title><rect x="253.6" y="771.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.12%)</title><rect x="253.6" y="755.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.12%)</title><rect x="253.6" y="739.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.12%)</title><rect x="253.6" y="723.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.12%)</title><rect x="253.6" y="707.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.6" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="253.6" y="691.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="256.6" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.08%)</title><rect x="254.0" y="691.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="257.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.08%)</title><rect x="255.3" y="851.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.3" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.08%)</title><rect x="255.3" y="835.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.3" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="255.3" y="819.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.3" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="255.8" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="255.8" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="258.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="255.8" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="258.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (14 samples, 0.29%)</title><rect x="256.5" y="883.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="259.5" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.06%)</title><rect x="256.5" y="867.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="256.5" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="256.5" y="835.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="259.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.06%)</title><rect x="256.5" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.5" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="256.7" y="803.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="259.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.23%)</title><rect x="257.2" y="867.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.21%)</title><rect x="257.5" y="851.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="260.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 0.62%)</title><rect x="259.9" y="883.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.9" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="266.7" y="867.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="269.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (42 samples, 0.87%)</title><rect x="267.5" y="899.0" width="10.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="270.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (39 samples, 0.81%)</title><rect x="267.5" y="883.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="270.5" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.14%)</title><rect x="267.5" y="867.0" width="1.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="270.5" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="267.7" y="851.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="270.7" y="862.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="268.2" y="851.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="271.2" y="862.0"></text>
</g>
<g>
<title>__recv (30 samples, 0.62%)</title><rect x="269.2" y="867.0" width="7.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="272.2" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.45%)</title><rect x="271.1" y="851.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="274.1" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.43%)</title><rect x="271.4" y="835.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="274.4" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (15 samples, 0.31%)</title><rect x="272.8" y="819.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="275.8" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (15 samples, 0.31%)</title><rect x="272.8" y="803.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="275.8" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (12 samples, 0.25%)</title><rect x="272.8" y="787.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="275.8" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (10 samples, 0.21%)</title><rect x="272.8" y="771.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="275.8" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (10 samples, 0.21%)</title><rect x="272.8" y="755.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="275.8" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="272.8" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="275.8" y="750.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="272.8" y="723.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="275.8" y="734.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="272.8" y="707.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="275.8" y="718.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.04%)</title><rect x="272.8" y="691.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="275.8" y="702.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="273.3" y="739.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="276.3" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.10%)</title><rect x="273.8" y="739.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="276.8" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.10%)</title><rect x="273.8" y="723.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="276.8" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.08%)</title><rect x="274.0" y="707.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="277.0" y="718.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.06%)</title><rect x="274.3" y="691.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="277.3" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.04%)</title><rect x="275.3" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="278.3" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.06%)</title><rect x="275.7" y="787.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="278.7" y="798.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="275.7" y="771.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="278.7" y="782.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="275.7" y="755.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="278.7" y="766.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="276.0" y="739.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="279.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (3 samples, 0.06%)</title><rect x="277.0" y="883.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.0" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=13378] (188 samples, 3.88%)</title><rect x="277.7" y="963.0" width="45.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="280.7" y="974.0">[NIO..</text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.04%)</title><rect x="277.7" y="947.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="280.7" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="277.7" y="931.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="280.7" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.04%)</title><rect x="277.7" y="915.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="280.7" y="926.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.04%)</title><rect x="277.7" y="899.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="280.7" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (186 samples, 3.84%)</title><rect x="278.2" y="947.0" width="45.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.2" y="958.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (65 samples, 1.34%)</title><rect x="278.7" y="931.0" width="15.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (65 samples, 1.34%)</title><rect x="278.7" y="915.0" width="15.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 1.30%)</title><rect x="278.9" y="899.0" width="15.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="281.9" y="910.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.08%)</title><rect x="278.9" y="883.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="281.9" y="894.0"></text>
</g>
<g>
<title>epoll_wait (57 samples, 1.18%)</title><rect x="280.1" y="883.0" width="13.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="283.1" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.85%)</title><rect x="284.0" y="867.0" width="10.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="287.0" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.85%)</title><rect x="284.0" y="851.0" width="10.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="287.0" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (38 samples, 0.79%)</title><rect x="284.5" y="835.0" width="9.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="287.5" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (38 samples, 0.79%)</title><rect x="284.5" y="819.0" width="9.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="287.5" y="830.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="284.8" y="803.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="287.8" y="814.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="284.8" y="787.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="287.8" y="798.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="284.8" y="771.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="287.8" y="782.0"></text>
</g>
<g>
<title>ep_poll (34 samples, 0.70%)</title><rect x="285.5" y="803.0" width="8.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="288.5" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (27 samples, 0.56%)</title><rect x="286.5" y="787.0" width="6.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="289.5" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (20 samples, 0.41%)</title><rect x="288.2" y="771.0" width="4.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="291.2" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (18 samples, 0.37%)</title><rect x="288.7" y="755.0" width="4.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="291.7" y="766.0"></text>
</g>
<g>
<title>sock_poll (17 samples, 0.35%)</title><rect x="288.9" y="739.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="291.9" y="750.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.10%)</title><rect x="291.1" y="723.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="294.1" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.06%)</title><rect x="292.3" y="723.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="295.3" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.06%)</title><rect x="293.1" y="787.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="296.1" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.06%)</title><rect x="293.1" y="771.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="296.1" y="782.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.06%)</title><rect x="293.1" y="755.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="296.1" y="766.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.06%)</title><rect x="293.1" y="739.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="296.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (116 samples, 2.40%)</title><rect x="294.5" y="931.0" width="28.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.5" y="942.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (115 samples, 2.38%)</title><rect x="294.8" y="915.0" width="28.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="297.8" y="926.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (68 samples, 1.40%)</title><rect x="294.8" y="899.0" width="16.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.8" y="910.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="295.2" y="883.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="298.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (32 samples, 0.66%)</title><rect x="295.7" y="883.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (32 samples, 0.66%)</title><rect x="295.7" y="867.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.7" y="878.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (26 samples, 0.54%)</title><rect x="295.7" y="851.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="298.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (11 samples, 0.23%)</title><rect x="295.7" y="835.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.23%)</title><rect x="295.7" y="819.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (10 samples, 0.21%)</title><rect x="296.0" y="803.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="299.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.17%)</title><rect x="296.5" y="787.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="299.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.17%)</title><rect x="296.5" y="771.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="299.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.17%)</title><rect x="296.5" y="755.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="299.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (15 samples, 0.31%)</title><rect x="298.4" y="835.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="301.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (15 samples, 0.31%)</title><rect x="298.4" y="819.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="301.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.31%)</title><rect x="298.4" y="803.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="301.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (15 samples, 0.31%)</title><rect x="298.4" y="787.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.06%)</title><rect x="298.7" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="301.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.06%)</title><rect x="298.7" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.06%)</title><rect x="298.7" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.06%)</title><rect x="298.7" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="301.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.06%)</title><rect x="298.7" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title><rect x="298.9" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="298.9" y="675.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="301.9" y="686.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="298.9" y="659.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="301.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.23%)</title><rect x="299.4" y="771.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="302.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.23%)</title><rect x="299.4" y="755.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.23%)</title><rect x="299.4" y="739.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="302.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.14%)</title><rect x="300.4" y="723.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="303.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.14%)</title><rect x="300.4" y="707.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.4" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.08%)</title><rect x="300.4" y="691.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="303.4" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.06%)</title><rect x="301.3" y="691.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="304.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="301.6" y="675.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="304.6" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="301.6" y="659.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="304.6" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="301.6" y="643.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="304.6" y="654.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="301.6" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="304.6" y="638.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="301.6" y="611.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="304.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.10%)</title><rect x="302.1" y="851.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.1" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.10%)</title><rect x="302.1" y="835.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="305.1" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="302.1" y="819.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.06%)</title><rect x="302.6" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.06%)</title><rect x="302.6" y="803.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="305.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.06%)</title><rect x="302.6" y="787.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="305.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.14%)</title><rect x="303.5" y="883.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.5" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.06%)</title><rect x="303.5" y="867.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="306.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="303.8" y="851.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="303.8" y="835.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.8" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="303.8" y="819.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.08%)</title><rect x="304.3" y="867.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="307.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.08%)</title><rect x="304.3" y="851.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="307.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 0.52%)</title><rect x="305.2" y="883.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.2" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.08%)</title><rect x="310.4" y="867.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="313.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (47 samples, 0.97%)</title><rect x="311.3" y="899.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="314.3" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (43 samples, 0.89%)</title><rect x="312.1" y="883.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="315.1" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.14%)</title><rect x="312.1" y="867.0" width="1.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="315.1" y="878.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="312.6" y="851.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="315.6" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.06%)</title><rect x="313.0" y="851.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="316.0" y="862.0"></text>
</g>
<g>
<title>__recv (36 samples, 0.74%)</title><rect x="313.8" y="867.0" width="8.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="316.8" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.50%)</title><rect x="316.7" y="851.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="319.7" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.50%)</title><rect x="316.7" y="835.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="319.7" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (21 samples, 0.43%)</title><rect x="317.4" y="819.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="320.4" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (20 samples, 0.41%)</title><rect x="317.4" y="803.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="320.4" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (17 samples, 0.35%)</title><rect x="317.7" y="787.0" width="4.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="320.7" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (15 samples, 0.31%)</title><rect x="317.7" y="771.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="320.7" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (15 samples, 0.31%)</title><rect x="317.7" y="755.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="320.7" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.08%)</title><rect x="318.4" y="739.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="321.4" y="750.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.06%)</title><rect x="318.7" y="723.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="321.7" y="734.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.06%)</title><rect x="318.7" y="707.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="321.7" y="718.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.06%)</title><rect x="318.7" y="691.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="321.7" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.10%)</title><rect x="319.9" y="739.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="322.9" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.10%)</title><rect x="319.9" y="723.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="322.9" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.04%)</title><rect x="320.6" y="707.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="323.6" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.04%)</title><rect x="321.3" y="771.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="324.3" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.04%)</title><rect x="321.3" y="755.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="324.3" y="766.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.04%)</title><rect x="321.3" y="739.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="324.3" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="321.3" y="723.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="324.3" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="321.8" y="787.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="324.8" y="798.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="321.8" y="771.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="324.8" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.06%)</title><rect x="322.8" y="931.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="325.8" y="942.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="323.0" y="915.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="326.0" y="926.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="323.0" y="899.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="326.0" y="910.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=13379] (187 samples, 3.86%)</title><rect x="323.5" y="963.0" width="45.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="326.5" y="974.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (187 samples, 3.86%)</title><rect x="323.5" y="947.0" width="45.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="326.5" y="958.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (57 samples, 1.18%)</title><rect x="324.0" y="931.0" width="13.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.0" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (56 samples, 1.16%)</title><rect x="324.3" y="915.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="327.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.05%)</title><rect x="325.2" y="899.0" width="12.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="328.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="325.2" y="883.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="328.2" y="894.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="325.2" y="867.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="328.2" y="878.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="325.7" y="883.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="328.7" y="894.0"></text>
</g>
<g>
<title>epoll_wait (46 samples, 0.95%)</title><rect x="326.5" y="883.0" width="11.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="329.5" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.70%)</title><rect x="329.4" y="867.0" width="8.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="332.4" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.68%)</title><rect x="329.6" y="851.0" width="8.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="332.6" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (31 samples, 0.64%)</title><rect x="329.9" y="835.0" width="7.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="332.9" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (31 samples, 0.64%)</title><rect x="329.9" y="819.0" width="7.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="332.9" y="830.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="329.9" y="803.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="332.9" y="814.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="330.1" y="787.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="333.1" y="798.0"></text>
</g>
<g>
<title>ep_poll (26 samples, 0.54%)</title><rect x="330.6" y="803.0" width="6.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="333.6" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (22 samples, 0.45%)</title><rect x="331.3" y="787.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="334.3" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (13 samples, 0.27%)</title><rect x="333.3" y="771.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="336.3" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (8 samples, 0.17%)</title><rect x="334.5" y="755.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="337.5" y="766.0"></text>
</g>
<g>
<title>sock_poll (8 samples, 0.17%)</title><rect x="334.5" y="739.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="337.5" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.04%)</title><rect x="336.0" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="339.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (128 samples, 2.64%)</title><rect x="337.9" y="931.0" width="31.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.9" y="942.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (127 samples, 2.62%)</title><rect x="338.2" y="915.0" width="30.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.2" y="926.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (76 samples, 1.57%)</title><rect x="338.2" y="899.0" width="18.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="341.2" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (28 samples, 0.58%)</title><rect x="339.6" y="883.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (28 samples, 0.58%)</title><rect x="339.6" y="867.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="342.6" y="878.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (22 samples, 0.45%)</title><rect x="339.6" y="851.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="342.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 0.08%)</title><rect x="339.6" y="835.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.08%)</title><rect x="339.6" y="819.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.06%)</title><rect x="339.9" y="803.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="339.9" y="787.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="339.9" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="342.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.06%)</title><rect x="339.9" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="342.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (18 samples, 0.37%)</title><rect x="340.6" y="835.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="343.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (18 samples, 0.37%)</title><rect x="340.6" y="819.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="343.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (18 samples, 0.37%)</title><rect x="340.6" y="803.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="343.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (18 samples, 0.37%)</title><rect x="340.6" y="787.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (5 samples, 0.10%)</title><rect x="340.6" y="771.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="343.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.10%)</title><rect x="340.6" y="755.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="343.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.10%)</title><rect x="340.6" y="739.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="343.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.06%)</title><rect x="341.8" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.06%)</title><rect x="341.8" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="344.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.06%)</title><rect x="341.8" y="739.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="344.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.06%)</title><rect x="341.8" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.06%)</title><rect x="341.8" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="344.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.21%)</title><rect x="342.5" y="771.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="345.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.21%)</title><rect x="342.5" y="755.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.21%)</title><rect x="342.5" y="739.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="345.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.19%)</title><rect x="342.8" y="723.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="345.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.19%)</title><rect x="342.8" y="707.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="345.8" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.17%)</title><rect x="343.0" y="691.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="346.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.14%)</title><rect x="343.3" y="675.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="346.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.14%)</title><rect x="343.3" y="659.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="346.3" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.12%)</title><rect x="343.5" y="643.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="346.5" y="654.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.12%)</title><rect x="343.5" y="627.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="346.5" y="638.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.12%)</title><rect x="343.5" y="611.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="346.5" y="622.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.12%)</title><rect x="343.5" y="595.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="346.5" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.12%)</title><rect x="343.5" y="579.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="346.5" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.12%)</title><rect x="343.5" y="563.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="346.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.10%)</title><rect x="345.0" y="851.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.0" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.10%)</title><rect x="345.0" y="835.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.0" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.06%)</title><rect x="345.0" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="348.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="345.7" y="819.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="345.7" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="345.7" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13 samples, 0.27%)</title><rect x="346.4" y="883.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="349.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.06%)</title><rect x="346.4" y="867.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="346.4" y="851.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="349.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="346.4" y="835.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="349.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.06%)</title><rect x="346.4" y="819.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="349.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.21%)</title><rect x="347.2" y="867.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="350.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.21%)</title><rect x="347.2" y="851.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.2" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="349.1" y="835.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="352.1" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="349.1" y="819.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="352.1" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="349.1" y="803.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="352.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 0.58%)</title><rect x="349.9" y="883.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.04%)</title><rect x="356.7" y="899.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.7" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="356.7" y="883.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="359.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (49 samples, 1.01%)</title><rect x="357.2" y="899.0" width="11.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="360.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (49 samples, 1.01%)</title><rect x="357.2" y="883.0" width="11.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.2" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.04%)</title><rect x="357.2" y="867.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="360.2" y="878.0"></text>
</g>
<g>
<title>__recv (47 samples, 0.97%)</title><rect x="357.7" y="867.0" width="11.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="360.7" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.83%)</title><rect x="359.4" y="851.0" width="9.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="362.4" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 0.81%)</title><rect x="359.6" y="835.0" width="9.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="362.6" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (34 samples, 0.70%)</title><rect x="360.8" y="819.0" width="8.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="363.8" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (30 samples, 0.62%)</title><rect x="360.8" y="803.0" width="7.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="363.8" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (25 samples, 0.52%)</title><rect x="361.1" y="787.0" width="6.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="364.1" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (22 samples, 0.45%)</title><rect x="361.1" y="771.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="364.1" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (21 samples, 0.43%)</title><rect x="361.3" y="755.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="364.3" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.12%)</title><rect x="361.6" y="739.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="364.6" y="750.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.12%)</title><rect x="361.6" y="723.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="364.6" y="734.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.10%)</title><rect x="361.8" y="707.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="364.8" y="718.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.04%)</title><rect x="361.8" y="691.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="364.8" y="702.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.06%)</title><rect x="362.3" y="691.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="365.3" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="363.0" y="739.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="366.0" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="363.0" y="723.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="366.0" y="734.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.06%)</title><rect x="363.5" y="739.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="366.5" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.12%)</title><rect x="364.2" y="739.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="367.2" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.12%)</title><rect x="364.2" y="723.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="367.2" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.10%)</title><rect x="364.5" y="707.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="367.5" y="718.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.04%)</title><rect x="364.5" y="691.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="367.5" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.04%)</title><rect x="365.2" y="691.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="368.2" y="702.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.04%)</title><rect x="365.2" y="675.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="368.2" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.04%)</title><rect x="365.7" y="739.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="368.7" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.06%)</title><rect x="366.4" y="771.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="369.4" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.04%)</title><rect x="366.4" y="755.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="369.4" y="766.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.04%)</title><rect x="366.4" y="739.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="369.4" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.08%)</title><rect x="367.2" y="787.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="370.2" y="798.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="367.2" y="771.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="370.2" y="782.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="367.2" y="755.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="370.2" y="766.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.06%)</title><rect x="367.2" y="739.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="370.2" y="750.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.04%)</title><rect x="368.1" y="803.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="371.1" y="814.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=13380] (187 samples, 3.86%)</title><rect x="369.1" y="963.0" width="45.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="372.1" y="974.0">[NIO..</text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.06%)</title><rect x="369.1" y="947.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="372.1" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="369.1" y="931.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="372.1" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.04%)</title><rect x="369.1" y="915.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="372.1" y="926.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.04%)</title><rect x="369.1" y="899.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="372.1" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (184 samples, 3.80%)</title><rect x="369.9" y="947.0" width="44.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.9" y="958.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (56 samples, 1.16%)</title><rect x="369.9" y="931.0" width="13.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="372.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (56 samples, 1.16%)</title><rect x="369.9" y="915.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="372.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 1.07%)</title><rect x="370.1" y="899.0" width="12.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="373.1" y="910.0"></text>
</g>
<g>
<title>epoll_wait (52 samples, 1.07%)</title><rect x="370.1" y="883.0" width="12.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="373.1" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.91%)</title><rect x="372.0" y="867.0" width="10.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="375.0" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 0.91%)</title><rect x="372.0" y="851.0" width="10.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="375.0" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (37 samples, 0.76%)</title><rect x="373.8" y="835.0" width="9.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="376.8" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (37 samples, 0.76%)</title><rect x="373.8" y="819.0" width="9.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="376.8" y="830.0"></text>
</g>
<g>
<title>ep_poll (34 samples, 0.70%)</title><rect x="374.5" y="803.0" width="8.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="377.5" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (25 samples, 0.52%)</title><rect x="375.9" y="787.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="378.9" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (19 samples, 0.39%)</title><rect x="377.4" y="771.0" width="4.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="380.4" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (15 samples, 0.31%)</title><rect x="378.1" y="755.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="381.1" y="766.0"></text>
</g>
<g>
<title>sock_poll (13 samples, 0.27%)</title><rect x="378.6" y="739.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="381.6" y="750.0"></text>
</g>
<g>
<title>tcp_poll (7 samples, 0.14%)</title><rect x="379.1" y="723.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="382.1" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.08%)</title><rect x="380.8" y="723.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="383.8" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.04%)</title><rect x="382.3" y="787.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="385.3" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.04%)</title><rect x="382.3" y="771.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="385.3" y="782.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="382.8" y="899.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="385.8" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (128 samples, 2.64%)</title><rect x="383.5" y="931.0" width="31.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.5" y="942.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (125 samples, 2.58%)</title><rect x="384.2" y="915.0" width="30.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="387.2" y="926.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (81 samples, 1.67%)</title><rect x="384.2" y="899.0" width="19.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.2" y="910.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (2 samples, 0.04%)</title><rect x="385.5" y="883.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.5" y="894.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="386.2" y="883.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="389.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (36 samples, 0.74%)</title><rect x="386.7" y="883.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="389.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (36 samples, 0.74%)</title><rect x="386.7" y="867.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.7" y="878.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (32 samples, 0.66%)</title><rect x="386.7" y="851.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.14%)</title><rect x="386.7" y="835.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="389.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.14%)</title><rect x="386.7" y="819.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="389.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="386.7" y="803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="389.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="386.7" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.08%)</title><rect x="387.4" y="803.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.08%)</title><rect x="387.4" y="787.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.08%)</title><rect x="387.4" y="771.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.08%)</title><rect x="387.4" y="755.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.upsert (25 samples, 0.52%)</title><rect x="388.4" y="835.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.processRequest (24 samples, 0.50%)</title><rect x="388.6" y="819.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (24 samples, 0.50%)</title><rect x="388.6" y="803.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="391.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (24 samples, 0.50%)</title><rect x="388.6" y="787.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.14%)</title><rect x="389.1" y="771.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="392.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.14%)</title><rect x="389.1" y="755.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="392.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (7 samples, 0.14%)</title><rect x="389.1" y="739.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="392.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (7 samples, 0.14%)</title><rect x="389.1" y="723.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="392.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.14%)</title><rect x="389.1" y="707.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="392.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.08%)</title><rect x="389.8" y="691.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="392.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="390.1" y="675.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="393.1" y="686.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="390.1" y="659.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="393.1" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="390.3" y="643.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="393.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.29%)</title><rect x="390.8" y="771.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.29%)</title><rect x="390.8" y="755.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="393.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.29%)</title><rect x="390.8" y="739.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.25%)</title><rect x="391.1" y="723.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.25%)</title><rect x="391.1" y="707.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.1" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="391.1" y="691.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="394.1" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.21%)</title><rect x="391.5" y="691.0" width="2.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="394.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.19%)</title><rect x="391.8" y="675.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="394.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.19%)</title><rect x="391.8" y="659.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="394.8" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.14%)</title><rect x="392.3" y="643.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="395.3" y="654.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.14%)</title><rect x="392.3" y="627.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="395.3" y="638.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.14%)</title><rect x="392.3" y="611.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="395.3" y="622.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.12%)</title><rect x="392.5" y="595.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="395.5" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.12%)</title><rect x="392.5" y="579.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="395.5" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.12%)</title><rect x="392.5" y="563.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="395.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.08%)</title><rect x="394.5" y="851.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.5" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.08%)</title><rect x="394.5" y="835.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.5" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="394.5" y="819.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.5" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="395.0" y="819.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="395.0" y="803.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="398.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="395.0" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="398.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.12%)</title><rect x="395.5" y="883.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="398.5" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.06%)</title><rect x="395.5" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="398.5" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="395.5" y="851.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="398.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.06%)</title><rect x="396.2" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.06%)</title><rect x="396.2" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.2" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="396.2" y="835.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="399.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 0.58%)</title><rect x="397.2" y="883.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="400.2" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.12%)</title><rect x="402.5" y="867.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="405.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (44 samples, 0.91%)</title><rect x="404.0" y="899.0" width="10.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (43 samples, 0.89%)</title><rect x="404.2" y="883.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.2" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.04%)</title><rect x="404.5" y="867.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="407.5" y="878.0"></text>
</g>
<g>
<title>__recv (37 samples, 0.76%)</title><rect x="405.2" y="867.0" width="9.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="408.2" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.54%)</title><rect x="407.9" y="851.0" width="6.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="410.9" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.52%)</title><rect x="408.1" y="835.0" width="6.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="411.1" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (20 samples, 0.41%)</title><rect x="409.3" y="819.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="412.3" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (20 samples, 0.41%)</title><rect x="409.3" y="803.0" width="4.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="412.3" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (17 samples, 0.35%)</title><rect x="409.6" y="787.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="412.6" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (12 samples, 0.25%)</title><rect x="409.6" y="771.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="412.6" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.25%)</title><rect x="409.6" y="755.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="412.6" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.10%)</title><rect x="410.1" y="739.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="413.1" y="750.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.08%)</title><rect x="410.1" y="723.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="413.1" y="734.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.06%)</title><rect x="410.3" y="707.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="413.3" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.08%)</title><rect x="411.5" y="739.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="414.5" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.06%)</title><rect x="411.8" y="723.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="414.8" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.04%)</title><rect x="412.0" y="707.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="415.0" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.10%)</title><rect x="412.5" y="771.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="415.5" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.08%)</title><rect x="412.5" y="755.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="415.5" y="766.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.08%)</title><rect x="412.5" y="739.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="415.5" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="413.0" y="723.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="416.0" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="413.7" y="787.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="416.7" y="798.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="413.7" y="771.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="416.7" y="782.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="413.7" y="755.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="416.7" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.04%)</title><rect x="414.2" y="867.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="417.2" y="878.0"></text>
</g>
<g>
<title>[VM Thread tid=13349] (7 samples, 0.14%)</title><rect x="414.7" y="963.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="417.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="414.7" y="947.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="417.7" y="958.0"></text>
</g>
<g>
<title>_IO_vsnprintf (2 samples, 0.04%)</title><rect x="414.7" y="931.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="417.7" y="942.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.10%)</title><rect x="415.2" y="947.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="418.2" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.10%)</title><rect x="415.2" y="931.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="418.2" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.10%)</title><rect x="415.2" y="915.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="418.2" y="926.0"></text>
</g>
<g>
<title>VMThread::run() (5 samples, 0.10%)</title><rect x="415.2" y="899.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="418.2" y="910.0"></text>
</g>
<g>
<title>VMThread::loop() (5 samples, 0.10%)</title><rect x="415.2" y="883.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="418.2" y="894.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.63] (4 samples, 0.08%)</title><rect x="415.4" y="867.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="418.4" y="878.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (4 samples, 0.08%)</title><rect x="415.4" y="851.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="418.4" y="862.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (4 samples, 0.08%)</title><rect x="415.4" y="835.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="418.4" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (4 samples, 0.08%)</title><rect x="415.4" y="819.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="418.4" y="830.0"></text>
</g>
<g>
<title>[pool-1-thread-1 tid=13538] (144 samples, 2.98%)</title><rect x="416.4" y="963.0" width="35.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="419.4" y="974.0">[po..</text>
</g>
<g>
<title>java/lang/Thread.run (144 samples, 2.98%)</title><rect x="416.4" y="947.0" width="35.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.4" y="958.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (144 samples, 2.98%)</title><rect x="416.4" y="931.0" width="35.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.4" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (144 samples, 2.98%)</title><rect x="416.4" y="915.0" width="35.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="419.4" y="926.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$115/393671907.run (144 samples, 2.98%)</title><rect x="416.4" y="899.0" width="35.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.4" y="910.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$flush$10 (144 samples, 2.98%)</title><rect x="416.4" y="883.0" width="35.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="419.4" y="894.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.serialize (144 samples, 2.98%)</title><rect x="416.4" y="867.0" width="35.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="419.4" y="878.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.serialize (144 samples, 2.98%)</title><rect x="416.4" y="851.0" width="35.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="419.4" y="862.0">ru/..</text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.04%)</title><rect x="418.1" y="835.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="421.1" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.04%)</title><rect x="418.1" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="421.1" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.04%)</title><rect x="418.1" y="803.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="421.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (135 samples, 2.79%)</title><rect x="418.6" y="835.0" width="32.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.6" y="846.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.04%)</title><rect x="418.6" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.6" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.04%)</title><rect x="418.6" y="803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.04%)</title><rect x="418.6" y="787.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="421.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (127 samples, 2.62%)</title><rect x="419.1" y="819.0" width="31.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.1" y="830.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (114 samples, 2.36%)</title><rect x="419.6" y="803.0" width="27.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.6" y="814.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (114 samples, 2.36%)</title><rect x="419.6" y="787.0" width="27.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.6" y="798.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (114 samples, 2.36%)</title><rect x="419.6" y="771.0" width="27.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="422.6" y="782.0">s..</text>
</g>
<g>
<title>[unknown] (111 samples, 2.29%)</title><rect x="420.1" y="755.0" width="27.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="423.1" y="766.0">[..</text>
</g>
<g>
<title>__libc_write (111 samples, 2.29%)</title><rect x="420.1" y="739.0" width="27.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="423.1" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 1.63%)</title><rect x="427.9" y="723.0" width="19.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="430.9" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (78 samples, 1.61%)</title><rect x="428.1" y="707.0" width="19.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="431.1" y="718.0"></text>
</g>
<g>
<title>__x64_sys_write (67 samples, 1.38%)</title><rect x="430.6" y="691.0" width="16.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="433.6" y="702.0"></text>
</g>
<g>
<title>ksys_write (66 samples, 1.36%)</title><rect x="430.8" y="675.0" width="16.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="433.8" y="686.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.04%)</title><rect x="431.0" y="659.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="434.0" y="670.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="431.0" y="643.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="434.0" y="654.0"></text>
</g>
<g>
<title>vfs_write (61 samples, 1.26%)</title><rect x="432.0" y="659.0" width="14.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="435.0" y="670.0"></text>
</g>
<g>
<title>__vfs_write (58 samples, 1.20%)</title><rect x="432.3" y="643.0" width="14.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="435.3" y="654.0"></text>
</g>
<g>
<title>new_sync_write (58 samples, 1.20%)</title><rect x="432.3" y="627.0" width="14.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="435.3" y="638.0"></text>
</g>
<g>
<title>ext4_file_write_iter (58 samples, 1.20%)</title><rect x="432.3" y="611.0" width="14.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="435.3" y="622.0"></text>
</g>
<g>
<title>__generic_file_write_iter (57 samples, 1.18%)</title><rect x="432.3" y="595.0" width="13.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="435.3" y="606.0"></text>
</g>
<g>
<title>generic_perform_write (56 samples, 1.16%)</title><rect x="432.5" y="579.0" width="13.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="435.5" y="590.0"></text>
</g>
<g>
<title>ext4_da_write_begin (12 samples, 0.25%)</title><rect x="433.0" y="563.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="436.0" y="574.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 0.06%)</title><rect x="433.5" y="547.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="436.5" y="558.0"></text>
</g>
<g>
<title>jbd2__journal_start (3 samples, 0.06%)</title><rect x="433.5" y="531.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="436.5" y="542.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (5 samples, 0.10%)</title><rect x="434.5" y="547.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="437.5" y="558.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.08%)</title><rect x="434.5" y="531.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="437.5" y="542.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.04%)</title><rect x="434.9" y="515.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="437.9" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_end (38 samples, 0.79%)</title><rect x="435.9" y="563.0" width="9.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="438.9" y="574.0"></text>
</g>
<g>
<title>__ext4_journal_stop (6 samples, 0.12%)</title><rect x="436.4" y="547.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="439.4" y="558.0"></text>
</g>
<g>
<title>jbd2_journal_stop (5 samples, 0.10%)</title><rect x="436.7" y="531.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="439.7" y="542.0"></text>
</g>
<g>
<title>__wake_up (3 samples, 0.06%)</title><rect x="436.9" y="515.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="439.9" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.06%)</title><rect x="436.9" y="499.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="439.9" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="436.9" y="483.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="439.9" y="494.0"></text>
</g>
<g>
<title>generic_write_end (30 samples, 0.62%)</title><rect x="437.9" y="547.0" width="7.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="440.9" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (30 samples, 0.62%)</title><rect x="437.9" y="531.0" width="7.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="440.9" y="542.0"></text>
</g>
<g>
<title>ext4_dirty_inode (27 samples, 0.56%)</title><rect x="438.6" y="515.0" width="6.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="441.6" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.04%)</title><rect x="438.6" y="499.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="441.6" y="510.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (25 samples, 0.52%)</title><rect x="439.1" y="499.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="442.1" y="510.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (22 samples, 0.45%)</title><rect x="439.1" y="483.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="442.1" y="494.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (2 samples, 0.04%)</title><rect x="440.3" y="467.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="443.3" y="478.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (14 samples, 0.29%)</title><rect x="440.8" y="467.0" width="3.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="443.8" y="478.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (14 samples, 0.29%)</title><rect x="440.8" y="451.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="443.8" y="462.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (6 samples, 0.12%)</title><rect x="441.8" y="435.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="444.8" y="446.0"></text>
</g>
<g>
<title>crypto_shash_update (4 samples, 0.08%)</title><rect x="443.2" y="435.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="446.2" y="446.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.08%)</title><rect x="443.2" y="419.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="446.2" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (3 samples, 0.06%)</title><rect x="444.5" y="483.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="447.5" y="494.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.04%)</title><rect x="444.5" y="467.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="447.5" y="478.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.04%)</title><rect x="445.2" y="563.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="448.2" y="574.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.04%)</title><rect x="445.7" y="563.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="448.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.14%)</title><rect x="447.4" y="803.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="450.4" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.08%)</title><rect x="449.1" y="803.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="452.1" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.08%)</title><rect x="449.1" y="787.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="452.1" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.08%)</title><rect x="449.1" y="771.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="452.1" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.04%)</title><rect x="449.1" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.1" y="766.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.04%)</title><rect x="449.6" y="755.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="452.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.12%)</title><rect x="450.1" y="819.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.10%)</title><rect x="450.3" y="803.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.3" y="814.0"></text>
</g>
<g>
<title>[pool-1-thread-2 tid=13549] (219 samples, 4.52%)</title><rect x="451.5" y="963.0" width="53.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="454.5" y="974.0">[pool..</text>
</g>
<g>
<title>java/lang/Thread.run (219 samples, 4.52%)</title><rect x="451.5" y="947.0" width="53.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.5" y="958.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (219 samples, 4.52%)</title><rect x="451.5" y="931.0" width="53.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="454.5" y="942.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (219 samples, 4.52%)</title><rect x="451.5" y="915.0" width="53.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.5" y="926.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$115/393671907.run (219 samples, 4.52%)</title><rect x="451.5" y="899.0" width="53.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="454.5" y="910.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$flush$10 (219 samples, 4.52%)</title><rect x="451.5" y="883.0" width="53.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="454.5" y="894.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.serialize (219 samples, 4.52%)</title><rect x="451.5" y="867.0" width="53.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="454.5" y="878.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.serialize (219 samples, 4.52%)</title><rect x="451.5" y="851.0" width="53.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="454.5" y="862.0">ru/ma..</text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (6 samples, 0.12%)</title><rect x="452.3" y="835.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.3" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.12%)</title><rect x="452.3" y="819.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="455.3" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.12%)</title><rect x="452.3" y="803.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.10%)</title><rect x="452.5" y="787.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="455.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$119/1885703898.getAsBoolean (4 samples, 0.08%)</title><rect x="452.7" y="771.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="455.7" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.08%)</title><rect x="452.7" y="755.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.08%)</title><rect x="452.7" y="739.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="455.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.04%)</title><rect x="452.7" y="723.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.04%)</title><rect x="452.7" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="455.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.04%)</title><rect x="452.7" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (2 samples, 0.04%)</title><rect x="452.7" y="675.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="455.7" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.04%)</title><rect x="453.2" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="456.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable$$Lambda$116/1389166563.apply (2 samples, 0.04%)</title><rect x="453.2" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.lambda$iterator$0 (2 samples, 0.04%)</title><rect x="453.2" y="691.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="456.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Cell.&lt;init&gt; (2 samples, 0.04%)</title><rect x="453.2" y="675.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (210 samples, 4.34%)</title><rect x="453.7" y="835.0" width="51.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.7" y="846.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.04%)</title><rect x="454.0" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="457.0" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.04%)</title><rect x="454.0" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="457.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.04%)</title><rect x="454.0" y="787.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (203 samples, 4.19%)</title><rect x="454.5" y="819.0" width="49.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.5" y="830.0">sun/n..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (4 samples, 0.08%)</title><rect x="455.4" y="803.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.06%)</title><rect x="455.4" y="787.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="458.4" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.06%)</title><rect x="455.4" y="771.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="458.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (182 samples, 3.76%)</title><rect x="456.4" y="803.0" width="44.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="459.4" y="814.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (182 samples, 3.76%)</title><rect x="456.4" y="787.0" width="44.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.4" y="798.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (182 samples, 3.76%)</title><rect x="456.4" y="771.0" width="44.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.4" y="782.0">sun/..</text>
</g>
<g>
<title>[unknown] (177 samples, 3.66%)</title><rect x="457.6" y="755.0" width="43.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="460.6" y="766.0">[unk..</text>
</g>
<g>
<title>__libc_write (175 samples, 3.62%)</title><rect x="457.6" y="739.0" width="42.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="460.6" y="750.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (132 samples, 2.73%)</title><rect x="468.1" y="723.0" width="32.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="471.1" y="734.0">en..</text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.04%)</title><rect x="468.1" y="707.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="471.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (130 samples, 2.69%)</title><rect x="468.6" y="707.0" width="31.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="471.6" y="718.0">do..</text>
</g>
<g>
<title>__x64_sys_write (119 samples, 2.46%)</title><rect x="471.3" y="691.0" width="29.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="474.3" y="702.0">__..</text>
</g>
<g>
<title>ksys_write (118 samples, 2.44%)</title><rect x="471.5" y="675.0" width="28.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="474.5" y="686.0">ks..</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.04%)</title><rect x="472.0" y="659.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="475.0" y="670.0"></text>
</g>
<g>
<title>vfs_write (112 samples, 2.31%)</title><rect x="473.0" y="659.0" width="27.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="476.0" y="670.0">v..</text>
</g>
<g>
<title>__sb_start_write (3 samples, 0.06%)</title><rect x="473.7" y="643.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="476.7" y="654.0"></text>
</g>
<g>
<title>__vfs_write (101 samples, 2.09%)</title><rect x="474.4" y="643.0" width="24.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="477.4" y="654.0">_..</text>
</g>
<g>
<title>ext4_file_write_iter (2 samples, 0.04%)</title><rect x="474.4" y="627.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="477.4" y="638.0"></text>
</g>
<g>
<title>new_sync_write (99 samples, 2.05%)</title><rect x="474.9" y="627.0" width="24.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="477.9" y="638.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (98 samples, 2.02%)</title><rect x="475.2" y="611.0" width="23.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="478.2" y="622.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (92 samples, 1.90%)</title><rect x="475.9" y="595.0" width="22.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="478.9" y="606.0">_..</text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.06%)</title><rect x="476.1" y="579.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="479.1" y="590.0"></text>
</g>
<g>
<title>ext4_da_write_end (2 samples, 0.04%)</title><rect x="476.9" y="579.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="479.9" y="590.0"></text>
</g>
<g>
<title>generic_perform_write (85 samples, 1.76%)</title><rect x="477.6" y="579.0" width="20.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="480.6" y="590.0"></text>
</g>
<g>
<title>ext4_da_write_begin (26 samples, 0.54%)</title><rect x="478.1" y="563.0" width="6.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="481.1" y="574.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (17 samples, 0.35%)</title><rect x="478.3" y="547.0" width="4.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="481.3" y="558.0"></text>
</g>
<g>
<title>jbd2__journal_start (15 samples, 0.31%)</title><rect x="478.6" y="531.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="481.6" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.06%)</title><rect x="479.3" y="515.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="482.3" y="526.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.04%)</title><rect x="480.0" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="483.0" y="526.0"></text>
</g>
<g>
<title>start_this_handle (7 samples, 0.14%)</title><rect x="480.5" y="515.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="483.5" y="526.0"></text>
</g>
<g>
<title>add_transaction_credits (3 samples, 0.06%)</title><rect x="481.5" y="499.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="484.5" y="510.0"></text>
</g>
<g>
<title>ext4_block_write_begin (2 samples, 0.04%)</title><rect x="482.5" y="547.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="485.5" y="558.0"></text>
</g>
<g>
<title>ext4_nonda_switch (2 samples, 0.04%)</title><rect x="483.0" y="547.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="486.0" y="558.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.06%)</title><rect x="483.5" y="547.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="486.5" y="558.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.04%)</title><rect x="483.5" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="486.5" y="542.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.04%)</title><rect x="483.5" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="486.5" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_end (49 samples, 1.01%)</title><rect x="484.4" y="563.0" width="12.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="487.4" y="574.0"></text>
</g>
<g>
<title>__ext4_journal_stop (6 samples, 0.12%)</title><rect x="484.7" y="547.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="487.7" y="558.0"></text>
</g>
<g>
<title>jbd2_journal_stop (6 samples, 0.12%)</title><rect x="484.7" y="531.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="487.7" y="542.0"></text>
</g>
<g>
<title>__wake_up (4 samples, 0.08%)</title><rect x="485.2" y="515.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="488.2" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.08%)</title><rect x="485.2" y="499.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="488.2" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="485.4" y="483.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="488.4" y="494.0"></text>
</g>
<g>
<title>generic_write_end (42 samples, 0.87%)</title><rect x="486.1" y="547.0" width="10.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="489.1" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (39 samples, 0.81%)</title><rect x="486.1" y="531.0" width="9.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="489.1" y="542.0"></text>
</g>
<g>
<title>ext4_dirty_inode (38 samples, 0.79%)</title><rect x="486.4" y="515.0" width="9.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="489.4" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.06%)</title><rect x="486.6" y="499.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="489.6" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.04%)</title><rect x="486.9" y="483.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="489.9" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (34 samples, 0.70%)</title><rect x="487.4" y="499.0" width="8.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="490.4" y="510.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (22 samples, 0.45%)</title><rect x="487.9" y="483.0" width="5.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="490.9" y="494.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (2 samples, 0.04%)</title><rect x="489.1" y="467.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="492.1" y="478.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (15 samples, 0.31%)</title><rect x="489.6" y="467.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="492.6" y="478.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (14 samples, 0.29%)</title><rect x="489.8" y="451.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="492.8" y="462.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.08%)</title><rect x="490.8" y="435.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="493.8" y="446.0"></text>
</g>
<g>
<title>crypto_shash_update (6 samples, 0.12%)</title><rect x="491.8" y="435.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="494.8" y="446.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (5 samples, 0.10%)</title><rect x="492.0" y="419.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="495.0" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (9 samples, 0.19%)</title><rect x="493.2" y="483.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="496.2" y="494.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (8 samples, 0.17%)</title><rect x="493.5" y="467.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="496.5" y="478.0"></text>
</g>
<g>
<title>__getblk_gfp (3 samples, 0.06%)</title><rect x="493.9" y="451.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="496.9" y="462.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.04%)</title><rect x="494.2" y="435.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="497.2" y="446.0"></text>
</g>
<g>
<title>ext4_get_group_desc (3 samples, 0.06%)</title><rect x="494.7" y="451.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="497.7" y="462.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.04%)</title><rect x="495.7" y="531.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="498.7" y="542.0"></text>
</g>
<g>
<title>__block_commit_write.isra.41 (2 samples, 0.04%)</title><rect x="495.7" y="515.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="498.7" y="526.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.04%)</title><rect x="496.6" y="563.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="499.6" y="574.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.04%)</title><rect x="497.1" y="563.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="500.1" y="574.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (3 samples, 0.06%)</title><rect x="497.6" y="563.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="500.6" y="574.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.08%)</title><rect x="499.3" y="643.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="502.3" y="654.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.04%)</title><rect x="499.8" y="627.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="502.8" y="638.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.04%)</title><rect x="500.3" y="739.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="503.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (10 samples, 0.21%)</title><rect x="500.8" y="803.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.8" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="502.0" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="505.0" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="502.0" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.0" y="782.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.04%)</title><rect x="502.0" y="755.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="505.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.06%)</title><rect x="502.5" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="503.2" y="803.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.2" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="503.5" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.5" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="503.5" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.08%)</title><rect x="503.9" y="819.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="506.9" y="830.0"></text>
</g>
<g>
<title>[pool-1-thread-3 tid=13551] (147 samples, 3.04%)</title><rect x="504.9" y="963.0" width="35.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="507.9" y="974.0">[po..</text>
</g>
<g>
<title>java/lang/Thread.run (147 samples, 3.04%)</title><rect x="504.9" y="947.0" width="35.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="507.9" y="958.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (147 samples, 3.04%)</title><rect x="504.9" y="931.0" width="35.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.9" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (147 samples, 3.04%)</title><rect x="504.9" y="915.0" width="35.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="507.9" y="926.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$115/393671907.run (147 samples, 3.04%)</title><rect x="504.9" y="899.0" width="35.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.9" y="910.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$flush$10 (147 samples, 3.04%)</title><rect x="504.9" y="883.0" width="35.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.9" y="894.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.serialize (147 samples, 3.04%)</title><rect x="504.9" y="867.0" width="35.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="507.9" y="878.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.serialize (147 samples, 3.04%)</title><rect x="504.9" y="851.0" width="35.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="507.9" y="862.0">ru/..</text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.04%)</title><rect x="505.6" y="835.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.6" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.04%)</title><rect x="505.6" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.6" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.04%)</title><rect x="505.6" y="803.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.6" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.04%)</title><rect x="505.6" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.6" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$119/1885703898.getAsBoolean (2 samples, 0.04%)</title><rect x="505.6" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.6" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.04%)</title><rect x="505.6" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.04%)</title><rect x="505.6" y="739.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.04%)</title><rect x="505.6" y="723.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.04%)</title><rect x="505.6" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.04%)</title><rect x="505.6" y="691.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (2 samples, 0.04%)</title><rect x="505.6" y="675.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.6" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (142 samples, 2.93%)</title><rect x="506.1" y="835.0" width="34.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.1" y="846.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (135 samples, 2.79%)</title><rect x="506.6" y="819.0" width="32.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.6" y="830.0">su..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.04%)</title><rect x="506.9" y="803.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="506.9" y="787.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.9" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="506.9" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="509.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (118 samples, 2.44%)</title><rect x="507.4" y="803.0" width="28.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="510.4" y="814.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (118 samples, 2.44%)</title><rect x="507.4" y="787.0" width="28.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.4" y="798.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (118 samples, 2.44%)</title><rect x="507.4" y="771.0" width="28.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.4" y="782.0">su..</text>
</g>
<g>
<title>[unknown] (114 samples, 2.36%)</title><rect x="508.1" y="755.0" width="27.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="511.1" y="766.0">[..</text>
</g>
<g>
<title>__libc_write (114 samples, 2.36%)</title><rect x="508.1" y="739.0" width="27.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="511.1" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (86 samples, 1.78%)</title><rect x="514.9" y="723.0" width="21.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="517.9" y="734.0"></text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.04%)</title><rect x="514.9" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="517.9" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (84 samples, 1.74%)</title><rect x="515.4" y="707.0" width="20.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="518.4" y="718.0"></text>
</g>
<g>
<title>__x64_sys_write (70 samples, 1.45%)</title><rect x="518.6" y="691.0" width="17.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="521.6" y="702.0"></text>
</g>
<g>
<title>ksys_write (70 samples, 1.45%)</title><rect x="518.6" y="675.0" width="17.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="521.6" y="686.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.04%)</title><rect x="518.6" y="659.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="521.6" y="670.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="518.6" y="643.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="521.6" y="654.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="518.6" y="627.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="521.6" y="638.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.04%)</title><rect x="519.5" y="659.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="522.5" y="670.0"></text>
</g>
<g>
<title>vfs_write (64 samples, 1.32%)</title><rect x="520.0" y="659.0" width="15.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="523.0" y="670.0"></text>
</g>
<g>
<title>__vfs_write (61 samples, 1.26%)</title><rect x="520.0" y="643.0" width="14.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="523.0" y="654.0"></text>
</g>
<g>
<title>new_sync_write (60 samples, 1.24%)</title><rect x="520.3" y="627.0" width="14.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="523.3" y="638.0"></text>
</g>
<g>
<title>ext4_file_write_iter (56 samples, 1.16%)</title><rect x="521.3" y="611.0" width="13.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="524.3" y="622.0"></text>
</g>
<g>
<title>__generic_file_write_iter (55 samples, 1.14%)</title><rect x="521.5" y="595.0" width="13.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="524.5" y="606.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.04%)</title><rect x="522.0" y="579.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="525.0" y="590.0"></text>
</g>
<g>
<title>generic_perform_write (51 samples, 1.05%)</title><rect x="522.5" y="579.0" width="12.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="525.5" y="590.0"></text>
</g>
<g>
<title>ext4_da_write_begin (9 samples, 0.19%)</title><rect x="523.0" y="563.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="526.0" y="574.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 0.06%)</title><rect x="523.0" y="547.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="526.0" y="558.0"></text>
</g>
<g>
<title>jbd2__journal_start (3 samples, 0.06%)</title><rect x="523.0" y="531.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="526.0" y="542.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.04%)</title><rect x="523.2" y="515.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="526.2" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.06%)</title><rect x="523.9" y="547.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="526.9" y="558.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.06%)</title><rect x="523.9" y="531.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="526.9" y="542.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.04%)</title><rect x="524.7" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="527.7" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_end (33 samples, 0.68%)</title><rect x="525.2" y="563.0" width="8.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="528.2" y="574.0"></text>
</g>
<g>
<title>__ext4_journal_stop (8 samples, 0.17%)</title><rect x="525.4" y="547.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="528.4" y="558.0"></text>
</g>
<g>
<title>jbd2_journal_stop (8 samples, 0.17%)</title><rect x="525.4" y="531.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="528.4" y="542.0"></text>
</g>
<g>
<title>__wake_up (5 samples, 0.10%)</title><rect x="525.9" y="515.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="528.9" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.10%)</title><rect x="525.9" y="499.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="528.9" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.08%)</title><rect x="526.1" y="483.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="529.1" y="494.0"></text>
</g>
<g>
<title>generic_write_end (24 samples, 0.50%)</title><rect x="527.3" y="547.0" width="5.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="530.3" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (22 samples, 0.45%)</title><rect x="527.3" y="531.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="530.3" y="542.0"></text>
</g>
<g>
<title>ext4_dirty_inode (21 samples, 0.43%)</title><rect x="527.6" y="515.0" width="5.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="530.6" y="526.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (20 samples, 0.41%)</title><rect x="527.8" y="499.0" width="4.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="530.8" y="510.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (19 samples, 0.39%)</title><rect x="527.8" y="483.0" width="4.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="530.8" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.04%)</title><rect x="529.5" y="467.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="532.5" y="478.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (10 samples, 0.21%)</title><rect x="530.0" y="467.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="533.0" y="478.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (10 samples, 0.21%)</title><rect x="530.0" y="451.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="533.0" y="462.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (5 samples, 0.10%)</title><rect x="530.8" y="435.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="533.8" y="446.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.04%)</title><rect x="532.0" y="435.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="535.0" y="446.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.04%)</title><rect x="532.0" y="419.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="535.0" y="430.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.04%)</title><rect x="532.7" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="535.7" y="542.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (6 samples, 0.12%)</title><rect x="533.2" y="563.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="536.2" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.08%)</title><rect x="533.7" y="547.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="536.7" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.06%)</title><rect x="534.9" y="643.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="537.9" y="654.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.06%)</title><rect x="534.9" y="627.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="537.9" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.04%)</title><rect x="534.9" y="611.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="537.9" y="622.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.04%)</title><rect x="534.9" y="595.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="537.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (9 samples, 0.19%)</title><rect x="536.1" y="803.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.1" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.06%)</title><rect x="536.6" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="539.6" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.06%)</title><rect x="536.6" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.6" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.04%)</title><rect x="536.6" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.08%)</title><rect x="537.3" y="787.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (5 samples, 0.10%)</title><rect x="538.3" y="803.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.3" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.08%)</title><rect x="538.6" y="787.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="541.6" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.08%)</title><rect x="538.6" y="771.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.10%)</title><rect x="539.5" y="819.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="542.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.06%)</title><rect x="540.0" y="803.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.0" y="814.0"></text>
</g>
<g>
<title>[pool-1-thread-4 tid=13555] (142 samples, 2.93%)</title><rect x="540.8" y="963.0" width="34.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="543.8" y="974.0">[p..</text>
</g>
<g>
<title>java/lang/Thread.run (142 samples, 2.93%)</title><rect x="540.8" y="947.0" width="34.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.8" y="958.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (142 samples, 2.93%)</title><rect x="540.8" y="931.0" width="34.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.8" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (142 samples, 2.93%)</title><rect x="540.8" y="915.0" width="34.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.8" y="926.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$115/393671907.run (142 samples, 2.93%)</title><rect x="540.8" y="899.0" width="34.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.8" y="910.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$flush$10 (142 samples, 2.93%)</title><rect x="540.8" y="883.0" width="34.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.8" y="894.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.serialize (142 samples, 2.93%)</title><rect x="540.8" y="867.0" width="34.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.8" y="878.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/SSTable.serialize (142 samples, 2.93%)</title><rect x="540.8" y="851.0" width="34.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.8" y="862.0">ru..</text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.04%)</title><rect x="542.0" y="835.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="545.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.04%)</title><rect x="542.0" y="819.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="545.0" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.04%)</title><rect x="542.0" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="545.0" y="814.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.clear (2 samples, 0.04%)</title><rect x="542.0" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (135 samples, 2.79%)</title><rect x="542.5" y="835.0" width="32.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.5" y="846.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.04%)</title><rect x="542.5" y="819.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="545.5" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.04%)</title><rect x="542.5" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="545.5" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.04%)</title><rect x="542.5" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="545.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (130 samples, 2.69%)</title><rect x="543.0" y="819.0" width="31.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.0" y="830.0">su..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.06%)</title><rect x="543.2" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.2" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="543.2" y="787.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.2" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="543.2" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (115 samples, 2.38%)</title><rect x="543.9" y="803.0" width="28.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="546.9" y="814.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (115 samples, 2.38%)</title><rect x="543.9" y="787.0" width="28.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.9" y="798.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (115 samples, 2.38%)</title><rect x="543.9" y="771.0" width="28.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.9" y="782.0">su..</text>
</g>
<g>
<title>[unknown] (114 samples, 2.36%)</title><rect x="544.2" y="755.0" width="27.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="547.2" y="766.0">[..</text>
</g>
<g>
<title>__libc_write (114 samples, 2.36%)</title><rect x="544.2" y="739.0" width="27.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="547.2" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (91 samples, 1.88%)</title><rect x="549.8" y="723.0" width="22.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="552.8" y="734.0">e..</text>
</g>
<g>
<title>do_syscall_64 (91 samples, 1.88%)</title><rect x="549.8" y="707.0" width="22.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="552.8" y="718.0">d..</text>
</g>
<g>
<title>__x64_sys_write (81 samples, 1.67%)</title><rect x="552.2" y="691.0" width="19.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="555.2" y="702.0"></text>
</g>
<g>
<title>ksys_write (81 samples, 1.67%)</title><rect x="552.2" y="675.0" width="19.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="555.2" y="686.0"></text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.08%)</title><rect x="552.5" y="659.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="555.5" y="670.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.08%)</title><rect x="552.5" y="643.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="555.5" y="654.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.06%)</title><rect x="552.7" y="627.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="555.7" y="638.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="553.9" y="659.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="556.9" y="670.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.04%)</title><rect x="553.9" y="643.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="556.9" y="654.0"></text>
</g>
<g>
<title>vfs_write (72 samples, 1.49%)</title><rect x="554.4" y="659.0" width="17.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="557.4" y="670.0"></text>
</g>
<g>
<title>__vfs_write (70 samples, 1.45%)</title><rect x="554.7" y="643.0" width="17.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="557.7" y="654.0"></text>
</g>
<g>
<title>new_sync_write (69 samples, 1.43%)</title><rect x="554.9" y="627.0" width="16.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="557.9" y="638.0"></text>
</g>
<g>
<title>ext4_file_write_iter (67 samples, 1.38%)</title><rect x="555.1" y="611.0" width="16.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="558.1" y="622.0"></text>
</g>
<g>
<title>__generic_file_write_iter (65 samples, 1.34%)</title><rect x="555.4" y="595.0" width="15.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="558.4" y="606.0"></text>
</g>
<g>
<title>ext4_da_write_end (2 samples, 0.04%)</title><rect x="555.4" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="558.4" y="590.0"></text>
</g>
<g>
<title>generic_perform_write (62 samples, 1.28%)</title><rect x="556.1" y="579.0" width="15.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="559.1" y="590.0"></text>
</g>
<g>
<title>ext4_da_write_begin (13 samples, 0.27%)</title><rect x="556.6" y="563.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="559.6" y="574.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (6 samples, 0.12%)</title><rect x="556.6" y="547.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="559.6" y="558.0"></text>
</g>
<g>
<title>jbd2__journal_start (4 samples, 0.08%)</title><rect x="557.1" y="531.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="560.1" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.04%)</title><rect x="557.1" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="560.1" y="526.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.04%)</title><rect x="557.6" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="560.6" y="526.0"></text>
</g>
<g>
<title>ext4_block_write_begin (2 samples, 0.04%)</title><rect x="558.1" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="561.1" y="558.0"></text>
</g>
<g>
<title>create_empty_buffers (2 samples, 0.04%)</title><rect x="558.1" y="531.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="561.1" y="542.0"></text>
</g>
<g>
<title>alloc_page_buffers (2 samples, 0.04%)</title><rect x="558.1" y="515.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="561.1" y="526.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.04%)</title><rect x="559.0" y="547.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="562.0" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_end (41 samples, 0.85%)</title><rect x="559.8" y="563.0" width="10.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="562.8" y="574.0"></text>
</g>
<g>
<title>__ext4_journal_stop (6 samples, 0.12%)</title><rect x="559.8" y="547.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="562.8" y="558.0"></text>
</g>
<g>
<title>jbd2_journal_stop (4 samples, 0.08%)</title><rect x="560.3" y="531.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="563.3" y="542.0"></text>
</g>
<g>
<title>generic_write_end (35 samples, 0.72%)</title><rect x="561.2" y="547.0" width="8.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="564.2" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (33 samples, 0.68%)</title><rect x="561.5" y="531.0" width="8.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="564.5" y="542.0"></text>
</g>
<g>
<title>ext4_dirty_inode (32 samples, 0.66%)</title><rect x="561.7" y="515.0" width="7.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="564.7" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.04%)</title><rect x="562.0" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="565.0" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.04%)</title><rect x="562.0" y="483.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="565.0" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (27 samples, 0.56%)</title><rect x="562.7" y="499.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="565.7" y="510.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (21 samples, 0.43%)</title><rect x="562.7" y="483.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="565.7" y="494.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (14 samples, 0.29%)</title><rect x="564.4" y="467.0" width="3.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="567.4" y="478.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (13 samples, 0.27%)</title><rect x="564.6" y="451.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="567.6" y="462.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (5 samples, 0.10%)</title><rect x="565.1" y="435.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="568.1" y="446.0"></text>
</g>
<g>
<title>crypto_shash_update (6 samples, 0.12%)</title><rect x="566.4" y="435.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="569.4" y="446.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (5 samples, 0.10%)</title><rect x="566.6" y="419.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="569.6" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (6 samples, 0.12%)</title><rect x="567.8" y="483.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="570.8" y="494.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.04%)</title><rect x="568.1" y="467.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="571.1" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (3 samples, 0.06%)</title><rect x="568.5" y="467.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="571.5" y="478.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (3 samples, 0.06%)</title><rect x="568.5" y="451.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="571.5" y="462.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (3 samples, 0.06%)</title><rect x="568.5" y="435.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="571.5" y="446.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (5 samples, 0.10%)</title><rect x="569.8" y="563.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="572.8" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.06%)</title><rect x="570.3" y="547.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="573.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (9 samples, 0.19%)</title><rect x="572.0" y="803.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.0" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="573.4" y="787.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="576.4" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="573.4" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="576.4" y="782.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.04%)</title><rect x="573.4" y="755.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="576.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="574.2" y="803.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.2" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="574.2" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.2" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="574.2" y="771.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.2" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.04%)</title><rect x="574.2" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.06%)</title><rect x="574.6" y="819.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.06%)</title><rect x="574.6" y="803.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.6" y="814.0"></text>
</g>
<g>
<title>[worker-0 tid=13523] (316 samples, 6.53%)</title><rect x="575.4" y="963.0" width="77.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="578.4" y="974.0">[worker-0..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.04%)</title><rect x="575.6" y="947.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="578.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="575.6" y="931.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="578.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="575.6" y="915.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="578.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="575.6" y="899.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="578.6" y="910.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="575.6" y="883.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="578.6" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (313 samples, 6.47%)</title><rect x="576.1" y="947.0" width="76.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="579.1" y="958.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (313 samples, 6.47%)</title><rect x="576.1" y="931.0" width="76.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="579.1" y="942.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (313 samples, 6.47%)</title><rect x="576.1" y="915.0" width="76.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="579.1" y="926.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (64 samples, 1.32%)</title><rect x="576.4" y="899.0" width="15.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="579.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (63 samples, 1.30%)</title><rect x="576.6" y="883.0" width="15.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="579.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (34 samples, 0.70%)</title><rect x="576.6" y="867.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.06%)</title><rect x="576.8" y="851.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (7 samples, 0.14%)</title><rect x="577.6" y="851.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="580.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.14%)</title><rect x="577.6" y="835.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="580.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.14%)</title><rect x="577.6" y="819.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="580.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.14%)</title><rect x="577.6" y="803.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.12%)</title><rect x="577.8" y="787.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.8" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.12%)</title><rect x="577.8" y="771.0" width="1.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="580.8" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.10%)</title><rect x="578.1" y="755.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="581.1" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.10%)</title><rect x="578.1" y="739.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="581.1" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.10%)</title><rect x="578.1" y="723.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="581.1" y="734.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.10%)</title><rect x="578.1" y="707.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="581.1" y="718.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.10%)</title><rect x="578.1" y="691.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="581.1" y="702.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.08%)</title><rect x="578.3" y="675.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="581.3" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.08%)</title><rect x="578.3" y="659.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="581.3" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.08%)</title><rect x="578.3" y="643.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="581.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (23 samples, 0.48%)</title><rect x="579.3" y="851.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (23 samples, 0.48%)</title><rect x="579.3" y="835.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="582.3" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.14%)</title><rect x="579.3" y="819.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="582.3" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.10%)</title><rect x="579.5" y="803.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="582.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="580.3" y="787.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="583.3" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="580.3" y="771.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="583.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.33%)</title><rect x="581.0" y="819.0" width="3.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="584.0" y="830.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (16 samples, 0.33%)</title><rect x="581.0" y="803.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="584.0" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.10%)</title><rect x="583.7" y="787.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="586.7" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.10%)</title><rect x="583.7" y="771.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="586.7" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.08%)</title><rect x="583.9" y="755.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="586.9" y="766.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.06%)</title><rect x="584.2" y="739.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="587.2" y="750.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.06%)</title><rect x="584.2" y="723.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="587.2" y="734.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.04%)</title><rect x="584.2" y="707.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="587.2" y="718.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="584.2" y="691.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="587.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (7 samples, 0.14%)</title><rect x="584.9" y="867.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="587.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (7 samples, 0.14%)</title><rect x="584.9" y="851.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="587.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (7 samples, 0.14%)</title><rect x="584.9" y="835.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.12%)</title><rect x="585.1" y="819.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.12%)</title><rect x="585.1" y="803.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="588.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.12%)</title><rect x="585.1" y="787.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="588.1" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.06%)</title><rect x="585.1" y="771.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="588.1" y="782.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.04%)</title><rect x="585.4" y="755.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="588.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="585.9" y="771.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="588.9" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="585.9" y="755.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="588.9" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="586.1" y="739.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="589.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="586.1" y="723.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="589.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="586.1" y="707.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="589.1" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="586.1" y="691.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="589.1" y="702.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.04%)</title><rect x="586.1" y="675.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="589.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (22 samples, 0.45%)</title><rect x="586.6" y="867.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="589.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 0.45%)</title><rect x="586.6" y="851.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 0.45%)</title><rect x="586.6" y="835.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="589.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.39%)</title><rect x="587.3" y="819.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="590.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.39%)</title><rect x="587.3" y="803.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="590.3" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.08%)</title><rect x="587.6" y="787.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="590.6" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.29%)</title><rect x="588.5" y="787.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="591.5" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.27%)</title><rect x="588.8" y="771.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="591.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.27%)</title><rect x="588.8" y="755.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="591.8" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.27%)</title><rect x="588.8" y="739.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="591.8" y="750.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.27%)</title><rect x="588.8" y="723.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="591.8" y="734.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.27%)</title><rect x="588.8" y="707.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="591.8" y="718.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.06%)</title><rect x="588.8" y="691.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="591.8" y="702.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.21%)</title><rect x="589.5" y="691.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="592.5" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.21%)</title><rect x="589.5" y="675.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="592.5" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.21%)</title><rect x="589.5" y="659.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="592.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$101/1597720911.run (248 samples, 5.12%)</title><rect x="592.0" y="899.0" width="60.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.0" y="910.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (248 samples, 5.12%)</title><rect x="592.0" y="883.0" width="60.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="595.0" y="894.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (248 samples, 5.12%)</title><rect x="592.0" y="867.0" width="60.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.0" y="878.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$95/863668112.process (248 samples, 5.12%)</title><rect x="592.0" y="851.0" width="60.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.0" y="862.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$4 (248 samples, 5.12%)</title><rect x="592.0" y="835.0" width="60.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="595.0" y="846.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleUpsert (248 samples, 5.12%)</title><rect x="592.0" y="819.0" width="60.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.0" y="830.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/cache/LocalCache.computeIfPresent (14 samples, 0.29%)</title><rect x="592.7" y="803.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.7" y="814.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.compute (14 samples, 0.29%)</title><rect x="592.7" y="787.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.7" y="798.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.compute (12 samples, 0.25%)</title><rect x="593.2" y="771.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="596.2" y="782.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.removeLoadingValue (10 samples, 0.21%)</title><rect x="593.7" y="755.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="596.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.06%)</title><rect x="595.4" y="739.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="595.4" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.06%)</title><rect x="595.4" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.06%)</title><rect x="596.1" y="803.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="596.3" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (2 samples, 0.04%)</title><rect x="596.3" y="771.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (2 samples, 0.04%)</title><rect x="596.3" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.3" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="596.3" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.3" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="596.3" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding$1.initialValue (2 samples, 0.04%)</title><rect x="596.3" y="707.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="599.3" y="718.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="596.3" y="691.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="599.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (170 samples, 3.51%)</title><rect x="596.8" y="803.0" width="41.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.8" y="814.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (164 samples, 3.39%)</title><rect x="597.6" y="787.0" width="39.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.6" y="798.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.17%)</title><rect x="597.6" y="771.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="600.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (156 samples, 3.22%)</title><rect x="599.5" y="771.0" width="38.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.5" y="782.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (156 samples, 3.22%)</title><rect x="599.5" y="755.0" width="38.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.5" y="766.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (153 samples, 3.16%)</title><rect x="600.2" y="739.0" width="37.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.2" y="750.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (153 samples, 3.16%)</title><rect x="600.2" y="723.0" width="37.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="603.2" y="734.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (9 samples, 0.19%)</title><rect x="600.5" y="707.0" width="2.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="603.5" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (2 samples, 0.04%)</title><rect x="601.0" y="691.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="604.0" y="702.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="601.5" y="691.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="604.5" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.06%)</title><rect x="602.0" y="691.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="605.0" y="702.0"></text>
</g>
<g>
<title>__send (143 samples, 2.95%)</title><rect x="602.7" y="707.0" width="34.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="605.7" y="718.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (129 samples, 2.67%)</title><rect x="606.1" y="691.0" width="31.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="609.1" y="702.0">en..</text>
</g>
<g>
<title>do_syscall_64 (129 samples, 2.67%)</title><rect x="606.1" y="675.0" width="31.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="609.1" y="686.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (124 samples, 2.56%)</title><rect x="607.3" y="659.0" width="30.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="610.3" y="670.0">__..</text>
</g>
<g>
<title>__sys_sendto (124 samples, 2.56%)</title><rect x="607.3" y="643.0" width="30.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="610.3" y="654.0">__..</text>
</g>
<g>
<title>sock_sendmsg (118 samples, 2.44%)</title><rect x="607.6" y="627.0" width="28.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="610.6" y="638.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (116 samples, 2.40%)</title><rect x="607.6" y="611.0" width="28.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="610.6" y="622.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (116 samples, 2.40%)</title><rect x="607.6" y="595.0" width="28.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="610.6" y="606.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (114 samples, 2.36%)</title><rect x="608.0" y="579.0" width="27.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="611.0" y="590.0">t..</text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.10%)</title><rect x="609.0" y="563.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="612.0" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.08%)</title><rect x="609.3" y="547.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="612.3" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.06%)</title><rect x="609.5" y="531.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="612.5" y="542.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.08%)</title><rect x="610.2" y="563.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="613.2" y="574.0"></text>
</g>
<g>
<title>tcp_push (97 samples, 2.00%)</title><rect x="611.2" y="563.0" width="23.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="614.2" y="574.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (96 samples, 1.98%)</title><rect x="611.2" y="547.0" width="23.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="614.2" y="558.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (96 samples, 1.98%)</title><rect x="611.2" y="531.0" width="23.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="614.2" y="542.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (88 samples, 1.82%)</title><rect x="611.5" y="515.0" width="21.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="614.5" y="526.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (85 samples, 1.76%)</title><rect x="612.2" y="499.0" width="20.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="615.2" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (83 samples, 1.71%)</title><rect x="612.2" y="483.0" width="20.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="615.2" y="494.0"></text>
</g>
<g>
<title>ip_local_out (82 samples, 1.69%)</title><rect x="612.4" y="467.0" width="20.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="615.4" y="478.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.04%)</title><rect x="612.4" y="451.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="615.4" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.04%)</title><rect x="612.4" y="435.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="615.4" y="446.0"></text>
</g>
<g>
<title>ip_output (80 samples, 1.65%)</title><rect x="612.9" y="451.0" width="19.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="615.9" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (76 samples, 1.57%)</title><rect x="613.4" y="435.0" width="18.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="616.4" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (75 samples, 1.55%)</title><rect x="613.7" y="419.0" width="18.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="616.7" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (73 samples, 1.51%)</title><rect x="614.1" y="403.0" width="17.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="617.1" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (61 samples, 1.26%)</title><rect x="614.6" y="387.0" width="14.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="617.6" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (61 samples, 1.26%)</title><rect x="614.6" y="371.0" width="14.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="617.6" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (61 samples, 1.26%)</title><rect x="614.6" y="355.0" width="14.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="617.6" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (60 samples, 1.24%)</title><rect x="614.6" y="339.0" width="14.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="617.6" y="350.0"></text>
</g>
<g>
<title>net_rx_action (55 samples, 1.14%)</title><rect x="615.8" y="323.0" width="13.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="618.8" y="334.0"></text>
</g>
<g>
<title>process_backlog (53 samples, 1.10%)</title><rect x="616.3" y="307.0" width="13.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="619.3" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (51 samples, 1.05%)</title><rect x="616.8" y="291.0" width="12.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="619.8" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (51 samples, 1.05%)</title><rect x="616.8" y="275.0" width="12.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="619.8" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.04%)</title><rect x="616.8" y="259.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="619.8" y="270.0"></text>
</g>
<g>
<title>ip_rcv (49 samples, 1.01%)</title><rect x="617.3" y="259.0" width="12.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="620.3" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.04%)</title><rect x="617.6" y="243.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="620.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (46 samples, 0.95%)</title><rect x="618.0" y="243.0" width="11.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="621.0" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (46 samples, 0.95%)</title><rect x="618.0" y="227.0" width="11.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="621.0" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (45 samples, 0.93%)</title><rect x="618.0" y="211.0" width="11.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="621.0" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (45 samples, 0.93%)</title><rect x="618.0" y="195.0" width="11.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="621.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (43 samples, 0.89%)</title><rect x="618.5" y="179.0" width="10.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="621.5" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.08%)</title><rect x="618.5" y="163.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="621.5" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.10%)</title><rect x="619.5" y="163.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="622.5" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.06%)</title><rect x="620.0" y="147.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="623.0" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.06%)</title><rect x="620.0" y="131.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="623.0" y="142.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (3 samples, 0.06%)</title><rect x="620.0" y="115.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="623.0" y="126.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (3 samples, 0.06%)</title><rect x="620.0" y="99.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="623.0" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (34 samples, 0.70%)</title><rect x="620.7" y="163.0" width="8.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="623.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (34 samples, 0.70%)</title><rect x="620.7" y="147.0" width="8.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="623.7" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.06%)</title><rect x="621.5" y="131.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="624.5" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.06%)</title><rect x="621.5" y="115.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="624.5" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="621.7" y="99.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="624.7" y="110.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="621.7" y="83.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="624.7" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="621.7" y="67.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="624.7" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.04%)</title><rect x="622.2" y="131.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="625.2" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (12 samples, 0.25%)</title><rect x="622.9" y="131.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="625.9" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (12 samples, 0.25%)</title><rect x="622.9" y="115.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="625.9" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.25%)</title><rect x="622.9" y="99.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="625.9" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.25%)</title><rect x="622.9" y="83.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="625.9" y="94.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.19%)</title><rect x="625.8" y="131.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="628.8" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.08%)</title><rect x="626.8" y="115.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="629.8" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="626.8" y="99.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="629.8" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="626.8" y="83.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="629.8" y="94.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="627.3" y="99.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="630.3" y="110.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.04%)</title><rect x="627.3" y="83.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="630.3" y="94.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.04%)</title><rect x="628.0" y="131.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="631.0" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.04%)</title><rect x="628.5" y="131.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="631.5" y="142.0"></text>
</g>
<g>
<title>dev_queue_xmit (10 samples, 0.21%)</title><rect x="629.5" y="387.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="632.5" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.21%)</title><rect x="629.5" y="371.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="632.5" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.08%)</title><rect x="629.5" y="355.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="632.5" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.06%)</title><rect x="629.7" y="339.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="632.7" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.04%)</title><rect x="630.0" y="323.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="633.0" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.04%)</title><rect x="630.0" y="307.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="633.0" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.04%)</title><rect x="630.0" y="291.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="633.0" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.10%)</title><rect x="630.7" y="355.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="633.7" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.06%)</title><rect x="631.2" y="339.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="634.2" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.04%)</title><rect x="631.9" y="435.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="634.9" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (2 samples, 0.04%)</title><rect x="631.9" y="419.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="634.9" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.04%)</title><rect x="631.9" y="403.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="634.9" y="414.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.04%)</title><rect x="632.4" y="483.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="635.4" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.08%)</title><rect x="633.6" y="515.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="636.6" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="634.1" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="637.1" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="634.1" y="483.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="637.1" y="494.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="634.1" y="467.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="637.1" y="478.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.06%)</title><rect x="635.1" y="563.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="638.1" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.04%)</title><rect x="635.4" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="638.4" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.04%)</title><rect x="635.8" y="611.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="638.8" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.10%)</title><rect x="636.3" y="627.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="639.3" y="638.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.10%)</title><rect x="636.3" y="611.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="639.3" y="622.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.10%)</title><rect x="636.3" y="595.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="639.3" y="606.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.08%)</title><rect x="636.6" y="579.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="639.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.06%)</title><rect x="637.5" y="787.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="637.8" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="637.8" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (58 samples, 1.20%)</title><rect x="638.3" y="803.0" width="14.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (42 samples, 0.87%)</title><rect x="642.2" y="787.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.08%)</title><rect x="642.2" y="771.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.08%)</title><rect x="642.2" y="755.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$106/1677529807.run (37 samples, 0.76%)</title><rect x="643.4" y="771.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (37 samples, 0.76%)</title><rect x="643.4" y="755.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="646.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (37 samples, 0.76%)</title><rect x="643.4" y="739.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (36 samples, 0.74%)</title><rect x="643.4" y="723.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (35 samples, 0.72%)</title><rect x="643.4" y="707.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="646.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (33 samples, 0.68%)</title><rect x="643.9" y="691.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="646.9" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (33 samples, 0.68%)</title><rect x="643.9" y="675.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.21%)</title><rect x="649.5" y="659.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="652.5" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.21%)</title><rect x="649.5" y="643.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="652.5" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="650.7" y="627.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.7" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.04%)</title><rect x="650.7" y="611.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.7" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.06%)</title><rect x="651.2" y="627.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="654.2" y="638.0"></text>
</g>
<g>
<title>[worker-1 tid=13518] (317 samples, 6.55%)</title><rect x="652.4" y="963.0" width="77.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="655.4" y="974.0">[worker-1..</text>
</g>
<g>
<title>java/lang/Thread.run (317 samples, 6.55%)</title><rect x="652.4" y="947.0" width="77.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.4" y="958.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (317 samples, 6.55%)</title><rect x="652.4" y="931.0" width="77.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="655.4" y="942.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (317 samples, 6.55%)</title><rect x="652.4" y="915.0" width="77.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.4" y="926.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.04%)</title><rect x="653.1" y="899.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="653.1" y="883.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="653.1" y="867.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="653.1" y="851.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (55 samples, 1.14%)</title><rect x="653.6" y="899.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (54 samples, 1.12%)</title><rect x="653.9" y="883.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (40 samples, 0.83%)</title><rect x="653.9" y="867.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="656.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (7 samples, 0.14%)</title><rect x="654.4" y="851.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.14%)</title><rect x="654.4" y="835.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.12%)</title><rect x="654.4" y="819.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="657.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.12%)</title><rect x="654.4" y="803.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.12%)</title><rect x="654.4" y="787.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="657.4" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.10%)</title><rect x="654.6" y="771.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="657.6" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="654.9" y="755.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="657.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.08%)</title><rect x="654.9" y="739.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="657.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.08%)</title><rect x="654.9" y="723.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="657.9" y="734.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.08%)</title><rect x="654.9" y="707.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="657.9" y="718.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.08%)</title><rect x="654.9" y="691.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="657.9" y="702.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.06%)</title><rect x="655.1" y="675.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="658.1" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.06%)</title><rect x="655.1" y="659.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="658.1" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="655.1" y="643.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="658.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (31 samples, 0.64%)</title><rect x="656.1" y="851.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (31 samples, 0.64%)</title><rect x="656.1" y="835.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="659.1" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.17%)</title><rect x="656.1" y="819.0" width="1.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="659.1" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.12%)</title><rect x="656.6" y="803.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="659.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.48%)</title><rect x="658.0" y="819.0" width="5.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="661.0" y="830.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (21 samples, 0.43%)</title><rect x="658.5" y="803.0" width="5.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="661.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.14%)</title><rect x="661.9" y="787.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="664.9" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.14%)</title><rect x="661.9" y="771.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="664.9" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.12%)</title><rect x="662.2" y="755.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="665.2" y="766.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.08%)</title><rect x="662.4" y="739.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="665.4" y="750.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.06%)</title><rect x="662.7" y="723.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="665.7" y="734.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.04%)</title><rect x="662.7" y="707.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="665.7" y="718.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="662.7" y="691.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="665.7" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.04%)</title><rect x="662.7" y="675.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="665.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.06%)</title><rect x="663.6" y="867.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="666.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.06%)</title><rect x="663.6" y="851.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.06%)</title><rect x="663.6" y="835.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.06%)</title><rect x="663.6" y="819.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.06%)</title><rect x="663.6" y="803.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.06%)</title><rect x="663.6" y="787.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.23%)</title><rect x="664.4" y="867.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.23%)</title><rect x="664.4" y="851.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="667.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.23%)</title><rect x="664.4" y="835.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="667.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.21%)</title><rect x="664.6" y="819.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="667.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.21%)</title><rect x="664.6" y="803.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.6" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.19%)</title><rect x="664.9" y="787.0" width="2.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="667.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.17%)</title><rect x="665.1" y="771.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="668.1" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.17%)</title><rect x="665.1" y="755.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="668.1" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.17%)</title><rect x="665.1" y="739.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="668.1" y="750.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.14%)</title><rect x="665.3" y="723.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="668.3" y="734.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.14%)</title><rect x="665.3" y="707.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="668.3" y="718.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.12%)</title><rect x="665.6" y="691.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="668.6" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.12%)</title><rect x="665.6" y="675.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="668.6" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.12%)</title><rect x="665.6" y="659.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="668.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$101/1597720911.run (257 samples, 5.31%)</title><rect x="667.0" y="899.0" width="62.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.0" y="910.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (257 samples, 5.31%)</title><rect x="667.0" y="883.0" width="62.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.0" y="894.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (257 samples, 5.31%)</title><rect x="667.0" y="867.0" width="62.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.0" y="878.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$95/863668112.process (256 samples, 5.29%)</title><rect x="667.3" y="851.0" width="62.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.3" y="862.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$4 (256 samples, 5.29%)</title><rect x="667.3" y="835.0" width="62.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="670.3" y="846.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleUpsert (256 samples, 5.29%)</title><rect x="667.3" y="819.0" width="62.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="670.3" y="830.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/cache/LocalCache.computeIfPresent (14 samples, 0.29%)</title><rect x="667.5" y="803.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.5" y="814.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.compute (14 samples, 0.29%)</title><rect x="667.5" y="787.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="670.5" y="798.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.compute (11 samples, 0.23%)</title><rect x="667.5" y="771.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="670.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.removeLoadingValue (7 samples, 0.14%)</title><rect x="668.0" y="755.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="671.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="669.7" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="669.7" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="672.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.04%)</title><rect x="669.7" y="723.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="672.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.04%)</title><rect x="669.7" y="707.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.04%)</title><rect x="669.7" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="672.7" y="702.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.hash (3 samples, 0.06%)</title><rect x="670.2" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.2" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/Equivalence.hash (3 samples, 0.06%)</title><rect x="670.2" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.2" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Equivalence$Equals.doHash (3 samples, 0.06%)</title><rect x="670.2" y="739.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.06%)</title><rect x="670.2" y="723.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.06%)</title><rect x="670.2" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (164 samples, 3.39%)</title><rect x="671.2" y="803.0" width="40.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="674.2" y="814.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (156 samples, 3.22%)</title><rect x="673.1" y="787.0" width="38.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.1" y="798.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.19%)</title><rect x="673.1" y="771.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (147 samples, 3.04%)</title><rect x="675.3" y="771.0" width="35.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="678.3" y="782.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (147 samples, 3.04%)</title><rect x="675.3" y="755.0" width="35.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.3" y="766.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (146 samples, 3.02%)</title><rect x="675.6" y="739.0" width="35.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="678.6" y="750.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (146 samples, 3.02%)</title><rect x="675.6" y="723.0" width="35.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.6" y="734.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.08%)</title><rect x="676.1" y="707.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="679.1" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.08%)</title><rect x="676.1" y="691.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="679.1" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="676.6" y="675.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="679.6" y="686.0"></text>
</g>
<g>
<title>__send (139 samples, 2.87%)</title><rect x="677.3" y="707.0" width="33.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="680.3" y="718.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (131 samples, 2.71%)</title><rect x="679.2" y="691.0" width="32.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="682.2" y="702.0">en..</text>
</g>
<g>
<title>do_syscall_64 (131 samples, 2.71%)</title><rect x="679.2" y="675.0" width="32.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="682.2" y="686.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (128 samples, 2.64%)</title><rect x="680.0" y="659.0" width="31.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="683.0" y="670.0">__..</text>
</g>
<g>
<title>__sys_sendto (128 samples, 2.64%)</title><rect x="680.0" y="643.0" width="31.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="683.0" y="654.0">__..</text>
</g>
<g>
<title>sock_sendmsg (123 samples, 2.54%)</title><rect x="680.5" y="627.0" width="29.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="683.5" y="638.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (116 samples, 2.40%)</title><rect x="681.2" y="611.0" width="28.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="684.2" y="622.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (116 samples, 2.40%)</title><rect x="681.2" y="595.0" width="28.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="684.2" y="606.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (115 samples, 2.38%)</title><rect x="681.4" y="579.0" width="28.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="684.4" y="590.0">tc..</text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="681.9" y="563.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="684.9" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.04%)</title><rect x="682.6" y="563.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="685.6" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.04%)</title><rect x="682.6" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="685.6" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.08%)</title><rect x="683.1" y="563.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="686.1" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.08%)</title><rect x="683.1" y="547.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="686.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (2 samples, 0.04%)</title><rect x="683.4" y="531.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="686.4" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.04%)</title><rect x="683.4" y="515.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="686.4" y="526.0"></text>
</g>
<g>
<title>tcp_push (101 samples, 2.09%)</title><rect x="684.6" y="563.0" width="24.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="687.6" y="574.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (100 samples, 2.07%)</title><rect x="684.6" y="547.0" width="24.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="687.6" y="558.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (100 samples, 2.07%)</title><rect x="684.6" y="531.0" width="24.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="687.6" y="542.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (93 samples, 1.92%)</title><rect x="685.1" y="515.0" width="22.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="688.1" y="526.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (87 samples, 1.80%)</title><rect x="686.5" y="499.0" width="21.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="689.5" y="510.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (86 samples, 1.78%)</title><rect x="686.5" y="483.0" width="21.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="689.5" y="494.0"></text>
</g>
<g>
<title>ip_local_out (83 samples, 1.71%)</title><rect x="687.0" y="467.0" width="20.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="690.0" y="478.0"></text>
</g>
<g>
<title>ip_output (83 samples, 1.71%)</title><rect x="687.0" y="451.0" width="20.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="690.0" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (77 samples, 1.59%)</title><rect x="687.0" y="435.0" width="18.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="690.0" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (77 samples, 1.59%)</title><rect x="687.0" y="419.0" width="18.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="690.0" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (76 samples, 1.57%)</title><rect x="687.3" y="403.0" width="18.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="690.3" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (62 samples, 1.28%)</title><rect x="688.7" y="387.0" width="15.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="691.7" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (62 samples, 1.28%)</title><rect x="688.7" y="371.0" width="15.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="691.7" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (62 samples, 1.28%)</title><rect x="688.7" y="355.0" width="15.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="691.7" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (62 samples, 1.28%)</title><rect x="688.7" y="339.0" width="15.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="691.7" y="350.0"></text>
</g>
<g>
<title>net_rx_action (60 samples, 1.24%)</title><rect x="689.2" y="323.0" width="14.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="692.2" y="334.0"></text>
</g>
<g>
<title>process_backlog (58 samples, 1.20%)</title><rect x="689.7" y="307.0" width="14.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="692.7" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (55 samples, 1.14%)</title><rect x="690.5" y="291.0" width="13.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="693.5" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (55 samples, 1.14%)</title><rect x="690.5" y="275.0" width="13.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="693.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv (54 samples, 1.12%)</title><rect x="690.7" y="259.0" width="13.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="693.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.04%)</title><rect x="690.7" y="243.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="693.7" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (52 samples, 1.07%)</title><rect x="691.2" y="243.0" width="12.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="694.2" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (52 samples, 1.07%)</title><rect x="691.2" y="227.0" width="12.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="694.2" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (52 samples, 1.07%)</title><rect x="691.2" y="211.0" width="12.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="694.2" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (52 samples, 1.07%)</title><rect x="691.2" y="195.0" width="12.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="694.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (51 samples, 1.05%)</title><rect x="691.4" y="179.0" width="12.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="694.4" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.06%)</title><rect x="691.9" y="163.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="694.9" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.08%)</title><rect x="693.1" y="163.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="696.1" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.08%)</title><rect x="693.1" y="147.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="696.1" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.04%)</title><rect x="693.6" y="131.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="696.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (39 samples, 0.81%)</title><rect x="694.4" y="163.0" width="9.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="697.4" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (36 samples, 0.74%)</title><rect x="695.1" y="147.0" width="8.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="698.1" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (13 samples, 0.27%)</title><rect x="696.1" y="131.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="699.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (13 samples, 0.27%)</title><rect x="696.1" y="115.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="699.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.27%)</title><rect x="696.1" y="99.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="699.1" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.27%)</title><rect x="696.1" y="83.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="699.1" y="94.0"></text>
</g>
<g>
<title>tcp_ack (16 samples, 0.33%)</title><rect x="699.2" y="131.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="702.2" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.17%)</title><rect x="700.4" y="115.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="703.4" y="126.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.10%)</title><rect x="700.9" y="99.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="703.9" y="110.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.08%)</title><rect x="701.2" y="83.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="704.2" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.04%)</title><rect x="701.7" y="67.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="704.7" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.04%)</title><rect x="701.7" y="51.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="704.7" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.04%)</title><rect x="702.4" y="115.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="705.4" y="126.0"></text>
</g>
<g>
<title>dev_queue_xmit (8 samples, 0.17%)</title><rect x="703.9" y="387.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="706.9" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.17%)</title><rect x="703.9" y="371.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="706.9" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.06%)</title><rect x="704.6" y="355.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="707.6" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="704.6" y="339.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="707.6" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.10%)</title><rect x="705.8" y="435.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="708.8" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.08%)</title><rect x="706.1" y="419.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="709.1" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (4 samples, 0.08%)</title><rect x="706.1" y="403.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="709.1" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (3 samples, 0.06%)</title><rect x="706.3" y="387.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="709.3" y="398.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (2 samples, 0.04%)</title><rect x="706.3" y="371.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="709.3" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.04%)</title><rect x="708.0" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="711.0" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.08%)</title><rect x="709.5" y="611.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="712.5" y="622.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (2 samples, 0.04%)</title><rect x="709.5" y="595.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="712.5" y="606.0"></text>
</g>
<g>
<title>sock_has_perm (2 samples, 0.04%)</title><rect x="709.5" y="579.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="712.5" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.06%)</title><rect x="710.4" y="627.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="713.4" y="638.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="710.4" y="611.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="713.4" y="622.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="710.4" y="595.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="713.4" y="606.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="710.7" y="579.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="713.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (75 samples, 1.55%)</title><rect x="711.2" y="803.0" width="18.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (59 samples, 1.22%)</title><rect x="715.1" y="787.0" width="14.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.06%)</title><rect x="715.1" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="718.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.06%)</title><rect x="715.1" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$106/1677529807.run (55 samples, 1.14%)</title><rect x="716.0" y="771.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="719.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (55 samples, 1.14%)</title><rect x="716.0" y="755.0" width="13.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (55 samples, 1.14%)</title><rect x="716.0" y="739.0" width="13.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (54 samples, 1.12%)</title><rect x="716.0" y="723.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (52 samples, 1.07%)</title><rect x="716.0" y="707.0" width="12.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.04%)</title><rect x="716.8" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="719.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (47 samples, 0.97%)</title><rect x="717.3" y="691.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (47 samples, 0.97%)</title><rect x="717.3" y="675.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (26 samples, 0.54%)</title><rect x="722.4" y="659.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.4" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (26 samples, 0.54%)</title><rect x="722.4" y="643.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.4" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.10%)</title><rect x="724.8" y="627.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="727.8" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.10%)</title><rect x="724.8" y="611.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="727.8" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (11 samples, 0.23%)</title><rect x="726.0" y="627.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="729.0" y="638.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="728.7" y="707.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="731.7" y="718.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="728.7" y="691.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="731.7" y="702.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="728.7" y="675.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="731.7" y="686.0"></text>
</g>
<g>
<title>[worker-2 tid=13524] (309 samples, 6.38%)</title><rect x="729.7" y="963.0" width="75.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="732.7" y="974.0">[worker-..</text>
</g>
<g>
<title>java/lang/Thread.run (307 samples, 6.34%)</title><rect x="730.2" y="947.0" width="74.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.2" y="958.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (307 samples, 6.34%)</title><rect x="730.2" y="931.0" width="74.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.2" y="942.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (307 samples, 6.34%)</title><rect x="730.2" y="915.0" width="74.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.2" y="926.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.04%)</title><rect x="730.7" y="899.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="730.7" y="883.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="730.7" y="867.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="730.7" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="733.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (57 samples, 1.18%)</title><rect x="731.2" y="899.0" width="13.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (57 samples, 1.18%)</title><rect x="731.2" y="883.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="734.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (35 samples, 0.72%)</title><rect x="731.2" y="867.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.06%)</title><rect x="731.4" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="734.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (9 samples, 0.19%)</title><rect x="732.1" y="851.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.19%)</title><rect x="732.1" y="835.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.19%)</title><rect x="732.1" y="819.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.19%)</title><rect x="732.1" y="803.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.19%)</title><rect x="732.1" y="787.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.1" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.19%)</title><rect x="732.1" y="771.0" width="2.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="735.1" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.12%)</title><rect x="732.9" y="755.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="735.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.12%)</title><rect x="732.9" y="739.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="735.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.12%)</title><rect x="732.9" y="723.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="735.9" y="734.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.12%)</title><rect x="732.9" y="707.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="735.9" y="718.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.12%)</title><rect x="732.9" y="691.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="735.9" y="702.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.10%)</title><rect x="733.1" y="675.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="736.1" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.10%)</title><rect x="733.1" y="659.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="736.1" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.10%)</title><rect x="733.1" y="643.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="736.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (22 samples, 0.45%)</title><rect x="734.3" y="851.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="737.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (22 samples, 0.45%)</title><rect x="734.3" y="835.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="737.3" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.17%)</title><rect x="734.3" y="819.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="737.3" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.12%)</title><rect x="734.8" y="803.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="737.8" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="735.3" y="787.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="738.3" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.08%)</title><rect x="735.3" y="771.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="738.3" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.06%)</title><rect x="735.6" y="755.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="738.6" y="766.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="735.8" y="739.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="738.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.29%)</title><rect x="736.3" y="819.0" width="3.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="739.3" y="830.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (13 samples, 0.27%)</title><rect x="736.5" y="803.0" width="3.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="739.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="739.2" y="787.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="742.2" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="739.2" y="771.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="742.2" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="739.2" y="755.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="742.2" y="766.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="739.2" y="739.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="742.2" y="750.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.04%)</title><rect x="739.2" y="723.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="742.2" y="734.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.04%)</title><rect x="739.2" y="707.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="742.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5 samples, 0.10%)</title><rect x="739.7" y="867.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5 samples, 0.10%)</title><rect x="739.7" y="851.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5 samples, 0.10%)</title><rect x="739.7" y="835.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="742.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.06%)</title><rect x="740.2" y="819.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.06%)</title><rect x="740.2" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="743.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.06%)</title><rect x="740.2" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="740.4" y="771.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="743.4" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="740.4" y="755.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="743.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (17 samples, 0.35%)</title><rect x="740.9" y="867.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="743.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.35%)</title><rect x="740.9" y="851.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.35%)</title><rect x="740.9" y="835.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="743.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.31%)</title><rect x="741.4" y="819.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.31%)</title><rect x="741.4" y="803.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.4" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="741.4" y="787.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="744.4" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.27%)</title><rect x="741.9" y="787.0" width="3.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="744.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.21%)</title><rect x="742.6" y="771.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="745.6" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.21%)</title><rect x="742.6" y="755.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="745.6" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.21%)</title><rect x="742.6" y="739.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="745.6" y="750.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.21%)</title><rect x="742.6" y="723.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="745.6" y="734.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.21%)</title><rect x="742.6" y="707.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="745.6" y="718.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.19%)</title><rect x="742.9" y="691.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="745.9" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.19%)</title><rect x="742.9" y="675.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="745.9" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.19%)</title><rect x="742.9" y="659.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="745.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$101/1597720911.run (246 samples, 5.08%)</title><rect x="745.1" y="899.0" width="59.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.1" y="910.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (246 samples, 5.08%)</title><rect x="745.1" y="883.0" width="59.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.1" y="894.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (246 samples, 5.08%)</title><rect x="745.1" y="867.0" width="59.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.1" y="878.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$95/863668112.process (245 samples, 5.06%)</title><rect x="745.3" y="851.0" width="59.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.3" y="862.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$4 (245 samples, 5.06%)</title><rect x="745.3" y="835.0" width="59.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.3" y="846.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleUpsert (245 samples, 5.06%)</title><rect x="745.3" y="819.0" width="59.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="748.3" y="830.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/cache/LocalCache.computeIfPresent (17 samples, 0.35%)</title><rect x="745.8" y="803.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.8" y="814.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.compute (17 samples, 0.35%)</title><rect x="745.8" y="787.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.8" y="798.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.compute (12 samples, 0.25%)</title><rect x="746.3" y="771.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.3" y="782.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.removeLoadingValue (2 samples, 0.04%)</title><rect x="747.3" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="747.7" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="747.7" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.04%)</title><rect x="747.7" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="750.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.04%)</title><rect x="747.7" y="707.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.04%)</title><rect x="747.7" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="748.2" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="751.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="748.2" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="751.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="748.2" y="723.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.2" y="734.0"></text>
</g>
<g>
<title>os::Posix::supports_monotonic_clock() (2 samples, 0.04%)</title><rect x="748.7" y="755.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="751.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.hash (2 samples, 0.04%)</title><rect x="749.2" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.2" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/Equivalence.hash (2 samples, 0.04%)</title><rect x="749.2" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.2" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Equivalence$Equals.doHash (2 samples, 0.04%)</title><rect x="749.2" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="752.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="749.2" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="752.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="749.2" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.08%)</title><rect x="749.9" y="803.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.06%)</title><rect x="750.2" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (3 samples, 0.06%)</title><rect x="750.2" y="771.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (3 samples, 0.06%)</title><rect x="750.2" y="755.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.2" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.06%)</title><rect x="750.2" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="753.2" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.06%)</title><rect x="750.2" y="723.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding$1.initialValue (3 samples, 0.06%)</title><rect x="750.2" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.2" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="750.4" y="691.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="753.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (156 samples, 3.22%)</title><rect x="750.9" y="803.0" width="38.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.9" y="814.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.04%)</title><rect x="751.4" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="751.4" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="751.4" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="754.4" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="751.4" y="739.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="754.4" y="750.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="751.4" y="723.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="754.4" y="734.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="751.4" y="707.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="754.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (149 samples, 3.08%)</title><rect x="751.9" y="787.0" width="36.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="754.9" y="798.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.21%)</title><rect x="751.9" y="771.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="754.9" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (139 samples, 2.87%)</title><rect x="754.3" y="771.0" width="33.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="757.3" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (138 samples, 2.85%)</title><rect x="754.6" y="755.0" width="33.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.6" y="766.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="754.8" y="739.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="757.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (134 samples, 2.77%)</title><rect x="755.5" y="739.0" width="32.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.5" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (134 samples, 2.77%)</title><rect x="755.5" y="723.0" width="32.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="758.5" y="734.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.08%)</title><rect x="756.0" y="707.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="759.0" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="756.5" y="691.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="759.5" y="702.0"></text>
</g>
<g>
<title>__send (127 samples, 2.62%)</title><rect x="757.3" y="707.0" width="30.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="760.3" y="718.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (117 samples, 2.42%)</title><rect x="759.7" y="691.0" width="28.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="762.7" y="702.0">en..</text>
</g>
<g>
<title>do_syscall_64 (117 samples, 2.42%)</title><rect x="759.7" y="675.0" width="28.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="762.7" y="686.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (115 samples, 2.38%)</title><rect x="760.2" y="659.0" width="28.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="763.2" y="670.0">__..</text>
</g>
<g>
<title>__sys_sendto (115 samples, 2.38%)</title><rect x="760.2" y="643.0" width="28.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="763.2" y="654.0">__..</text>
</g>
<g>
<title>sock_sendmsg (109 samples, 2.25%)</title><rect x="760.7" y="627.0" width="26.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="763.7" y="638.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (107 samples, 2.21%)</title><rect x="760.9" y="611.0" width="26.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="763.9" y="622.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (105 samples, 2.17%)</title><rect x="761.4" y="595.0" width="25.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="764.4" y="606.0">t..</text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="762.1" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="765.1" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="762.1" y="563.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="765.1" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (98 samples, 2.02%)</title><rect x="762.9" y="579.0" width="23.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="765.9" y="590.0">t..</text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.23%)</title><rect x="763.6" y="563.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="766.6" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.21%)</title><rect x="763.8" y="547.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="766.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (4 samples, 0.08%)</title><rect x="764.1" y="531.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="767.1" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.06%)</title><rect x="764.3" y="515.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="767.3" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.04%)</title><rect x="764.6" y="499.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="767.6" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.06%)</title><rect x="765.1" y="531.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="768.1" y="542.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.04%)</title><rect x="765.8" y="531.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="768.8" y="542.0"></text>
</g>
<g>
<title>tcp_push (82 samples, 1.69%)</title><rect x="766.5" y="563.0" width="20.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="769.5" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (82 samples, 1.69%)</title><rect x="766.5" y="547.0" width="20.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="769.5" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (81 samples, 1.67%)</title><rect x="766.8" y="531.0" width="19.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="769.8" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (77 samples, 1.59%)</title><rect x="767.2" y="515.0" width="18.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="770.2" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (71 samples, 1.47%)</title><rect x="767.7" y="499.0" width="17.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="770.7" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (71 samples, 1.47%)</title><rect x="767.7" y="483.0" width="17.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="770.7" y="494.0"></text>
</g>
<g>
<title>ip_local_out (69 samples, 1.43%)</title><rect x="767.7" y="467.0" width="16.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="770.7" y="478.0"></text>
</g>
<g>
<title>ip_output (69 samples, 1.43%)</title><rect x="767.7" y="451.0" width="16.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="770.7" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (62 samples, 1.28%)</title><rect x="768.2" y="435.0" width="15.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="771.2" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (62 samples, 1.28%)</title><rect x="768.2" y="419.0" width="15.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="771.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (62 samples, 1.28%)</title><rect x="768.2" y="403.0" width="15.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="771.2" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (52 samples, 1.07%)</title><rect x="768.5" y="387.0" width="12.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="771.5" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (52 samples, 1.07%)</title><rect x="768.5" y="371.0" width="12.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="771.5" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (52 samples, 1.07%)</title><rect x="768.5" y="355.0" width="12.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="771.5" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (51 samples, 1.05%)</title><rect x="768.5" y="339.0" width="12.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="771.5" y="350.0"></text>
</g>
<g>
<title>net_rx_action (50 samples, 1.03%)</title><rect x="768.5" y="323.0" width="12.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="771.5" y="334.0"></text>
</g>
<g>
<title>process_backlog (48 samples, 0.99%)</title><rect x="769.0" y="307.0" width="11.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="772.0" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (46 samples, 0.95%)</title><rect x="769.4" y="291.0" width="11.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="772.4" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (45 samples, 0.93%)</title><rect x="769.7" y="275.0" width="11.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="772.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv (44 samples, 0.91%)</title><rect x="769.9" y="259.0" width="10.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="772.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (44 samples, 0.91%)</title><rect x="769.9" y="243.0" width="10.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="772.9" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (41 samples, 0.85%)</title><rect x="770.2" y="227.0" width="10.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="773.2" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (41 samples, 0.85%)</title><rect x="770.2" y="211.0" width="10.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="773.2" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (41 samples, 0.85%)</title><rect x="770.2" y="195.0" width="10.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="773.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (41 samples, 0.85%)</title><rect x="770.2" y="179.0" width="10.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="773.2" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.06%)</title><rect x="770.7" y="163.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="773.7" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.10%)</title><rect x="771.9" y="163.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="774.9" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.06%)</title><rect x="772.4" y="147.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="775.4" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.04%)</title><rect x="772.6" y="131.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="775.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (29 samples, 0.60%)</title><rect x="773.1" y="163.0" width="7.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="776.1" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (29 samples, 0.60%)</title><rect x="773.1" y="147.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="776.1" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (12 samples, 0.25%)</title><rect x="773.6" y="131.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="776.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (12 samples, 0.25%)</title><rect x="773.6" y="115.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="776.6" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.25%)</title><rect x="773.6" y="99.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="776.6" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.23%)</title><rect x="773.8" y="83.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="776.8" y="94.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.23%)</title><rect x="776.5" y="131.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="779.5" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.10%)</title><rect x="777.0" y="115.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="780.0" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="777.0" y="99.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="780.0" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="777.0" y="83.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="780.0" y="94.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="777.5" y="99.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="780.5" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (2 samples, 0.04%)</title><rect x="778.2" y="115.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="781.2" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="779.4" y="131.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="782.4" y="142.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (2 samples, 0.04%)</title><rect x="780.2" y="227.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="783.2" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.19%)</title><rect x="781.1" y="387.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="784.1" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.17%)</title><rect x="781.4" y="371.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="784.4" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.04%)</title><rect x="781.9" y="355.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="784.9" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="781.9" y="339.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="784.9" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.06%)</title><rect x="782.6" y="355.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="785.6" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.08%)</title><rect x="783.3" y="435.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="786.3" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.08%)</title><rect x="783.3" y="419.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="786.3" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (4 samples, 0.08%)</title><rect x="783.3" y="403.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="786.3" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (4 samples, 0.08%)</title><rect x="783.3" y="387.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="786.3" y="398.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.06%)</title><rect x="785.0" y="499.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="788.0" y="510.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.04%)</title><rect x="785.3" y="483.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="788.3" y="494.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.08%)</title><rect x="787.2" y="627.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="790.2" y="638.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="787.2" y="611.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="790.2" y="622.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="787.2" y="595.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="790.2" y="606.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="787.5" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="790.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.06%)</title><rect x="788.2" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="788.5" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="788.5" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (65 samples, 1.34%)</title><rect x="789.2" y="803.0" width="15.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (51 samples, 1.05%)</title><rect x="792.6" y="787.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="795.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.04%)</title><rect x="792.6" y="771.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="795.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.04%)</title><rect x="792.6" y="755.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="795.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$106/1677529807.run (49 samples, 1.01%)</title><rect x="793.1" y="771.0" width="11.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="796.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (49 samples, 1.01%)</title><rect x="793.1" y="755.0" width="11.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (49 samples, 1.01%)</title><rect x="793.1" y="739.0" width="11.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="796.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="793.1" y="723.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="796.1" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="793.1" y="707.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="796.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (47 samples, 0.97%)</title><rect x="793.6" y="723.0" width="11.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="796.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (42 samples, 0.87%)</title><rect x="794.6" y="707.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="797.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.04%)</title><rect x="795.5" y="691.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="798.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (36 samples, 0.74%)</title><rect x="796.0" y="691.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (36 samples, 0.74%)</title><rect x="796.0" y="675.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (22 samples, 0.45%)</title><rect x="799.4" y="659.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.4" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (22 samples, 0.45%)</title><rect x="799.4" y="643.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="802.4" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.12%)</title><rect x="801.9" y="627.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="804.9" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.12%)</title><rect x="801.9" y="611.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.9" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (6 samples, 0.12%)</title><rect x="803.3" y="627.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="806.3" y="638.0"></text>
</g>
<g>
<title>[worker-3 tid=13521] (312 samples, 6.45%)</title><rect x="805.0" y="963.0" width="76.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="808.0" y="974.0">[worker-..</text>
</g>
<g>
<title>java/lang/Thread.run (310 samples, 6.40%)</title><rect x="805.5" y="947.0" width="75.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="808.5" y="958.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (310 samples, 6.40%)</title><rect x="805.5" y="931.0" width="75.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.5" y="942.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (310 samples, 6.40%)</title><rect x="805.5" y="915.0" width="75.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.5" y="926.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (58 samples, 1.20%)</title><rect x="806.0" y="899.0" width="14.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="809.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (58 samples, 1.20%)</title><rect x="806.0" y="883.0" width="14.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (33 samples, 0.68%)</title><rect x="806.0" y="867.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="809.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (6 samples, 0.12%)</title><rect x="806.3" y="851.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.12%)</title><rect x="806.3" y="835.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.12%)</title><rect x="806.3" y="819.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.12%)</title><rect x="806.3" y="803.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.12%)</title><rect x="806.3" y="787.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.3" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.10%)</title><rect x="806.5" y="771.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="809.5" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="807.0" y="755.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="810.0" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="807.0" y="739.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="810.0" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.06%)</title><rect x="807.0" y="723.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="810.0" y="734.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.06%)</title><rect x="807.0" y="707.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="810.0" y="718.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.06%)</title><rect x="807.0" y="691.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="810.0" y="702.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.06%)</title><rect x="807.0" y="675.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="810.0" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.06%)</title><rect x="807.0" y="659.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="810.0" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="807.0" y="643.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="810.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (26 samples, 0.54%)</title><rect x="807.7" y="851.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="810.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (25 samples, 0.52%)</title><rect x="808.0" y="835.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="811.0" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.14%)</title><rect x="808.0" y="819.0" width="1.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="811.0" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.08%)</title><rect x="808.7" y="803.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="811.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.37%)</title><rect x="809.7" y="819.0" width="4.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="812.7" y="830.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (16 samples, 0.33%)</title><rect x="810.2" y="803.0" width="3.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="813.2" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="813.1" y="787.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="816.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.08%)</title><rect x="813.1" y="771.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="816.1" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="813.6" y="755.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="816.6" y="766.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="813.6" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="816.6" y="750.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.04%)</title><rect x="813.6" y="723.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="816.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (10 samples, 0.21%)</title><rect x="814.1" y="867.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="817.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (10 samples, 0.21%)</title><rect x="814.1" y="851.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="817.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (10 samples, 0.21%)</title><rect x="814.1" y="835.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="817.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8 samples, 0.17%)</title><rect x="814.5" y="819.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.17%)</title><rect x="814.5" y="803.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.17%)</title><rect x="814.5" y="787.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="817.5" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.06%)</title><rect x="814.5" y="771.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="817.5" y="782.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.04%)</title><rect x="814.8" y="755.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="817.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="814.8" y="739.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="817.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="814.8" y="723.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="817.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="815.3" y="771.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="818.3" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (5 samples, 0.10%)</title><rect x="815.3" y="755.0" width="1.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="818.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="815.8" y="739.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="818.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="815.8" y="723.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="818.8" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.06%)</title><rect x="815.8" y="707.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="818.8" y="718.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.06%)</title><rect x="815.8" y="691.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="818.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.31%)</title><rect x="816.5" y="867.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.31%)</title><rect x="816.5" y="851.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="819.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.31%)</title><rect x="816.5" y="835.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.27%)</title><rect x="817.0" y="819.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.27%)</title><rect x="817.0" y="803.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="820.0" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.25%)</title><rect x="817.2" y="787.0" width="3.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="820.2" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.19%)</title><rect x="818.0" y="771.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="821.0" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.19%)</title><rect x="818.0" y="755.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="821.0" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.14%)</title><rect x="818.4" y="739.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="821.4" y="750.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.14%)</title><rect x="818.4" y="723.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="821.4" y="734.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.14%)</title><rect x="818.4" y="707.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="821.4" y="718.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.10%)</title><rect x="818.9" y="691.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="821.9" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.08%)</title><rect x="819.2" y="675.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="822.2" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.08%)</title><rect x="819.2" y="659.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="822.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$101/1597720911.run (250 samples, 5.17%)</title><rect x="820.2" y="899.0" width="60.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="823.2" y="910.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (250 samples, 5.17%)</title><rect x="820.2" y="883.0" width="60.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.2" y="894.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (250 samples, 5.17%)</title><rect x="820.2" y="867.0" width="60.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.2" y="878.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$95/863668112.process (250 samples, 5.17%)</title><rect x="820.2" y="851.0" width="60.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="823.2" y="862.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$4 (250 samples, 5.17%)</title><rect x="820.2" y="835.0" width="60.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.2" y="846.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleUpsert (250 samples, 5.17%)</title><rect x="820.2" y="819.0" width="60.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.2" y="830.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/cache/LocalCache.computeIfPresent (11 samples, 0.23%)</title><rect x="821.1" y="803.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.1" y="814.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.compute (11 samples, 0.23%)</title><rect x="821.1" y="787.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.1" y="798.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.compute (7 samples, 0.14%)</title><rect x="821.4" y="771.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.4" y="782.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.removeLoadingValue (4 samples, 0.08%)</title><rect x="821.6" y="755.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="822.1" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="825.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="822.1" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="825.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="822.1" y="707.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="825.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="822.6" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="825.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="822.6" y="739.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="825.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.04%)</title><rect x="822.6" y="723.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.04%)</title><rect x="822.6" y="707.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.04%)</title><rect x="822.6" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="825.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.hash (3 samples, 0.06%)</title><rect x="823.1" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="826.1" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/Equivalence.hash (3 samples, 0.06%)</title><rect x="823.1" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.1" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Equivalence$Equals.doHash (3 samples, 0.06%)</title><rect x="823.1" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="826.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.06%)</title><rect x="823.1" y="723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.06%)</title><rect x="823.1" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="826.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="823.8" y="803.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="823.8" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="826.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (2 samples, 0.04%)</title><rect x="823.8" y="771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="826.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (2 samples, 0.04%)</title><rect x="823.8" y="755.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.8" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="823.8" y="739.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="826.8" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="823.8" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding$1.initialValue (2 samples, 0.04%)</title><rect x="823.8" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (166 samples, 3.43%)</title><rect x="824.3" y="803.0" width="40.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="827.3" y="814.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.04%)</title><rect x="825.0" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="825.0" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="825.0" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (160 samples, 3.31%)</title><rect x="825.5" y="787.0" width="39.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.5" y="798.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.12%)</title><rect x="825.5" y="771.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.5" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (154 samples, 3.18%)</title><rect x="827.0" y="771.0" width="37.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.0" y="782.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (154 samples, 3.18%)</title><rect x="827.0" y="755.0" width="37.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.0" y="766.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (152 samples, 3.14%)</title><rect x="827.5" y="739.0" width="37.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.5" y="750.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (152 samples, 3.14%)</title><rect x="827.5" y="723.0" width="37.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.5" y="734.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.04%)</title><rect x="827.5" y="707.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="830.5" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="827.5" y="691.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="830.5" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.04%)</title><rect x="828.0" y="707.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="831.0" y="718.0"></text>
</g>
<g>
<title>__send (148 samples, 3.06%)</title><rect x="828.4" y="707.0" width="36.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="831.4" y="718.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (136 samples, 2.81%)</title><rect x="831.4" y="691.0" width="33.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="834.4" y="702.0">en..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.04%)</title><rect x="831.4" y="675.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="834.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (134 samples, 2.77%)</title><rect x="831.9" y="675.0" width="32.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="834.9" y="686.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (130 samples, 2.69%)</title><rect x="832.8" y="659.0" width="31.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="835.8" y="670.0">__..</text>
</g>
<g>
<title>__sys_sendto (130 samples, 2.69%)</title><rect x="832.8" y="643.0" width="31.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="835.8" y="654.0">__..</text>
</g>
<g>
<title>sock_sendmsg (127 samples, 2.62%)</title><rect x="833.1" y="627.0" width="30.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="836.1" y="638.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (122 samples, 2.52%)</title><rect x="833.3" y="611.0" width="29.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="836.3" y="622.0">in..</text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="833.3" y="595.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="836.3" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (120 samples, 2.48%)</title><rect x="833.8" y="595.0" width="29.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="836.8" y="606.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (119 samples, 2.46%)</title><rect x="834.0" y="579.0" width="29.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="837.0" y="590.0">tc..</text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.14%)</title><rect x="835.8" y="563.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="838.8" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.14%)</title><rect x="835.8" y="547.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="838.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (2 samples, 0.04%)</title><rect x="836.2" y="531.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="839.2" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.04%)</title><rect x="836.2" y="515.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="839.2" y="526.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.04%)</title><rect x="837.0" y="531.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="840.0" y="542.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.04%)</title><rect x="837.0" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="840.0" y="526.0"></text>
</g>
<g>
<title>tcp_push (100 samples, 2.07%)</title><rect x="837.7" y="563.0" width="24.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="840.7" y="574.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (99 samples, 2.05%)</title><rect x="837.7" y="547.0" width="24.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="840.7" y="558.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (98 samples, 2.02%)</title><rect x="838.0" y="531.0" width="23.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="841.0" y="542.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (88 samples, 1.82%)</title><rect x="838.4" y="515.0" width="21.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="841.4" y="526.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (85 samples, 1.76%)</title><rect x="838.9" y="499.0" width="20.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="841.9" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (85 samples, 1.76%)</title><rect x="838.9" y="483.0" width="20.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="841.9" y="494.0"></text>
</g>
<g>
<title>ip_local_out (83 samples, 1.71%)</title><rect x="839.2" y="467.0" width="20.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="842.2" y="478.0"></text>
</g>
<g>
<title>ip_output (83 samples, 1.71%)</title><rect x="839.2" y="451.0" width="20.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="842.2" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (79 samples, 1.63%)</title><rect x="839.2" y="435.0" width="19.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="842.2" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (78 samples, 1.61%)</title><rect x="839.2" y="419.0" width="19.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="842.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (78 samples, 1.61%)</title><rect x="839.2" y="403.0" width="19.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="842.2" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (68 samples, 1.40%)</title><rect x="839.2" y="387.0" width="16.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="842.2" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (67 samples, 1.38%)</title><rect x="839.4" y="371.0" width="16.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="842.4" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (66 samples, 1.36%)</title><rect x="839.7" y="355.0" width="16.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="842.7" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (65 samples, 1.34%)</title><rect x="839.7" y="339.0" width="15.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="842.7" y="350.0"></text>
</g>
<g>
<title>net_rx_action (61 samples, 1.26%)</title><rect x="840.4" y="323.0" width="14.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="843.4" y="334.0"></text>
</g>
<g>
<title>process_backlog (60 samples, 1.24%)</title><rect x="840.6" y="307.0" width="14.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="843.6" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (60 samples, 1.24%)</title><rect x="840.6" y="291.0" width="14.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="843.6" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (60 samples, 1.24%)</title><rect x="840.6" y="275.0" width="14.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="843.6" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.04%)</title><rect x="840.6" y="259.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="843.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv (58 samples, 1.20%)</title><rect x="841.1" y="259.0" width="14.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="844.1" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (57 samples, 1.18%)</title><rect x="841.4" y="243.0" width="13.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="844.4" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (57 samples, 1.18%)</title><rect x="841.4" y="227.0" width="13.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="844.4" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (56 samples, 1.16%)</title><rect x="841.4" y="211.0" width="13.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="844.4" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (56 samples, 1.16%)</title><rect x="841.4" y="195.0" width="13.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="844.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (56 samples, 1.16%)</title><rect x="841.4" y="179.0" width="13.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="844.4" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.12%)</title><rect x="841.9" y="163.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="844.9" y="174.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.04%)</title><rect x="843.3" y="163.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="846.3" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.14%)</title><rect x="843.8" y="163.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="846.8" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (5 samples, 0.10%)</title><rect x="844.3" y="147.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="847.3" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (5 samples, 0.10%)</title><rect x="844.3" y="131.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="847.3" y="142.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (4 samples, 0.08%)</title><rect x="844.5" y="115.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="847.5" y="126.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (2 samples, 0.04%)</title><rect x="844.8" y="99.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="847.8" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (38 samples, 0.79%)</title><rect x="845.5" y="163.0" width="9.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="848.5" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (38 samples, 0.79%)</title><rect x="845.5" y="147.0" width="9.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="848.5" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.06%)</title><rect x="846.0" y="131.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="849.0" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.06%)</title><rect x="846.0" y="115.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="849.0" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.06%)</title><rect x="846.0" y="99.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="849.0" y="110.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.06%)</title><rect x="846.0" y="83.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="849.0" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (15 samples, 0.31%)</title><rect x="847.0" y="131.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="850.0" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (13 samples, 0.27%)</title><rect x="847.5" y="115.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="850.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.27%)</title><rect x="847.5" y="99.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="850.5" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.25%)</title><rect x="847.7" y="83.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="850.7" y="94.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.23%)</title><rect x="850.6" y="131.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="853.6" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.14%)</title><rect x="851.1" y="115.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="854.1" y="126.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.12%)</title><rect x="851.4" y="99.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="854.4" y="110.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.10%)</title><rect x="851.4" y="83.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="854.4" y="94.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.08%)</title><rect x="851.6" y="67.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="854.6" y="78.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.08%)</title><rect x="851.6" y="51.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="854.6" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.06%)</title><rect x="851.8" y="35.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="854.8" y="46.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="853.6" y="131.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="856.6" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.04%)</title><rect x="854.3" y="131.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="857.3" y="142.0"></text>
</g>
<g>
<title>dev_queue_xmit (10 samples, 0.21%)</title><rect x="855.7" y="387.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="858.7" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.21%)</title><rect x="855.7" y="371.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="858.7" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.08%)</title><rect x="855.7" y="355.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="858.7" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="856.0" y="339.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="859.0" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="856.7" y="355.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="859.7" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.06%)</title><rect x="857.5" y="355.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="860.5" y="366.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.04%)</title><rect x="857.7" y="339.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="860.7" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.08%)</title><rect x="858.4" y="435.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="861.4" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.08%)</title><rect x="858.4" y="419.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="861.4" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (4 samples, 0.08%)</title><rect x="858.4" y="403.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="861.4" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (4 samples, 0.08%)</title><rect x="858.4" y="387.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="861.4" y="398.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.06%)</title><rect x="860.1" y="515.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="863.1" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="860.4" y="499.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="863.4" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="860.4" y="483.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="863.4" y="494.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="860.4" y="467.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="863.4" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="860.4" y="451.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="863.4" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.04%)</title><rect x="861.4" y="515.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="864.4" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.06%)</title><rect x="862.1" y="563.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="865.1" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.06%)</title><rect x="862.1" y="547.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="865.1" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.08%)</title><rect x="863.1" y="611.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="866.1" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.06%)</title><rect x="863.1" y="595.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="866.1" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.06%)</title><rect x="863.1" y="579.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="866.1" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="864.0" y="627.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="867.0" y="638.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="864.0" y="611.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="867.0" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="864.0" y="595.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="867.0" y="606.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="864.0" y="579.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="867.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (67 samples, 1.38%)</title><rect x="864.8" y="803.0" width="16.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="867.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (57 samples, 1.18%)</title><rect x="867.2" y="787.0" width="13.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="870.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.06%)</title><rect x="867.2" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="870.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.06%)</title><rect x="867.2" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="870.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$106/1677529807.run (53 samples, 1.10%)</title><rect x="868.2" y="771.0" width="12.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="871.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (53 samples, 1.10%)</title><rect x="868.2" y="755.0" width="12.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="871.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (53 samples, 1.10%)</title><rect x="868.2" y="739.0" width="12.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="871.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (52 samples, 1.07%)</title><rect x="868.2" y="723.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="871.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (50 samples, 1.03%)</title><rect x="868.7" y="707.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="871.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.04%)</title><rect x="869.9" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="872.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (43 samples, 0.89%)</title><rect x="870.4" y="691.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="873.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (43 samples, 0.89%)</title><rect x="870.4" y="675.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="873.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (18 samples, 0.37%)</title><rect x="876.5" y="659.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.5" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (18 samples, 0.37%)</title><rect x="876.5" y="643.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="879.5" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.08%)</title><rect x="878.4" y="627.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="881.4" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.08%)</title><rect x="878.4" y="611.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="881.4" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (6 samples, 0.12%)</title><rect x="879.4" y="627.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="882.4" y="638.0"></text>
</g>
<g>
<title>[worker-4 tid=13519] (317 samples, 6.55%)</title><rect x="881.1" y="963.0" width="77.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="884.1" y="974.0">[worker-4..</text>
</g>
<g>
<title>java/lang/Thread.run (315 samples, 6.51%)</title><rect x="881.6" y="947.0" width="76.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="884.6" y="958.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (315 samples, 6.51%)</title><rect x="881.6" y="931.0" width="76.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.6" y="942.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (315 samples, 6.51%)</title><rect x="881.6" y="915.0" width="76.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.6" y="926.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (3 samples, 0.06%)</title><rect x="881.8" y="899.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="884.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="881.8" y="883.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="884.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.06%)</title><rect x="881.8" y="867.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.06%)</title><rect x="881.8" y="851.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="884.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (53 samples, 1.10%)</title><rect x="882.6" y="899.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="885.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (52 samples, 1.07%)</title><rect x="882.8" y="883.0" width="12.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="885.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (35 samples, 0.72%)</title><rect x="882.8" y="867.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="885.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.04%)</title><rect x="883.3" y="851.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="886.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (6 samples, 0.12%)</title><rect x="883.8" y="851.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="886.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.12%)</title><rect x="883.8" y="835.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="886.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.12%)</title><rect x="883.8" y="819.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="886.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.12%)</title><rect x="883.8" y="803.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="886.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.12%)</title><rect x="883.8" y="787.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.8" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.10%)</title><rect x="884.0" y="771.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="887.0" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.10%)</title><rect x="884.0" y="755.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="887.0" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.10%)</title><rect x="884.0" y="739.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="887.0" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.08%)</title><rect x="884.3" y="723.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="887.3" y="734.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.08%)</title><rect x="884.3" y="707.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="887.3" y="718.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.08%)</title><rect x="884.3" y="691.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="887.3" y="702.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.08%)</title><rect x="884.3" y="675.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="887.3" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.08%)</title><rect x="884.3" y="659.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="887.3" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.08%)</title><rect x="884.3" y="643.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="887.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (25 samples, 0.52%)</title><rect x="885.2" y="851.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="888.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (25 samples, 0.52%)</title><rect x="885.2" y="835.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="888.2" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (12 samples, 0.25%)</title><rect x="885.2" y="819.0" width="3.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="888.2" y="830.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.06%)</title><rect x="885.5" y="803.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="888.5" y="814.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.14%)</title><rect x="886.2" y="803.0" width="1.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="889.2" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.10%)</title><rect x="886.7" y="787.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="889.7" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.10%)</title><rect x="886.7" y="771.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="889.7" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="887.4" y="755.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="890.4" y="766.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="887.4" y="739.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="890.4" y="750.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="887.4" y="723.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="890.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.27%)</title><rect x="888.2" y="819.0" width="3.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="891.2" y="830.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (12 samples, 0.25%)</title><rect x="888.4" y="803.0" width="2.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="891.4" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.10%)</title><rect x="890.1" y="787.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="893.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.10%)</title><rect x="890.1" y="771.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="893.1" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.08%)</title><rect x="890.4" y="755.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="893.4" y="766.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.06%)</title><rect x="890.6" y="739.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="893.6" y="750.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.06%)</title><rect x="890.6" y="723.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="893.6" y="734.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.04%)</title><rect x="890.9" y="707.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="893.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.04%)</title><rect x="891.3" y="867.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.04%)</title><rect x="891.3" y="851.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.04%)</title><rect x="891.3" y="835.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="894.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.04%)</title><rect x="891.3" y="819.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="894.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.04%)</title><rect x="891.3" y="803.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="894.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title><rect x="891.3" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="894.3" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.04%)</title><rect x="891.3" y="771.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="894.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.31%)</title><rect x="891.8" y="867.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="894.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.31%)</title><rect x="891.8" y="851.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.31%)</title><rect x="891.8" y="835.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.27%)</title><rect x="892.3" y="819.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="895.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.27%)</title><rect x="892.3" y="803.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="895.3" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.27%)</title><rect x="892.3" y="787.0" width="3.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="895.3" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.19%)</title><rect x="893.3" y="771.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="896.3" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.19%)</title><rect x="893.3" y="755.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="896.3" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.19%)</title><rect x="893.3" y="739.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="896.3" y="750.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.19%)</title><rect x="893.3" y="723.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="896.3" y="734.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.19%)</title><rect x="893.3" y="707.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="896.3" y="718.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.14%)</title><rect x="893.8" y="691.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="896.8" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.14%)</title><rect x="893.8" y="675.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="896.8" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.14%)</title><rect x="893.8" y="659.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="896.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$101/1597720911.run (257 samples, 5.31%)</title><rect x="895.5" y="899.0" width="62.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.5" y="910.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (257 samples, 5.31%)</title><rect x="895.5" y="883.0" width="62.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="898.5" y="894.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (257 samples, 5.31%)</title><rect x="895.5" y="867.0" width="62.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.5" y="878.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$95/863668112.process (257 samples, 5.31%)</title><rect x="895.5" y="851.0" width="62.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.5" y="862.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$4 (257 samples, 5.31%)</title><rect x="895.5" y="835.0" width="62.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.5" y="846.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleUpsert (257 samples, 5.31%)</title><rect x="895.5" y="819.0" width="62.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="898.5" y="830.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/cache/LocalCache.computeIfPresent (7 samples, 0.14%)</title><rect x="896.0" y="803.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.0" y="814.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.compute (7 samples, 0.14%)</title><rect x="896.0" y="787.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="899.0" y="798.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.compute (3 samples, 0.06%)</title><rect x="896.5" y="771.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.hash (2 samples, 0.04%)</title><rect x="897.2" y="771.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="900.2" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/Equivalence.hash (2 samples, 0.04%)</title><rect x="897.2" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="900.2" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Equivalence$Equals.doHash (2 samples, 0.04%)</title><rect x="897.2" y="739.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="900.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="897.2" y="723.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="900.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="897.2" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (176 samples, 3.64%)</title><rect x="898.2" y="803.0" width="42.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.2" y="814.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="898.7" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="898.7" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="898.7" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="901.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (170 samples, 3.51%)</title><rect x="899.4" y="787.0" width="41.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="902.4" y="798.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.23%)</title><rect x="899.6" y="771.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="902.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (158 samples, 3.26%)</title><rect x="902.3" y="771.0" width="38.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.3" y="782.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (158 samples, 3.26%)</title><rect x="902.3" y="755.0" width="38.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="905.3" y="766.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (157 samples, 3.24%)</title><rect x="902.6" y="739.0" width="38.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.6" y="750.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (157 samples, 3.24%)</title><rect x="902.6" y="723.0" width="38.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.6" y="734.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.08%)</title><rect x="902.6" y="707.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="905.6" y="718.0"></text>
</g>
<g>
<title>__send (152 samples, 3.14%)</title><rect x="903.5" y="707.0" width="37.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="906.5" y="718.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (142 samples, 2.93%)</title><rect x="906.0" y="691.0" width="34.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="909.0" y="702.0">en..</text>
</g>
<g>
<title>do_syscall_64 (142 samples, 2.93%)</title><rect x="906.0" y="675.0" width="34.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="909.0" y="686.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (138 samples, 2.85%)</title><rect x="906.9" y="659.0" width="33.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="909.9" y="670.0">__..</text>
</g>
<g>
<title>__sys_sendto (138 samples, 2.85%)</title><rect x="906.9" y="643.0" width="33.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="909.9" y="654.0">__..</text>
</g>
<g>
<title>sock_sendmsg (127 samples, 2.62%)</title><rect x="907.9" y="627.0" width="31.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="910.9" y="638.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (122 samples, 2.52%)</title><rect x="908.4" y="611.0" width="29.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="911.4" y="622.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (122 samples, 2.52%)</title><rect x="908.4" y="595.0" width="29.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="911.4" y="606.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (120 samples, 2.48%)</title><rect x="908.9" y="579.0" width="29.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="911.9" y="590.0">tc..</text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="909.6" y="563.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="912.6" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.12%)</title><rect x="910.6" y="563.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="913.6" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.10%)</title><rect x="910.8" y="547.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="913.8" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.04%)</title><rect x="911.6" y="531.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="914.6" y="542.0"></text>
</g>
<g>
<title>tcp_push (104 samples, 2.15%)</title><rect x="912.1" y="563.0" width="25.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="915.1" y="574.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (103 samples, 2.13%)</title><rect x="912.1" y="547.0" width="25.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="915.1" y="558.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (103 samples, 2.13%)</title><rect x="912.1" y="531.0" width="25.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="915.1" y="542.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (89 samples, 1.84%)</title><rect x="912.6" y="515.0" width="21.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="915.6" y="526.0">_..</text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.04%)</title><rect x="913.0" y="499.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="916.0" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (82 samples, 1.69%)</title><rect x="913.8" y="499.0" width="20.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="916.8" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (82 samples, 1.69%)</title><rect x="913.8" y="483.0" width="20.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="916.8" y="494.0"></text>
</g>
<g>
<title>ip_local_out (82 samples, 1.69%)</title><rect x="913.8" y="467.0" width="20.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="916.8" y="478.0"></text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.06%)</title><rect x="913.8" y="451.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="916.8" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.04%)</title><rect x="913.8" y="435.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="916.8" y="446.0"></text>
</g>
<g>
<title>ip_output (79 samples, 1.63%)</title><rect x="914.5" y="451.0" width="19.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="917.5" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (76 samples, 1.57%)</title><rect x="914.7" y="435.0" width="18.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="917.7" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (74 samples, 1.53%)</title><rect x="915.0" y="419.0" width="18.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="918.0" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (73 samples, 1.51%)</title><rect x="915.2" y="403.0" width="17.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="918.2" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (60 samples, 1.24%)</title><rect x="916.5" y="387.0" width="14.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="919.5" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (60 samples, 1.24%)</title><rect x="916.5" y="371.0" width="14.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="919.5" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (60 samples, 1.24%)</title><rect x="916.5" y="355.0" width="14.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="919.5" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (60 samples, 1.24%)</title><rect x="916.5" y="339.0" width="14.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="919.5" y="350.0"></text>
</g>
<g>
<title>net_rx_action (59 samples, 1.22%)</title><rect x="916.7" y="323.0" width="14.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="919.7" y="334.0"></text>
</g>
<g>
<title>process_backlog (59 samples, 1.22%)</title><rect x="916.7" y="307.0" width="14.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="919.7" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (55 samples, 1.14%)</title><rect x="917.2" y="291.0" width="13.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="920.2" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (55 samples, 1.14%)</title><rect x="917.2" y="275.0" width="13.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="920.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv (52 samples, 1.07%)</title><rect x="917.2" y="259.0" width="12.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="920.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (49 samples, 1.01%)</title><rect x="917.9" y="243.0" width="12.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="920.9" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (47 samples, 0.97%)</title><rect x="918.2" y="227.0" width="11.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="921.2" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (46 samples, 0.95%)</title><rect x="918.4" y="211.0" width="11.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="921.4" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (45 samples, 0.93%)</title><rect x="918.4" y="195.0" width="11.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="921.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (44 samples, 0.91%)</title><rect x="918.6" y="179.0" width="10.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="921.6" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (12 samples, 0.25%)</title><rect x="919.4" y="163.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="922.4" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="919.6" y="147.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="922.6" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (8 samples, 0.17%)</title><rect x="920.1" y="147.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="923.1" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (7 samples, 0.14%)</title><rect x="920.4" y="131.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="923.4" y="142.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (2 samples, 0.04%)</title><rect x="920.6" y="115.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="923.6" y="126.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (4 samples, 0.08%)</title><rect x="921.1" y="115.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="924.1" y="126.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (2 samples, 0.04%)</title><rect x="921.3" y="99.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="924.3" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (29 samples, 0.60%)</title><rect x="922.3" y="163.0" width="7.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="925.3" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (29 samples, 0.60%)</title><rect x="922.3" y="147.0" width="7.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="925.3" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.04%)</title><rect x="922.5" y="131.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="925.5" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.08%)</title><rect x="923.0" y="131.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="926.0" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.08%)</title><rect x="923.0" y="115.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="926.0" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.08%)</title><rect x="923.0" y="99.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="926.0" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.08%)</title><rect x="923.0" y="83.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="926.0" y="94.0"></text>
</g>
<g>
<title>tcp_ack (18 samples, 0.37%)</title><rect x="924.0" y="131.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="927.0" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.14%)</title><rect x="925.5" y="115.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="928.5" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.06%)</title><rect x="925.5" y="99.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="928.5" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.06%)</title><rect x="925.5" y="83.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="928.5" y="94.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.08%)</title><rect x="926.2" y="99.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="929.2" y="110.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.08%)</title><rect x="926.2" y="83.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="929.2" y="94.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.04%)</title><rect x="930.1" y="259.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="933.1" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.04%)</title><rect x="930.6" y="291.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="933.6" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (8 samples, 0.17%)</title><rect x="931.1" y="387.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="934.1" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.14%)</title><rect x="931.1" y="371.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="934.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.06%)</title><rect x="931.1" y="355.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="934.1" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.04%)</title><rect x="932.1" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="935.1" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.04%)</title><rect x="933.3" y="435.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="936.3" y="446.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.04%)</title><rect x="933.8" y="499.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="936.8" y="510.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="934.3" y="515.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="937.3" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.12%)</title><rect x="935.0" y="515.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="938.0" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="936.0" y="499.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="939.0" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.04%)</title><rect x="937.7" y="563.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="940.7" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.04%)</title><rect x="938.2" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="941.2" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.14%)</title><rect x="938.9" y="627.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="941.9" y="638.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.12%)</title><rect x="938.9" y="611.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="941.9" y="622.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.12%)</title><rect x="938.9" y="595.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="941.9" y="606.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.12%)</title><rect x="938.9" y="579.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="941.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (69 samples, 1.43%)</title><rect x="941.1" y="803.0" width="16.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="944.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (53 samples, 1.10%)</title><rect x="945.0" y="787.0" width="12.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="948.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (7 samples, 0.14%)</title><rect x="945.0" y="771.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="948.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (7 samples, 0.14%)</title><rect x="945.0" y="755.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="948.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.08%)</title><rect x="945.7" y="739.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="948.7" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="946.0" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="949.0" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="946.0" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="949.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.04%)</title><rect x="946.7" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="949.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.04%)</title><rect x="946.7" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="949.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$106/1677529807.run (44 samples, 0.91%)</title><rect x="947.2" y="771.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="950.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (44 samples, 0.91%)</title><rect x="947.2" y="755.0" width="10.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="950.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (44 samples, 0.91%)</title><rect x="947.2" y="739.0" width="10.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="950.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (44 samples, 0.91%)</title><rect x="947.2" y="723.0" width="10.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="950.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (41 samples, 0.85%)</title><rect x="947.7" y="707.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (3 samples, 0.06%)</title><rect x="948.6" y="691.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="951.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (34 samples, 0.70%)</title><rect x="949.4" y="691.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="952.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (34 samples, 0.70%)</title><rect x="949.4" y="675.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="952.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.39%)</title><rect x="953.0" y="659.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="956.0" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (19 samples, 0.39%)</title><rect x="953.0" y="643.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="956.0" y="654.0"></text>
</g>
<g>
<title>vectorizedMismatch (11 samples, 0.23%)</title><rect x="955.0" y="627.0" width="2.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="958.0" y="638.0"></text>
</g>
<g>
<title>[worker-5 tid=13520] (316 samples, 6.53%)</title><rect x="958.4" y="963.0" width="77.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="961.4" y="974.0">[worker-5..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.04%)</title><rect x="958.4" y="947.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="961.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="958.4" y="931.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="961.4" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.run (314 samples, 6.49%)</title><rect x="958.9" y="947.0" width="76.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="961.9" y="958.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (314 samples, 6.49%)</title><rect x="958.9" y="931.0" width="76.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="961.9" y="942.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (314 samples, 6.49%)</title><rect x="958.9" y="915.0" width="76.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="961.9" y="926.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (71 samples, 1.47%)</title><rect x="959.1" y="899.0" width="17.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="962.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (69 samples, 1.43%)</title><rect x="959.6" y="883.0" width="16.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="962.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (48 samples, 0.99%)</title><rect x="959.6" y="867.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="962.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.04%)</title><rect x="959.6" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="962.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (6 samples, 0.12%)</title><rect x="960.1" y="851.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="963.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.12%)</title><rect x="960.1" y="835.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="963.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.12%)</title><rect x="960.1" y="819.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="963.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.12%)</title><rect x="960.1" y="803.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="963.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.10%)</title><rect x="960.3" y="787.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="963.3" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.06%)</title><rect x="960.8" y="771.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="963.8" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="961.1" y="755.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="964.1" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="961.1" y="739.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="964.1" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="961.1" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="964.1" y="734.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="961.1" y="707.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="964.1" y="718.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="961.1" y="691.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="964.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (38 samples, 0.79%)</title><rect x="961.8" y="851.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="964.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (38 samples, 0.79%)</title><rect x="961.8" y="835.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="964.8" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (13 samples, 0.27%)</title><rect x="962.0" y="819.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="965.0" y="830.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="962.5" y="803.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="965.5" y="814.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.14%)</title><rect x="963.0" y="803.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="966.0" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="964.2" y="787.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="967.2" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="964.2" y="771.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="967.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.48%)</title><rect x="965.2" y="819.0" width="5.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="968.2" y="830.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (22 samples, 0.45%)</title><rect x="965.5" y="803.0" width="5.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="968.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.14%)</title><rect x="969.1" y="787.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="972.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.14%)</title><rect x="969.1" y="771.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="972.1" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.10%)</title><rect x="969.6" y="755.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="972.6" y="766.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.10%)</title><rect x="969.6" y="739.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="972.6" y="750.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.10%)</title><rect x="969.6" y="723.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="972.6" y="734.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.08%)</title><rect x="969.8" y="707.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="972.8" y="718.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.06%)</title><rect x="970.1" y="691.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="973.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (8 samples, 0.17%)</title><rect x="971.3" y="867.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="974.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (8 samples, 0.17%)</title><rect x="971.3" y="851.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="974.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (8 samples, 0.17%)</title><rect x="971.3" y="835.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.10%)</title><rect x="972.0" y="819.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="975.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.10%)</title><rect x="972.0" y="803.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="975.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.10%)</title><rect x="972.0" y="787.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.0" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.06%)</title><rect x="972.0" y="771.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="975.0" y="782.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.04%)</title><rect x="972.3" y="755.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="975.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="972.8" y="771.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="975.8" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="972.8" y="755.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="975.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.27%)</title><rect x="973.3" y="867.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="976.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.27%)</title><rect x="973.3" y="851.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="976.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.27%)</title><rect x="973.3" y="835.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="976.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.27%)</title><rect x="973.3" y="819.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="976.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.27%)</title><rect x="973.3" y="803.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.3" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="973.3" y="787.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="976.3" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.23%)</title><rect x="973.7" y="787.0" width="2.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="976.7" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.17%)</title><rect x="974.5" y="771.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="977.5" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.17%)</title><rect x="974.5" y="755.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="977.5" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.14%)</title><rect x="974.7" y="739.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="977.7" y="750.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.14%)</title><rect x="974.7" y="723.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="977.7" y="734.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.14%)</title><rect x="974.7" y="707.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="977.7" y="718.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.14%)</title><rect x="974.7" y="691.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="977.7" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.14%)</title><rect x="974.7" y="675.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="977.7" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.14%)</title><rect x="974.7" y="659.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="977.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$101/1597720911.run (242 samples, 5.00%)</title><rect x="976.4" y="899.0" width="59.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="979.4" y="910.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (242 samples, 5.00%)</title><rect x="976.4" y="883.0" width="59.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="979.4" y="894.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (242 samples, 5.00%)</title><rect x="976.4" y="867.0" width="59.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="979.4" y="878.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$95/863668112.process (242 samples, 5.00%)</title><rect x="976.4" y="851.0" width="59.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="979.4" y="862.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$4 (242 samples, 5.00%)</title><rect x="976.4" y="835.0" width="59.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="979.4" y="846.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleUpsert (242 samples, 5.00%)</title><rect x="976.4" y="819.0" width="59.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="979.4" y="830.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/cache/LocalCache.computeIfPresent (13 samples, 0.27%)</title><rect x="976.7" y="803.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="979.7" y="814.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.compute (13 samples, 0.27%)</title><rect x="976.7" y="787.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="979.7" y="798.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.compute (6 samples, 0.12%)</title><rect x="977.2" y="771.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="980.2" y="782.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.removeLoadingValue (2 samples, 0.04%)</title><rect x="977.9" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="980.9" y="766.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.hash (4 samples, 0.08%)</title><rect x="978.6" y="771.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="981.6" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/Equivalence.hash (4 samples, 0.08%)</title><rect x="978.6" y="755.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="981.6" y="766.0"></text>
</g>
<g>
<title>com/google/common/base/Equivalence$Equals.doHash (4 samples, 0.08%)</title><rect x="978.6" y="739.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.08%)</title><rect x="978.6" y="723.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="981.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.08%)</title><rect x="978.6" y="707.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="981.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.12%)</title><rect x="979.8" y="803.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="982.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.10%)</title><rect x="980.1" y="787.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="983.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (5 samples, 0.10%)</title><rect x="980.1" y="771.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="983.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (5 samples, 0.10%)</title><rect x="980.1" y="755.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="983.1" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.10%)</title><rect x="980.1" y="739.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="983.1" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.10%)</title><rect x="980.1" y="723.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding$1.initialValue (5 samples, 0.10%)</title><rect x="980.1" y="707.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="983.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (169 samples, 3.49%)</title><rect x="981.3" y="803.0" width="41.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="984.3" y="814.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="982.8" y="787.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="985.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="982.8" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="985.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="982.8" y="755.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="985.8" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="982.8" y="739.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="985.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (159 samples, 3.29%)</title><rect x="983.5" y="787.0" width="38.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="986.5" y="798.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.25%)</title><rect x="983.7" y="771.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="986.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (146 samples, 3.02%)</title><rect x="986.7" y="771.0" width="35.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="989.7" y="782.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (146 samples, 3.02%)</title><rect x="986.7" y="755.0" width="35.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="989.7" y="766.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (146 samples, 3.02%)</title><rect x="986.7" y="739.0" width="35.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="989.7" y="750.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (146 samples, 3.02%)</title><rect x="986.7" y="723.0" width="35.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="989.7" y="734.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.12%)</title><rect x="986.9" y="707.0" width="1.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="989.9" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.06%)</title><rect x="987.4" y="691.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="990.4" y="702.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.06%)</title><rect x="988.4" y="707.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="991.4" y="718.0"></text>
</g>
<g>
<title>__send (136 samples, 2.81%)</title><rect x="989.1" y="707.0" width="33.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="992.1" y="718.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (132 samples, 2.73%)</title><rect x="990.1" y="691.0" width="32.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="993.1" y="702.0">en..</text>
</g>
<g>
<title>do_syscall_64 (131 samples, 2.71%)</title><rect x="990.3" y="675.0" width="32.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="993.3" y="686.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (129 samples, 2.67%)</title><rect x="990.8" y="659.0" width="31.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="993.8" y="670.0">__..</text>
</g>
<g>
<title>__sys_sendto (129 samples, 2.67%)</title><rect x="990.8" y="643.0" width="31.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="993.8" y="654.0">__..</text>
</g>
<g>
<title>sock_sendmsg (125 samples, 2.58%)</title><rect x="991.1" y="627.0" width="30.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="994.1" y="638.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (122 samples, 2.52%)</title><rect x="991.1" y="611.0" width="29.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="994.1" y="622.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (122 samples, 2.52%)</title><rect x="991.1" y="595.0" width="29.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="994.1" y="606.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (120 samples, 2.48%)</title><rect x="991.5" y="579.0" width="29.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="994.5" y="590.0">tc..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.04%)</title><rect x="992.8" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="995.8" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.10%)</title><rect x="993.3" y="563.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="996.3" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.10%)</title><rect x="993.3" y="547.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="996.3" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.08%)</title><rect x="993.5" y="531.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="996.5" y="542.0"></text>
</g>
<g>
<title>tcp_push (103 samples, 2.13%)</title><rect x="994.5" y="563.0" width="25.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="997.5" y="574.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (103 samples, 2.13%)</title><rect x="994.5" y="547.0" width="25.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="997.5" y="558.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (101 samples, 2.09%)</title><rect x="995.0" y="531.0" width="24.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="998.0" y="542.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (94 samples, 1.94%)</title><rect x="995.7" y="515.0" width="22.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="998.7" y="526.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (90 samples, 1.86%)</title><rect x="995.9" y="499.0" width="22.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="998.9" y="510.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (90 samples, 1.86%)</title><rect x="995.9" y="483.0" width="22.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="998.9" y="494.0">_..</text>
</g>
<g>
<title>ip_local_out (88 samples, 1.82%)</title><rect x="996.2" y="467.0" width="21.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="999.2" y="478.0">i..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.04%)</title><rect x="996.2" y="451.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="999.2" y="462.0"></text>
</g>
<g>
<title>ip_output (85 samples, 1.76%)</title><rect x="996.7" y="451.0" width="20.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="999.7" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (77 samples, 1.59%)</title><rect x="997.2" y="435.0" width="18.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1000.2" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (77 samples, 1.59%)</title><rect x="997.2" y="419.0" width="18.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1000.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (76 samples, 1.57%)</title><rect x="997.4" y="403.0" width="18.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1000.4" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (65 samples, 1.34%)</title><rect x="997.9" y="387.0" width="15.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1000.9" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (65 samples, 1.34%)</title><rect x="997.9" y="371.0" width="15.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1000.9" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (64 samples, 1.32%)</title><rect x="998.1" y="355.0" width="15.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1001.1" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (64 samples, 1.32%)</title><rect x="998.1" y="339.0" width="15.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1001.1" y="350.0"></text>
</g>
<g>
<title>net_rx_action (63 samples, 1.30%)</title><rect x="998.4" y="323.0" width="15.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1001.4" y="334.0"></text>
</g>
<g>
<title>process_backlog (61 samples, 1.26%)</title><rect x="998.9" y="307.0" width="14.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1001.9" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (60 samples, 1.24%)</title><rect x="999.1" y="291.0" width="14.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1002.1" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (60 samples, 1.24%)</title><rect x="999.1" y="275.0" width="14.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1002.1" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.04%)</title><rect x="999.1" y="259.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1002.1" y="270.0"></text>
</g>
<g>
<title>ip_rcv (58 samples, 1.20%)</title><rect x="999.6" y="259.0" width="14.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1002.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (57 samples, 1.18%)</title><rect x="999.6" y="243.0" width="13.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1002.6" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (56 samples, 1.16%)</title><rect x="999.6" y="227.0" width="13.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1002.6" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (56 samples, 1.16%)</title><rect x="999.6" y="211.0" width="13.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1002.6" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (56 samples, 1.16%)</title><rect x="999.6" y="195.0" width="13.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1002.6" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.04%)</title><rect x="1000.1" y="179.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1003.1" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (52 samples, 1.07%)</title><rect x="1000.6" y="179.0" width="12.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1003.6" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.14%)</title><rect x="1000.8" y="163.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1003.8" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.06%)</title><rect x="1001.8" y="147.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1004.8" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.10%)</title><rect x="1002.8" y="163.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1005.8" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="1002.8" y="147.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1005.8" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.04%)</title><rect x="1003.5" y="147.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1006.5" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.04%)</title><rect x="1003.5" y="131.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1006.5" y="142.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (2 samples, 0.04%)</title><rect x="1003.5" y="115.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1006.5" y="126.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (2 samples, 0.04%)</title><rect x="1003.5" y="99.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1006.5" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (38 samples, 0.79%)</title><rect x="1004.0" y="163.0" width="9.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1007.0" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (38 samples, 0.79%)</title><rect x="1004.0" y="147.0" width="9.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1007.0" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (15 samples, 0.31%)</title><rect x="1004.7" y="131.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1007.7" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 0.31%)</title><rect x="1004.7" y="115.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1007.7" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 0.31%)</title><rect x="1004.7" y="99.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1007.7" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.29%)</title><rect x="1005.0" y="83.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1008.0" y="94.0"></text>
</g>
<g>
<title>tcp_ack (20 samples, 0.41%)</title><rect x="1008.4" y="131.0" width="4.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1011.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.21%)</title><rect x="1010.1" y="115.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1013.1" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.06%)</title><rect x="1010.1" y="99.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1013.1" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.06%)</title><rect x="1010.1" y="83.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1013.1" y="94.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.14%)</title><rect x="1010.8" y="99.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1013.8" y="110.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.14%)</title><rect x="1010.8" y="83.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1013.8" y="94.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.06%)</title><rect x="1011.8" y="67.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1014.8" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.04%)</title><rect x="1012.0" y="51.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1015.0" y="62.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.19%)</title><rect x="1013.7" y="387.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1016.7" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (9 samples, 0.19%)</title><rect x="1013.7" y="371.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1016.7" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.10%)</title><rect x="1014.2" y="355.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1017.2" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.08%)</title><rect x="1014.5" y="339.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1017.5" y="350.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.06%)</title><rect x="1014.5" y="323.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1017.5" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.06%)</title><rect x="1014.5" y="307.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1017.5" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.06%)</title><rect x="1014.5" y="291.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1017.5" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.04%)</title><rect x="1015.4" y="355.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1018.4" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.04%)</title><rect x="1015.4" y="339.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1018.4" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.12%)</title><rect x="1015.9" y="435.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1018.9" y="446.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.04%)</title><rect x="1015.9" y="419.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1018.9" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.08%)</title><rect x="1016.4" y="419.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1019.4" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (4 samples, 0.08%)</title><rect x="1016.4" y="403.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1019.4" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (2 samples, 0.04%)</title><rect x="1016.4" y="387.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1019.4" y="398.0"></text>
</g>
<g>
<title>selinux_xfrm_postroute_last (2 samples, 0.04%)</title><rect x="1016.9" y="387.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1019.9" y="398.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.04%)</title><rect x="1018.1" y="499.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1021.1" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.08%)</title><rect x="1019.8" y="563.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1022.8" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.04%)</title><rect x="1019.8" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1022.8" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.04%)</title><rect x="1020.3" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1023.3" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.06%)</title><rect x="1020.8" y="611.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1023.8" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.06%)</title><rect x="1021.5" y="627.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1024.5" y="638.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="1021.5" y="611.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1024.5" y="622.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="1021.5" y="595.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1024.5" y="606.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.06%)</title><rect x="1021.5" y="579.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1024.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (53 samples, 1.10%)</title><rect x="1022.5" y="803.0" width="12.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1025.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (41 samples, 0.85%)</title><rect x="1025.4" y="787.0" width="10.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1028.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.04%)</title><rect x="1025.4" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1028.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.04%)</title><rect x="1025.4" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1028.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.04%)</title><rect x="1025.4" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1028.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.04%)</title><rect x="1025.9" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1028.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.04%)</title><rect x="1025.9" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1028.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.04%)</title><rect x="1025.9" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1028.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$106/1677529807.run (37 samples, 0.76%)</title><rect x="1026.4" y="771.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1029.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (37 samples, 0.76%)</title><rect x="1026.4" y="755.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1029.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (37 samples, 0.76%)</title><rect x="1026.4" y="739.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1029.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (36 samples, 0.74%)</title><rect x="1026.4" y="723.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1029.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (35 samples, 0.72%)</title><rect x="1026.7" y="707.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1029.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (33 samples, 0.68%)</title><rect x="1027.1" y="691.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1030.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (33 samples, 0.68%)</title><rect x="1027.1" y="675.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1030.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (20 samples, 0.41%)</title><rect x="1030.3" y="659.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1033.3" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (20 samples, 0.41%)</title><rect x="1030.3" y="643.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.3" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.06%)</title><rect x="1032.5" y="627.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1035.5" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.06%)</title><rect x="1032.5" y="611.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.5" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (8 samples, 0.17%)</title><rect x="1033.2" y="627.0" width="2.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1036.2" y="638.0"></text>
</g>
<g>
<title>[worker-6 tid=13522] (315 samples, 6.51%)</title><rect x="1035.4" y="963.0" width="76.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1038.4" y="974.0">[worker-..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.04%)</title><rect x="1035.7" y="947.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1038.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1035.7" y="931.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1038.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1035.7" y="915.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1038.7" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.run (312 samples, 6.45%)</title><rect x="1036.2" y="947.0" width="76.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1039.2" y="958.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (312 samples, 6.45%)</title><rect x="1036.2" y="931.0" width="76.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1039.2" y="942.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (312 samples, 6.45%)</title><rect x="1036.2" y="915.0" width="76.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1039.2" y="926.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (60 samples, 1.24%)</title><rect x="1036.2" y="899.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (60 samples, 1.24%)</title><rect x="1036.2" y="883.0" width="14.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1039.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (41 samples, 0.85%)</title><rect x="1036.2" y="867.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1039.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.08%)</title><rect x="1036.2" y="851.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1039.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.06%)</title><rect x="1037.1" y="851.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1040.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="1037.1" y="835.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1040.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="1037.1" y="819.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1040.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="1037.1" y="803.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1040.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="1037.1" y="787.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1040.1" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.04%)</title><rect x="1037.1" y="771.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1040.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (34 samples, 0.70%)</title><rect x="1037.9" y="851.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1040.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (34 samples, 0.70%)</title><rect x="1037.9" y="835.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.9" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (16 samples, 0.33%)</title><rect x="1038.4" y="819.0" width="3.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1041.4" y="830.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.08%)</title><rect x="1038.6" y="803.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1041.6" y="814.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.17%)</title><rect x="1039.8" y="803.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1042.8" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.12%)</title><rect x="1040.3" y="787.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1043.3" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.12%)</title><rect x="1040.3" y="771.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1043.3" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.08%)</title><rect x="1040.8" y="755.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1043.8" y="766.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.08%)</title><rect x="1040.8" y="739.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1043.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.33%)</title><rect x="1042.3" y="819.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1045.3" y="830.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (15 samples, 0.31%)</title><rect x="1042.5" y="803.0" width="3.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1045.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.12%)</title><rect x="1044.7" y="787.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1047.7" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.12%)</title><rect x="1044.7" y="771.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1047.7" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.10%)</title><rect x="1044.9" y="755.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1047.9" y="766.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.10%)</title><rect x="1044.9" y="739.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1047.9" y="750.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.08%)</title><rect x="1045.2" y="723.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1048.2" y="734.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.08%)</title><rect x="1045.2" y="707.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1048.2" y="718.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.06%)</title><rect x="1045.4" y="691.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1048.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (6 samples, 0.12%)</title><rect x="1046.2" y="867.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (6 samples, 0.12%)</title><rect x="1046.2" y="851.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1049.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (6 samples, 0.12%)</title><rect x="1046.2" y="835.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1049.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.10%)</title><rect x="1046.4" y="819.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1049.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.10%)</title><rect x="1046.4" y="803.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1049.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.10%)</title><rect x="1046.4" y="787.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.4" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.04%)</title><rect x="1046.4" y="771.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1049.4" y="782.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.04%)</title><rect x="1046.4" y="755.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1049.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="1046.9" y="771.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1049.9" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="1046.9" y="755.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1049.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.27%)</title><rect x="1047.6" y="867.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1050.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.27%)</title><rect x="1047.6" y="851.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.27%)</title><rect x="1047.6" y="835.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1050.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.23%)</title><rect x="1048.1" y="819.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1051.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.23%)</title><rect x="1048.1" y="803.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1051.1" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.06%)</title><rect x="1048.1" y="787.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1051.1" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.17%)</title><rect x="1048.8" y="787.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1051.8" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.17%)</title><rect x="1048.8" y="771.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1051.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.17%)</title><rect x="1048.8" y="755.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1051.8" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.17%)</title><rect x="1048.8" y="739.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1051.8" y="750.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.17%)</title><rect x="1048.8" y="723.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1051.8" y="734.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.17%)</title><rect x="1048.8" y="707.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1051.8" y="718.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.14%)</title><rect x="1049.1" y="691.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1052.1" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.14%)</title><rect x="1049.1" y="675.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1052.1" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.14%)</title><rect x="1049.1" y="659.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1052.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$101/1597720911.run (252 samples, 5.21%)</title><rect x="1050.8" y="899.0" width="61.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.8" y="910.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (252 samples, 5.21%)</title><rect x="1050.8" y="883.0" width="61.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1053.8" y="894.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (252 samples, 5.21%)</title><rect x="1050.8" y="867.0" width="61.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.8" y="878.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$95/863668112.process (252 samples, 5.21%)</title><rect x="1050.8" y="851.0" width="61.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1053.8" y="862.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$4 (251 samples, 5.19%)</title><rect x="1051.0" y="835.0" width="61.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1054.0" y="846.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleUpsert (251 samples, 5.19%)</title><rect x="1051.0" y="819.0" width="61.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1054.0" y="830.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/cache/LocalCache.computeIfPresent (10 samples, 0.21%)</title><rect x="1051.5" y="803.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1054.5" y="814.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.compute (10 samples, 0.21%)</title><rect x="1051.5" y="787.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1054.5" y="798.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.compute (8 samples, 0.17%)</title><rect x="1051.8" y="771.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1054.8" y="782.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.removeLoadingValue (3 samples, 0.06%)</title><rect x="1052.3" y="755.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1055.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="1053.0" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1056.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.10%)</title><rect x="1054.0" y="803.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1057.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1054.4" y="787.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1057.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (3 samples, 0.06%)</title><rect x="1054.4" y="771.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (3 samples, 0.06%)</title><rect x="1054.4" y="755.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1057.4" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.06%)</title><rect x="1054.4" y="739.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1057.4" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.06%)</title><rect x="1054.4" y="723.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1057.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding$1.initialValue (3 samples, 0.06%)</title><rect x="1054.4" y="707.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1057.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (171 samples, 3.53%)</title><rect x="1055.2" y="803.0" width="41.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.2" y="814.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (168 samples, 3.47%)</title><rect x="1055.9" y="787.0" width="41.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1058.9" y="798.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.21%)</title><rect x="1055.9" y="771.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.9" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (158 samples, 3.26%)</title><rect x="1058.3" y="771.0" width="38.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1061.3" y="782.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (158 samples, 3.26%)</title><rect x="1058.3" y="755.0" width="38.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.3" y="766.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (157 samples, 3.24%)</title><rect x="1058.6" y="739.0" width="38.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1061.6" y="750.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (157 samples, 3.24%)</title><rect x="1058.6" y="723.0" width="38.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1061.6" y="734.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.14%)</title><rect x="1059.1" y="707.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1062.1" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="1059.3" y="691.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1062.3" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.06%)</title><rect x="1060.1" y="691.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1063.1" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (2 samples, 0.04%)</title><rect x="1060.3" y="675.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1063.3" y="686.0"></text>
</g>
<g>
<title>__send (148 samples, 3.06%)</title><rect x="1060.8" y="707.0" width="36.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1063.8" y="718.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (133 samples, 2.75%)</title><rect x="1064.4" y="691.0" width="32.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1067.4" y="702.0">en..</text>
</g>
<g>
<title>do_syscall_64 (132 samples, 2.73%)</title><rect x="1064.7" y="675.0" width="32.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1067.7" y="686.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (125 samples, 2.58%)</title><rect x="1066.4" y="659.0" width="30.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1069.4" y="670.0">__..</text>
</g>
<g>
<title>__sys_sendto (124 samples, 2.56%)</title><rect x="1066.4" y="643.0" width="30.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1069.4" y="654.0">__..</text>
</g>
<g>
<title>sock_sendmsg (121 samples, 2.50%)</title><rect x="1066.4" y="627.0" width="29.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1069.4" y="638.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (117 samples, 2.42%)</title><rect x="1066.9" y="611.0" width="28.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1069.9" y="622.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (117 samples, 2.42%)</title><rect x="1066.9" y="595.0" width="28.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1069.9" y="606.0">tc..</text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="1066.9" y="579.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1069.9" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (115 samples, 2.38%)</title><rect x="1067.4" y="579.0" width="28.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1070.4" y="590.0">tc..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.04%)</title><rect x="1067.6" y="563.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1070.6" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.04%)</title><rect x="1067.6" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1070.6" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.19%)</title><rect x="1068.1" y="563.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1071.1" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.19%)</title><rect x="1068.1" y="547.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1071.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (3 samples, 0.06%)</title><rect x="1068.1" y="531.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1071.1" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.06%)</title><rect x="1068.1" y="515.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1071.1" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.12%)</title><rect x="1068.8" y="531.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1071.8" y="542.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.04%)</title><rect x="1070.3" y="563.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1073.3" y="574.0"></text>
</g>
<g>
<title>tcp_push (98 samples, 2.02%)</title><rect x="1070.8" y="563.0" width="23.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1073.8" y="574.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (98 samples, 2.02%)</title><rect x="1070.8" y="547.0" width="23.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1073.8" y="558.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (97 samples, 2.00%)</title><rect x="1071.0" y="531.0" width="23.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1074.0" y="542.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (90 samples, 1.86%)</title><rect x="1071.8" y="515.0" width="21.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1074.8" y="526.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (86 samples, 1.78%)</title><rect x="1072.2" y="499.0" width="21.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1075.2" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (86 samples, 1.78%)</title><rect x="1072.2" y="483.0" width="21.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1075.2" y="494.0"></text>
</g>
<g>
<title>ip_local_out (83 samples, 1.71%)</title><rect x="1072.2" y="467.0" width="20.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1075.2" y="478.0"></text>
</g>
<g>
<title>ip_output (81 samples, 1.67%)</title><rect x="1072.5" y="451.0" width="19.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1075.5" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (73 samples, 1.51%)</title><rect x="1072.7" y="435.0" width="17.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1075.7" y="446.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="1072.7" y="419.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1075.7" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (71 samples, 1.47%)</title><rect x="1073.2" y="419.0" width="17.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1076.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (71 samples, 1.47%)</title><rect x="1073.2" y="403.0" width="17.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1076.2" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (61 samples, 1.26%)</title><rect x="1073.5" y="387.0" width="14.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1076.5" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (61 samples, 1.26%)</title><rect x="1073.5" y="371.0" width="14.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1076.5" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (61 samples, 1.26%)</title><rect x="1073.5" y="355.0" width="14.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1076.5" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (60 samples, 1.24%)</title><rect x="1073.5" y="339.0" width="14.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1076.5" y="350.0"></text>
</g>
<g>
<title>net_rx_action (57 samples, 1.18%)</title><rect x="1074.2" y="323.0" width="13.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1077.2" y="334.0"></text>
</g>
<g>
<title>process_backlog (55 samples, 1.14%)</title><rect x="1074.7" y="307.0" width="13.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1077.7" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (54 samples, 1.12%)</title><rect x="1074.9" y="291.0" width="13.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1077.9" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (54 samples, 1.12%)</title><rect x="1074.9" y="275.0" width="13.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1077.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv (53 samples, 1.10%)</title><rect x="1075.2" y="259.0" width="12.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1078.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (52 samples, 1.07%)</title><rect x="1075.4" y="243.0" width="12.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1078.4" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (51 samples, 1.05%)</title><rect x="1075.4" y="227.0" width="12.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1078.4" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (51 samples, 1.05%)</title><rect x="1075.4" y="211.0" width="12.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1078.4" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (51 samples, 1.05%)</title><rect x="1075.4" y="195.0" width="12.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1078.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (48 samples, 0.99%)</title><rect x="1076.1" y="179.0" width="11.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1079.1" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.08%)</title><rect x="1076.1" y="163.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1079.1" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.04%)</title><rect x="1077.4" y="163.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1080.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (39 samples, 0.81%)</title><rect x="1078.1" y="163.0" width="9.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1081.1" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (38 samples, 0.79%)</title><rect x="1078.3" y="147.0" width="9.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1081.3" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (10 samples, 0.21%)</title><rect x="1078.6" y="131.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1081.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (8 samples, 0.17%)</title><rect x="1079.1" y="115.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1082.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 0.17%)</title><rect x="1079.1" y="99.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1082.1" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.17%)</title><rect x="1079.1" y="83.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1082.1" y="94.0"></text>
</g>
<g>
<title>tcp_ack (21 samples, 0.43%)</title><rect x="1081.0" y="131.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1084.0" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.14%)</title><rect x="1082.7" y="115.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1085.7" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.06%)</title><rect x="1082.7" y="99.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1085.7" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.06%)</title><rect x="1082.7" y="83.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1085.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.08%)</title><rect x="1083.5" y="99.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1086.5" y="110.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.08%)</title><rect x="1083.5" y="83.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1086.5" y="94.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.04%)</title><rect x="1084.4" y="115.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1087.4" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.46 (2 samples, 0.04%)</title><rect x="1085.2" y="115.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1088.2" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="1086.9" y="131.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1089.9" y="142.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="1086.9" y="115.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1089.9" y="126.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.19%)</title><rect x="1088.3" y="387.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1091.3" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (9 samples, 0.19%)</title><rect x="1088.3" y="371.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1091.3" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.10%)</title><rect x="1088.6" y="355.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1091.6" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.10%)</title><rect x="1088.6" y="339.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1091.6" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.04%)</title><rect x="1088.6" y="323.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1091.6" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.04%)</title><rect x="1089.3" y="323.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1092.3" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.04%)</title><rect x="1090.0" y="355.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1093.0" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.12%)</title><rect x="1090.5" y="435.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1093.5" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.08%)</title><rect x="1091.0" y="419.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1094.0" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (3 samples, 0.06%)</title><rect x="1091.0" y="403.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1094.0" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (2 samples, 0.04%)</title><rect x="1091.0" y="387.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1094.0" y="398.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.04%)</title><rect x="1092.5" y="467.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1095.5" y="478.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.04%)</title><rect x="1093.2" y="499.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1096.2" y="510.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.04%)</title><rect x="1093.2" y="483.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1096.2" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.04%)</title><rect x="1093.2" y="467.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1096.2" y="478.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.04%)</title><rect x="1094.2" y="515.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1097.2" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.06%)</title><rect x="1094.7" y="563.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1097.7" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.04%)</title><rect x="1094.7" y="547.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1097.7" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.04%)</title><rect x="1095.4" y="611.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1098.4" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.06%)</title><rect x="1095.9" y="627.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1098.9" y="638.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="1095.9" y="611.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1098.9" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="1095.9" y="595.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1098.9" y="606.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="1095.9" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1098.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (63 samples, 1.30%)</title><rect x="1096.9" y="803.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (48 samples, 0.99%)</title><rect x="1100.5" y="787.0" width="11.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1103.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.08%)</title><rect x="1100.5" y="771.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1103.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.08%)</title><rect x="1100.5" y="755.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1103.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.04%)</title><rect x="1101.0" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1104.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (4 samples, 0.08%)</title><rect x="1101.5" y="771.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1104.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (4 samples, 0.08%)</title><rect x="1101.5" y="755.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1104.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (2 samples, 0.04%)</title><rect x="1102.0" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1105.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$106/1677529807.run (40 samples, 0.83%)</title><rect x="1102.5" y="771.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1105.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (40 samples, 0.83%)</title><rect x="1102.5" y="755.0" width="9.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1105.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (40 samples, 0.83%)</title><rect x="1102.5" y="739.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1105.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (37 samples, 0.76%)</title><rect x="1102.5" y="723.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1105.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (37 samples, 0.76%)</title><rect x="1102.5" y="707.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1105.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (35 samples, 0.72%)</title><rect x="1103.0" y="691.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1106.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (35 samples, 0.72%)</title><rect x="1103.0" y="675.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1106.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (18 samples, 0.37%)</title><rect x="1107.1" y="659.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1110.1" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (18 samples, 0.37%)</title><rect x="1107.1" y="643.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1110.1" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.10%)</title><rect x="1108.6" y="627.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1111.6" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.10%)</title><rect x="1108.6" y="611.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1111.6" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (7 samples, 0.14%)</title><rect x="1109.8" y="627.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1112.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/Value.getData (3 samples, 0.06%)</title><rect x="1111.5" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1114.5" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.06%)</title><rect x="1111.5" y="707.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1114.5" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1111.5" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1114.5" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1111.5" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1114.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1111.5" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1114.5" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1111.5" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1114.5" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.06%)</title><rect x="1111.5" y="627.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1114.5" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.06%)</title><rect x="1111.5" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1114.5" y="622.0"></text>
</g>
<g>
<title>[worker-7 tid=13525] (319 samples, 6.59%)</title><rect x="1112.2" y="963.0" width="77.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1115.2" y="974.0">[worker-7..</text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.08%)</title><rect x="1112.2" y="947.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1115.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="1112.2" y="931.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1115.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1112.2" y="915.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1115.2" y="926.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="1112.2" y="899.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1115.2" y="910.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="1112.7" y="915.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1115.7" y="926.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="1112.7" y="899.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1115.7" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.run (315 samples, 6.51%)</title><rect x="1113.2" y="947.0" width="76.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1116.2" y="958.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (315 samples, 6.51%)</title><rect x="1113.2" y="931.0" width="76.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.2" y="942.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (315 samples, 6.51%)</title><rect x="1113.2" y="915.0" width="76.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1116.2" y="926.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (54 samples, 1.12%)</title><rect x="1113.4" y="899.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1116.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (53 samples, 1.10%)</title><rect x="1113.4" y="883.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (38 samples, 0.79%)</title><rect x="1113.4" y="867.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1116.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.04%)</title><rect x="1113.4" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 0.08%)</title><rect x="1113.9" y="851.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1116.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.08%)</title><rect x="1113.9" y="835.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1116.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.08%)</title><rect x="1113.9" y="819.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1116.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.08%)</title><rect x="1113.9" y="803.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1116.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.06%)</title><rect x="1114.2" y="787.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1117.2" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.04%)</title><rect x="1114.4" y="771.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1117.4" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="1114.4" y="755.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1117.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 0.66%)</title><rect x="1114.9" y="851.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1117.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 0.66%)</title><rect x="1114.9" y="835.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.9" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.21%)</title><rect x="1114.9" y="819.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1117.9" y="830.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="1115.2" y="803.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1118.2" y="814.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.12%)</title><rect x="1115.6" y="803.0" width="1.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1118.6" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="1116.6" y="787.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1119.6" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="1116.6" y="771.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1119.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.45%)</title><rect x="1117.3" y="819.0" width="5.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1120.3" y="830.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (20 samples, 0.41%)</title><rect x="1117.8" y="803.0" width="4.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1120.8" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.17%)</title><rect x="1120.8" y="787.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1123.8" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.17%)</title><rect x="1120.8" y="771.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1123.8" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.12%)</title><rect x="1121.2" y="755.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1124.2" y="766.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.10%)</title><rect x="1121.5" y="739.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1124.5" y="750.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.10%)</title><rect x="1121.5" y="723.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1124.5" y="734.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.08%)</title><rect x="1121.7" y="707.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1124.7" y="718.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.06%)</title><rect x="1122.0" y="691.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1125.0" y="702.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (2 samples, 0.04%)</title><rect x="1122.2" y="675.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1125.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.08%)</title><rect x="1122.7" y="867.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1125.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.08%)</title><rect x="1122.7" y="851.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (4 samples, 0.08%)</title><rect x="1122.7" y="835.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1125.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.08%)</title><rect x="1122.7" y="819.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1125.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.08%)</title><rect x="1122.7" y="803.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1125.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.08%)</title><rect x="1122.7" y="787.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1125.7" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.06%)</title><rect x="1122.7" y="771.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1125.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.23%)</title><rect x="1123.7" y="867.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1126.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.23%)</title><rect x="1123.7" y="851.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1126.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.23%)</title><rect x="1123.7" y="835.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1126.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.23%)</title><rect x="1123.7" y="819.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1126.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.23%)</title><rect x="1123.7" y="803.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.7" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.23%)</title><rect x="1123.7" y="787.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1126.7" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.12%)</title><rect x="1124.9" y="771.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1127.9" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.12%)</title><rect x="1124.9" y="755.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1127.9" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.12%)</title><rect x="1124.9" y="739.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1127.9" y="750.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.12%)</title><rect x="1124.9" y="723.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1127.9" y="734.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.12%)</title><rect x="1124.9" y="707.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1127.9" y="718.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.08%)</title><rect x="1125.4" y="691.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1128.4" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.06%)</title><rect x="1125.6" y="675.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1128.6" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="1125.6" y="659.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1128.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$101/1597720911.run (260 samples, 5.37%)</title><rect x="1126.6" y="899.0" width="63.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.6" y="910.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$processRequest$6 (260 samples, 5.37%)</title><rect x="1126.6" y="883.0" width="63.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.6" y="894.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.process (260 samples, 5.37%)</title><rect x="1126.6" y="867.0" width="63.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.6" y="878.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService$$Lambda$95/863668112.process (260 samples, 5.37%)</title><rect x="1126.6" y="851.0" width="63.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1129.6" y="862.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.lambda$upsert$4 (260 samples, 5.37%)</title><rect x="1126.6" y="835.0" width="63.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.6" y="846.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/zvladn7/AsyncService.handleUpsert (260 samples, 5.37%)</title><rect x="1126.6" y="819.0" width="63.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.6" y="830.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/cache/LocalCache.computeIfPresent (14 samples, 0.29%)</title><rect x="1126.6" y="803.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.6" y="814.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache.compute (14 samples, 0.29%)</title><rect x="1126.6" y="787.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.6" y="798.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.compute (13 samples, 0.27%)</title><rect x="1126.6" y="771.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.6" y="782.0"></text>
</g>
<g>
<title>com/google/common/cache/LocalCache$Segment.removeLoadingValue (6 samples, 0.12%)</title><rect x="1128.1" y="755.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1131.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="1128.8" y="739.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1131.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="1128.8" y="723.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1131.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="1128.8" y="707.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1131.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1130.0" y="803.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1130.0" y="787.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (3 samples, 0.06%)</title><rect x="1130.0" y="771.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (3 samples, 0.06%)</title><rect x="1130.0" y="755.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1133.0" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.06%)</title><rect x="1130.0" y="739.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.0" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.06%)</title><rect x="1130.0" y="723.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding$1.initialValue (3 samples, 0.06%)</title><rect x="1130.0" y="707.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1133.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (175 samples, 3.62%)</title><rect x="1131.0" y="803.0" width="42.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1134.0" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (168 samples, 3.47%)</title><rect x="1132.7" y="787.0" width="41.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1135.7" y="798.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.21%)</title><rect x="1132.7" y="771.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1135.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (158 samples, 3.26%)</title><rect x="1135.1" y="771.0" width="38.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1138.1" y="782.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (158 samples, 3.26%)</title><rect x="1135.1" y="755.0" width="38.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1138.1" y="766.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (158 samples, 3.26%)</title><rect x="1135.1" y="739.0" width="38.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1138.1" y="750.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (158 samples, 3.26%)</title><rect x="1135.1" y="723.0" width="38.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1138.1" y="734.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.08%)</title><rect x="1135.1" y="707.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1138.1" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="1135.6" y="691.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1138.6" y="702.0"></text>
</g>
<g>
<title>__send (154 samples, 3.18%)</title><rect x="1136.1" y="707.0" width="37.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1139.1" y="718.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (140 samples, 2.89%)</title><rect x="1139.5" y="691.0" width="34.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1142.5" y="702.0">en..</text>
</g>
<g>
<title>do_syscall_64 (140 samples, 2.89%)</title><rect x="1139.5" y="675.0" width="34.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1142.5" y="686.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (137 samples, 2.83%)</title><rect x="1140.3" y="659.0" width="33.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1143.3" y="670.0">__..</text>
</g>
<g>
<title>__sys_sendto (136 samples, 2.81%)</title><rect x="1140.3" y="643.0" width="33.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1143.3" y="654.0">__..</text>
</g>
<g>
<title>sock_sendmsg (132 samples, 2.73%)</title><rect x="1140.8" y="627.0" width="32.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1143.8" y="638.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (130 samples, 2.69%)</title><rect x="1140.8" y="611.0" width="31.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1143.8" y="622.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (128 samples, 2.64%)</title><rect x="1141.2" y="595.0" width="31.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1144.2" y="606.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (126 samples, 2.60%)</title><rect x="1141.7" y="579.0" width="30.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1144.7" y="590.0">tc..</text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.17%)</title><rect x="1142.9" y="563.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1145.9" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.14%)</title><rect x="1143.2" y="547.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1146.2" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.56 (3 samples, 0.06%)</title><rect x="1143.2" y="531.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1146.2" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.04%)</title><rect x="1143.4" y="515.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1146.4" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.04%)</title><rect x="1143.4" y="499.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1146.4" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.04%)</title><rect x="1143.9" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1146.9" y="542.0"></text>
</g>
<g>
<title>tcp_push (111 samples, 2.29%)</title><rect x="1145.1" y="563.0" width="27.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1148.1" y="574.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (111 samples, 2.29%)</title><rect x="1145.1" y="547.0" width="27.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1148.1" y="558.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (111 samples, 2.29%)</title><rect x="1145.1" y="531.0" width="27.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1148.1" y="542.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (104 samples, 2.15%)</title><rect x="1145.4" y="515.0" width="25.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1148.4" y="526.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (99 samples, 2.05%)</title><rect x="1145.9" y="499.0" width="24.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1148.9" y="510.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (99 samples, 2.05%)</title><rect x="1145.9" y="483.0" width="24.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1148.9" y="494.0">_..</text>
</g>
<g>
<title>ip_local_out (94 samples, 1.94%)</title><rect x="1146.6" y="467.0" width="22.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1149.6" y="478.0">i..</text>
</g>
<g>
<title>ip_output (93 samples, 1.92%)</title><rect x="1146.8" y="451.0" width="22.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1149.8" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output (86 samples, 1.78%)</title><rect x="1147.1" y="435.0" width="21.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1150.1" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (82 samples, 1.69%)</title><rect x="1147.6" y="419.0" width="20.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1150.6" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (81 samples, 1.67%)</title><rect x="1147.8" y="403.0" width="19.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1150.8" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (70 samples, 1.45%)</title><rect x="1148.3" y="387.0" width="17.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1151.3" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (70 samples, 1.45%)</title><rect x="1148.3" y="371.0" width="17.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1151.3" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (69 samples, 1.43%)</title><rect x="1148.6" y="355.0" width="16.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1151.6" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (68 samples, 1.40%)</title><rect x="1148.6" y="339.0" width="16.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1151.6" y="350.0"></text>
</g>
<g>
<title>net_rx_action (66 samples, 1.36%)</title><rect x="1149.0" y="323.0" width="16.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1152.0" y="334.0"></text>
</g>
<g>
<title>process_backlog (63 samples, 1.30%)</title><rect x="1149.8" y="307.0" width="15.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1152.8" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (61 samples, 1.26%)</title><rect x="1150.0" y="291.0" width="14.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1153.0" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (61 samples, 1.26%)</title><rect x="1150.0" y="275.0" width="14.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1153.0" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.04%)</title><rect x="1150.0" y="259.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1153.0" y="270.0"></text>
</g>
<g>
<title>ip_rcv (58 samples, 1.20%)</title><rect x="1150.5" y="259.0" width="14.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1153.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (56 samples, 1.16%)</title><rect x="1151.0" y="243.0" width="13.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1154.0" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (54 samples, 1.12%)</title><rect x="1151.2" y="227.0" width="13.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1154.2" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (53 samples, 1.10%)</title><rect x="1151.5" y="211.0" width="12.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1154.5" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (52 samples, 1.07%)</title><rect x="1151.5" y="195.0" width="12.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1154.5" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (50 samples, 1.03%)</title><rect x="1152.0" y="179.0" width="12.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1155.0" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.08%)</title><rect x="1152.2" y="163.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1155.2" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.14%)</title><rect x="1153.7" y="163.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1156.7" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.06%)</title><rect x="1153.9" y="147.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1156.9" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.06%)</title><rect x="1154.6" y="147.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1157.6" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.06%)</title><rect x="1154.6" y="131.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1157.6" y="142.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (2 samples, 0.04%)</title><rect x="1154.9" y="115.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1157.9" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (35 samples, 0.72%)</title><rect x="1155.4" y="163.0" width="8.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1158.4" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (33 samples, 0.68%)</title><rect x="1155.9" y="147.0" width="8.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1158.9" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (14 samples, 0.29%)</title><rect x="1157.3" y="131.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1160.3" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (14 samples, 0.29%)</title><rect x="1157.3" y="115.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1160.3" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.27%)</title><rect x="1157.3" y="99.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1160.3" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.27%)</title><rect x="1157.3" y="83.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1160.3" y="94.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.17%)</title><rect x="1160.7" y="131.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1163.7" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.08%)</title><rect x="1161.0" y="115.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1164.0" y="126.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="1161.2" y="99.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1164.2" y="110.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.04%)</title><rect x="1161.2" y="83.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1164.2" y="94.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.04%)</title><rect x="1162.2" y="115.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1165.2" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="1162.7" y="131.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1165.7" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.04%)</title><rect x="1163.4" y="131.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1166.4" y="142.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.19%)</title><rect x="1165.4" y="387.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1168.4" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.17%)</title><rect x="1165.4" y="371.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1168.4" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.10%)</title><rect x="1165.6" y="355.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1168.6" y="366.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.06%)</title><rect x="1165.9" y="339.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1168.9" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.04%)</title><rect x="1166.8" y="355.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1169.8" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.08%)</title><rect x="1168.1" y="435.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1171.1" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.08%)</title><rect x="1168.1" y="419.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1171.1" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (4 samples, 0.08%)</title><rect x="1168.1" y="403.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1171.1" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (4 samples, 0.08%)</title><rect x="1168.1" y="387.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1171.1" y="398.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.64 (2 samples, 0.04%)</title><rect x="1168.3" y="371.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1171.3" y="382.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (2 samples, 0.04%)</title><rect x="1169.0" y="435.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1172.0" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.04%)</title><rect x="1169.5" y="467.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1172.5" y="478.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.06%)</title><rect x="1170.0" y="499.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1173.0" y="510.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.04%)</title><rect x="1170.3" y="483.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1173.3" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.04%)</title><rect x="1170.3" y="467.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1173.3" y="478.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.06%)</title><rect x="1171.0" y="515.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1174.0" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="1172.9" y="627.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1175.9" y="638.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="1172.9" y="611.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1175.9" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="1172.9" y="595.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1175.9" y="606.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="1172.9" y="579.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1175.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.upsert (67 samples, 1.38%)</title><rect x="1173.7" y="803.0" width="16.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.execute (52 samples, 1.07%)</title><rect x="1177.3" y="787.0" width="12.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1180.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.06%)</title><rect x="1177.3" y="771.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1180.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.06%)</title><rect x="1177.3" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1180.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.06%)</title><rect x="1177.3" y="739.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1180.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl$$Lambda$106/1677529807.run (48 samples, 0.99%)</title><rect x="1178.3" y="771.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1181.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/LsmDAOImpl.lambda$upsert$5 (48 samples, 0.99%)</title><rect x="1178.3" y="755.0" width="11.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1181.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/zvladn7/MemoryTable.upsert (48 samples, 0.99%)</title><rect x="1178.3" y="739.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1181.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (46 samples, 0.95%)</title><rect x="1178.5" y="723.0" width="11.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1181.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (45 samples, 0.93%)</title><rect x="1178.8" y="707.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1181.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (39 samples, 0.81%)</title><rect x="1180.2" y="691.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1183.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (39 samples, 0.81%)</title><rect x="1180.2" y="675.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1183.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.39%)</title><rect x="1185.1" y="659.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1188.1" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (19 samples, 0.39%)</title><rect x="1185.1" y="643.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.1" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.14%)</title><rect x="1186.8" y="627.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.8" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (7 samples, 0.14%)</title><rect x="1186.8" y="611.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.8" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (5 samples, 0.10%)</title><rect x="1188.5" y="627.0" width="1.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1191.5" y="638.0"></text>
</g>
</g>
</svg>
